# source: https://api-euwest.graphcms.com/v1/ck0qr5av4094801d49206aeqn/master
# timestamp: Thu Dec 26 2019 17:28:05 GMT+0300 (Moscow Standard Time)

type AdviceLounge implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  daySchedule: DaySchedule
  speaker: Speaker
  expertise: String
}

"""A connection to a list of items."""
type AdviceLoungeConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AdviceLoungeEdge]!
  aggregate: AggregateAdviceLounge!
}

input AdviceLoungeCreateInput {
  status: Status
  expertise: String
  daySchedule: DayScheduleCreateOneWithoutAdviceLoungesInput
  speaker: SpeakerCreateOneWithoutAdviceLoungesInput
}

input AdviceLoungeCreateManyWithoutDayScheduleInput {
  create: [AdviceLoungeCreateWithoutDayScheduleInput!]
  connect: [AdviceLoungeWhereUniqueInput!]
}

input AdviceLoungeCreateManyWithoutSpeakerInput {
  create: [AdviceLoungeCreateWithoutSpeakerInput!]
  connect: [AdviceLoungeWhereUniqueInput!]
}

input AdviceLoungeCreateWithoutDayScheduleInput {
  status: Status
  expertise: String
  speaker: SpeakerCreateOneWithoutAdviceLoungesInput
}

input AdviceLoungeCreateWithoutSpeakerInput {
  status: Status
  expertise: String
  daySchedule: DayScheduleCreateOneWithoutAdviceLoungesInput
}

"""An edge in a connection."""
type AdviceLoungeEdge {
  """The item at the end of the edge."""
  node: AdviceLounge!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AdviceLoungeOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  expertise_ASC
  expertise_DESC
}

type AdviceLoungePreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  expertise: String
}

input AdviceLoungeScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [AdviceLoungeScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AdviceLoungeScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AdviceLoungeScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  expertise: String

  """All values that are not equal to given value."""
  expertise_not: String

  """All values that are contained in given list."""
  expertise_in: [String!]

  """All values that are not contained in given list."""
  expertise_not_in: [String!]

  """All values less than the given value."""
  expertise_lt: String

  """All values less than or equal the given value."""
  expertise_lte: String

  """All values greater than the given value."""
  expertise_gt: String

  """All values greater than or equal the given value."""
  expertise_gte: String

  """All values containing the given string."""
  expertise_contains: String

  """All values not containing the given string."""
  expertise_not_contains: String

  """All values starting with the given string."""
  expertise_starts_with: String

  """All values not starting with the given string."""
  expertise_not_starts_with: String

  """All values ending with the given string."""
  expertise_ends_with: String

  """All values not ending with the given string."""
  expertise_not_ends_with: String
}

type AdviceLoungeSubscriptionPayload {
  mutation: MutationType!
  node: AdviceLounge
  updatedFields: [String!]
  previousValues: AdviceLoungePreviousValues
}

input AdviceLoungeSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AdviceLoungeSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AdviceLoungeSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AdviceLoungeSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AdviceLoungeWhereInput
}

input AdviceLoungeUpdateInput {
  status: Status
  expertise: String
  daySchedule: DayScheduleUpdateOneWithoutAdviceLoungesInput
  speaker: SpeakerUpdateOneWithoutAdviceLoungesInput
}

input AdviceLoungeUpdateManyDataInput {
  status: Status
  expertise: String
}

input AdviceLoungeUpdateManyMutationInput {
  status: Status
  expertise: String
}

input AdviceLoungeUpdateManyWithoutDayScheduleInput {
  create: [AdviceLoungeCreateWithoutDayScheduleInput!]
  connect: [AdviceLoungeWhereUniqueInput!]
  set: [AdviceLoungeWhereUniqueInput!]
  disconnect: [AdviceLoungeWhereUniqueInput!]
  delete: [AdviceLoungeWhereUniqueInput!]
  update: [AdviceLoungeUpdateWithWhereUniqueWithoutDayScheduleInput!]
  updateMany: [AdviceLoungeUpdateManyWithWhereNestedInput!]
  deleteMany: [AdviceLoungeScalarWhereInput!]
  upsert: [AdviceLoungeUpsertWithWhereUniqueWithoutDayScheduleInput!]
}

input AdviceLoungeUpdateManyWithoutSpeakerInput {
  create: [AdviceLoungeCreateWithoutSpeakerInput!]
  connect: [AdviceLoungeWhereUniqueInput!]
  set: [AdviceLoungeWhereUniqueInput!]
  disconnect: [AdviceLoungeWhereUniqueInput!]
  delete: [AdviceLoungeWhereUniqueInput!]
  update: [AdviceLoungeUpdateWithWhereUniqueWithoutSpeakerInput!]
  updateMany: [AdviceLoungeUpdateManyWithWhereNestedInput!]
  deleteMany: [AdviceLoungeScalarWhereInput!]
  upsert: [AdviceLoungeUpsertWithWhereUniqueWithoutSpeakerInput!]
}

input AdviceLoungeUpdateManyWithWhereNestedInput {
  where: AdviceLoungeScalarWhereInput!
  data: AdviceLoungeUpdateManyDataInput!
}

input AdviceLoungeUpdateWithoutDayScheduleDataInput {
  status: Status
  expertise: String
  speaker: SpeakerUpdateOneWithoutAdviceLoungesInput
}

input AdviceLoungeUpdateWithoutSpeakerDataInput {
  status: Status
  expertise: String
  daySchedule: DayScheduleUpdateOneWithoutAdviceLoungesInput
}

input AdviceLoungeUpdateWithWhereUniqueWithoutDayScheduleInput {
  where: AdviceLoungeWhereUniqueInput!
  data: AdviceLoungeUpdateWithoutDayScheduleDataInput!
}

input AdviceLoungeUpdateWithWhereUniqueWithoutSpeakerInput {
  where: AdviceLoungeWhereUniqueInput!
  data: AdviceLoungeUpdateWithoutSpeakerDataInput!
}

input AdviceLoungeUpsertWithWhereUniqueWithoutDayScheduleInput {
  where: AdviceLoungeWhereUniqueInput!
  update: AdviceLoungeUpdateWithoutDayScheduleDataInput!
  create: AdviceLoungeCreateWithoutDayScheduleInput!
}

input AdviceLoungeUpsertWithWhereUniqueWithoutSpeakerInput {
  where: AdviceLoungeWhereUniqueInput!
  update: AdviceLoungeUpdateWithoutSpeakerDataInput!
  create: AdviceLoungeCreateWithoutSpeakerInput!
}

input AdviceLoungeWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [AdviceLoungeWhereInput!]

  """Logical OR on all given filters."""
  OR: [AdviceLoungeWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AdviceLoungeWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  expertise: String

  """All values that are not equal to given value."""
  expertise_not: String

  """All values that are contained in given list."""
  expertise_in: [String!]

  """All values that are not contained in given list."""
  expertise_not_in: [String!]

  """All values less than the given value."""
  expertise_lt: String

  """All values less than or equal the given value."""
  expertise_lte: String

  """All values greater than the given value."""
  expertise_gt: String

  """All values greater than or equal the given value."""
  expertise_gte: String

  """All values containing the given string."""
  expertise_contains: String

  """All values not containing the given string."""
  expertise_not_contains: String

  """All values starting with the given string."""
  expertise_starts_with: String

  """All values not starting with the given string."""
  expertise_not_starts_with: String

  """All values ending with the given string."""
  expertise_ends_with: String

  """All values not ending with the given string."""
  expertise_not_ends_with: String
  daySchedule: DayScheduleWhereInput
  speaker: SpeakerWhereInput
}

input AdviceLoungeWhereUniqueInput {
  id: ID
}

type AggregateAdviceLounge {
  count: Int!
}

type AggregateAsset {
  count: Int!
}

type AggregateConferenceBrand {
  count: Int!
}

type AggregateConferenceEvent {
  count: Int!
}

type AggregateDaySchedule {
  count: Int!
}

type AggregateExtended {
  count: Int!
}

type AggregateFaq {
  count: Int!
}

type AggregateJob {
  count: Int!
}

type AggregateMc {
  count: Int!
}

type AggregatePage {
  count: Int!
}

type AggregatePieceOfData {
  count: Int!
}

type AggregatePieceOfSpeakerInfo {
  count: Int!
}

type AggregatePieceOfSponsorInfo {
  count: Int!
}

type AggregatePieceOfText {
  count: Int!
}

type AggregateSdf {
  count: Int!
}

type AggregateSpeaker {
  count: Int!
}

type AggregateSponsor {
  count: Int!
}

type AggregateTalk {
  count: Int!
}

type AggregateTrack {
  count: Int!
}

type AggregateWorkshop {
  count: Int!
}

type Asset implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker(where: SpeakerWhereInput, orderBy: SpeakerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Speaker!]
  avatarSponsor(where: SponsorWhereInput, orderBy: SponsorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sponsor!]
  avatarPieceOfSpeakerInfo(where: PieceOfSpeakerInfoWhereInput, orderBy: PieceOfSpeakerInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfSpeakerInfo!]
  filePieceOfData(where: PieceOfDataWhereInput, orderBy: PieceOfDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfData!]
  imageJob(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
  avatarPieceOfSponsorInfo(where: PieceOfSponsorInfoWhereInput, orderBy: PieceOfSponsorInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfSponsorInfo!]
  imageExtended(where: ExtendedWhereInput, orderBy: ExtendedOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Extended!]

  """Get the url for the asset with provided transformations applied."""
  url(transformation: AssetTransformationInput): String!
}

"""A connection to a list of items."""
type AssetConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AssetEdge]!
  aggregate: AggregateAsset!
}

input AssetCreateInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetCreateManyWithoutFilePieceOfDataInput {
  upload: [AssetUploadWithoutFilePieceOfDataInput!]
  create: [AssetCreateWithoutFilePieceOfDataInput!]
  connect: [AssetWhereUniqueInput!]
}

input AssetCreateOneWithoutAvatarPieceOfSpeakerInfoInput {
  upload: AssetUploadWithoutAvatarPieceOfSpeakerInfoInput
  create: AssetCreateWithoutAvatarPieceOfSpeakerInfoInput
  connect: AssetWhereUniqueInput
}

input AssetCreateOneWithoutAvatarPieceOfSponsorInfoInput {
  upload: AssetUploadWithoutAvatarPieceOfSponsorInfoInput
  create: AssetCreateWithoutAvatarPieceOfSponsorInfoInput
  connect: AssetWhereUniqueInput
}

input AssetCreateOneWithoutAvatarSpeakerInput {
  upload: AssetUploadWithoutAvatarSpeakerInput
  create: AssetCreateWithoutAvatarSpeakerInput
  connect: AssetWhereUniqueInput
}

input AssetCreateOneWithoutAvatarSponsorInput {
  upload: AssetUploadWithoutAvatarSponsorInput
  create: AssetCreateWithoutAvatarSponsorInput
  connect: AssetWhereUniqueInput
}

input AssetCreateOneWithoutImageExtendedInput {
  upload: AssetUploadWithoutImageExtendedInput
  create: AssetCreateWithoutImageExtendedInput
  connect: AssetWhereUniqueInput
}

input AssetCreateOneWithoutImageJobInput {
  upload: AssetUploadWithoutImageJobInput
  create: AssetCreateWithoutImageJobInput
  connect: AssetWhereUniqueInput
}

input AssetCreateWithoutAvatarPieceOfSpeakerInfoInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetCreateWithoutAvatarPieceOfSponsorInfoInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetCreateWithoutAvatarSpeakerInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetCreateWithoutAvatarSponsorInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetCreateWithoutFilePieceOfDataInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetCreateWithoutImageExtendedInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
}

input AssetCreateWithoutImageJobInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

"""An edge in a connection."""
type AssetEdge {
  """The item at the end of the edge."""
  node: Asset!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AssetOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  handle_ASC
  handle_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  width_ASC
  width_DESC
  size_ASC
  size_DESC
  mimeType_ASC
  mimeType_DESC
}

type AssetPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
}

input AssetScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [AssetScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  handle: String

  """All values that are not equal to given value."""
  handle_not: String

  """All values that are contained in given list."""
  handle_in: [String!]

  """All values that are not contained in given list."""
  handle_not_in: [String!]

  """All values less than the given value."""
  handle_lt: String

  """All values less than or equal the given value."""
  handle_lte: String

  """All values greater than the given value."""
  handle_gt: String

  """All values greater than or equal the given value."""
  handle_gte: String

  """All values containing the given string."""
  handle_contains: String

  """All values not containing the given string."""
  handle_not_contains: String

  """All values starting with the given string."""
  handle_starts_with: String

  """All values not starting with the given string."""
  handle_not_starts_with: String

  """All values ending with the given string."""
  handle_ends_with: String

  """All values not ending with the given string."""
  handle_not_ends_with: String
  fileName: String

  """All values that are not equal to given value."""
  fileName_not: String

  """All values that are contained in given list."""
  fileName_in: [String!]

  """All values that are not contained in given list."""
  fileName_not_in: [String!]

  """All values less than the given value."""
  fileName_lt: String

  """All values less than or equal the given value."""
  fileName_lte: String

  """All values greater than the given value."""
  fileName_gt: String

  """All values greater than or equal the given value."""
  fileName_gte: String

  """All values containing the given string."""
  fileName_contains: String

  """All values not containing the given string."""
  fileName_not_contains: String

  """All values starting with the given string."""
  fileName_starts_with: String

  """All values not starting with the given string."""
  fileName_not_starts_with: String

  """All values ending with the given string."""
  fileName_ends_with: String

  """All values not ending with the given string."""
  fileName_not_ends_with: String
  height: Float

  """All values that are not equal to given value."""
  height_not: Float

  """All values that are contained in given list."""
  height_in: [Float!]

  """All values that are not contained in given list."""
  height_not_in: [Float!]

  """All values less than the given value."""
  height_lt: Float

  """All values less than or equal the given value."""
  height_lte: Float

  """All values greater than the given value."""
  height_gt: Float

  """All values greater than or equal the given value."""
  height_gte: Float
  width: Float

  """All values that are not equal to given value."""
  width_not: Float

  """All values that are contained in given list."""
  width_in: [Float!]

  """All values that are not contained in given list."""
  width_not_in: [Float!]

  """All values less than the given value."""
  width_lt: Float

  """All values less than or equal the given value."""
  width_lte: Float

  """All values greater than the given value."""
  width_gt: Float

  """All values greater than or equal the given value."""
  width_gte: Float
  size: Float

  """All values that are not equal to given value."""
  size_not: Float

  """All values that are contained in given list."""
  size_in: [Float!]

  """All values that are not contained in given list."""
  size_not_in: [Float!]

  """All values less than the given value."""
  size_lt: Float

  """All values less than or equal the given value."""
  size_lte: Float

  """All values greater than the given value."""
  size_gt: Float

  """All values greater than or equal the given value."""
  size_gte: Float
  mimeType: String

  """All values that are not equal to given value."""
  mimeType_not: String

  """All values that are contained in given list."""
  mimeType_in: [String!]

  """All values that are not contained in given list."""
  mimeType_not_in: [String!]

  """All values less than the given value."""
  mimeType_lt: String

  """All values less than or equal the given value."""
  mimeType_lte: String

  """All values greater than the given value."""
  mimeType_gt: String

  """All values greater than or equal the given value."""
  mimeType_gte: String

  """All values containing the given string."""
  mimeType_contains: String

  """All values not containing the given string."""
  mimeType_not_contains: String

  """All values starting with the given string."""
  mimeType_starts_with: String

  """All values not starting with the given string."""
  mimeType_not_starts_with: String

  """All values ending with the given string."""
  mimeType_ends_with: String

  """All values not ending with the given string."""
  mimeType_not_ends_with: String
}

type AssetSubscriptionPayload {
  mutation: MutationType!
  node: Asset
  updatedFields: [String!]
  previousValues: AssetPreviousValues
}

input AssetSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AssetSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AssetWhereInput
}

"""Transformations for Assets"""
input AssetTransformationInput {
  image: ImageTransformationInput
  document: DocumentTransformationInput

  """
  Pass `true` if you want to validate the passed transformation parameters
  """
  validateOptions: Boolean = false
}

input AssetUpdateInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerUpdateManyWithoutAvatarInput
  avatarSponsor: SponsorUpdateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoUpdateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataUpdateManyWithoutFileInput
  imageJob: JobUpdateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoUpdateManyWithoutAvatarInput
  imageExtended: ExtendedUpdateManyWithoutImageInput
}

input AssetUpdateManyDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
}

input AssetUpdateManyMutationInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
}

input AssetUpdateManyWithoutFilePieceOfDataInput {
  create: [AssetCreateWithoutFilePieceOfDataInput!]
  connect: [AssetWhereUniqueInput!]
  set: [AssetWhereUniqueInput!]
  disconnect: [AssetWhereUniqueInput!]
  delete: [AssetWhereUniqueInput!]
  update: [AssetUpdateWithWhereUniqueWithoutFilePieceOfDataInput!]
  updateMany: [AssetUpdateManyWithWhereNestedInput!]
  deleteMany: [AssetScalarWhereInput!]
  upsert: [AssetUpsertWithWhereUniqueWithoutFilePieceOfDataInput!]
}

input AssetUpdateManyWithWhereNestedInput {
  where: AssetScalarWhereInput!
  data: AssetUpdateManyDataInput!
}

input AssetUpdateOneWithoutAvatarPieceOfSpeakerInfoInput {
  create: AssetCreateWithoutAvatarPieceOfSpeakerInfoInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutAvatarPieceOfSpeakerInfoDataInput
  upsert: AssetUpsertWithoutAvatarPieceOfSpeakerInfoInput
}

input AssetUpdateOneWithoutAvatarPieceOfSponsorInfoInput {
  create: AssetCreateWithoutAvatarPieceOfSponsorInfoInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutAvatarPieceOfSponsorInfoDataInput
  upsert: AssetUpsertWithoutAvatarPieceOfSponsorInfoInput
}

input AssetUpdateOneWithoutAvatarSpeakerInput {
  create: AssetCreateWithoutAvatarSpeakerInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutAvatarSpeakerDataInput
  upsert: AssetUpsertWithoutAvatarSpeakerInput
}

input AssetUpdateOneWithoutAvatarSponsorInput {
  create: AssetCreateWithoutAvatarSponsorInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutAvatarSponsorDataInput
  upsert: AssetUpsertWithoutAvatarSponsorInput
}

input AssetUpdateOneWithoutImageExtendedInput {
  create: AssetCreateWithoutImageExtendedInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutImageExtendedDataInput
  upsert: AssetUpsertWithoutImageExtendedInput
}

input AssetUpdateOneWithoutImageJobInput {
  create: AssetCreateWithoutImageJobInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutImageJobDataInput
  upsert: AssetUpsertWithoutImageJobInput
}

input AssetUpdateWithoutAvatarPieceOfSpeakerInfoDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerUpdateManyWithoutAvatarInput
  avatarSponsor: SponsorUpdateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataUpdateManyWithoutFileInput
  imageJob: JobUpdateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoUpdateManyWithoutAvatarInput
  imageExtended: ExtendedUpdateManyWithoutImageInput
}

input AssetUpdateWithoutAvatarPieceOfSponsorInfoDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerUpdateManyWithoutAvatarInput
  avatarSponsor: SponsorUpdateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoUpdateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataUpdateManyWithoutFileInput
  imageJob: JobUpdateManyWithoutImageInput
  imageExtended: ExtendedUpdateManyWithoutImageInput
}

input AssetUpdateWithoutAvatarSpeakerDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSponsor: SponsorUpdateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoUpdateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataUpdateManyWithoutFileInput
  imageJob: JobUpdateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoUpdateManyWithoutAvatarInput
  imageExtended: ExtendedUpdateManyWithoutImageInput
}

input AssetUpdateWithoutAvatarSponsorDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerUpdateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoUpdateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataUpdateManyWithoutFileInput
  imageJob: JobUpdateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoUpdateManyWithoutAvatarInput
  imageExtended: ExtendedUpdateManyWithoutImageInput
}

input AssetUpdateWithoutFilePieceOfDataDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerUpdateManyWithoutAvatarInput
  avatarSponsor: SponsorUpdateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoUpdateManyWithoutAvatarInput
  imageJob: JobUpdateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoUpdateManyWithoutAvatarInput
  imageExtended: ExtendedUpdateManyWithoutImageInput
}

input AssetUpdateWithoutImageExtendedDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerUpdateManyWithoutAvatarInput
  avatarSponsor: SponsorUpdateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoUpdateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataUpdateManyWithoutFileInput
  imageJob: JobUpdateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoUpdateManyWithoutAvatarInput
}

input AssetUpdateWithoutImageJobDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  avatarSpeaker: SpeakerUpdateManyWithoutAvatarInput
  avatarSponsor: SponsorUpdateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoUpdateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataUpdateManyWithoutFileInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoUpdateManyWithoutAvatarInput
  imageExtended: ExtendedUpdateManyWithoutImageInput
}

input AssetUpdateWithWhereUniqueWithoutFilePieceOfDataInput {
  where: AssetWhereUniqueInput!
  data: AssetUpdateWithoutFilePieceOfDataDataInput!
}

input AssetUploadInput {
  url: String!
  status: Status
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetUploadWithoutAvatarPieceOfSpeakerInfoInput {
  url: String!
  status: Status
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetUploadWithoutAvatarPieceOfSponsorInfoInput {
  url: String!
  status: Status
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetUploadWithoutAvatarSpeakerInput {
  url: String!
  status: Status
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetUploadWithoutAvatarSponsorInput {
  url: String!
  status: Status
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetUploadWithoutFilePieceOfDataInput {
  url: String!
  status: Status
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetUploadWithoutImageExtendedInput {
  url: String!
  status: Status
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  imageJob: JobCreateManyWithoutImageInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
}

input AssetUploadWithoutImageJobInput {
  url: String!
  status: Status
  avatarSpeaker: SpeakerCreateManyWithoutAvatarInput
  avatarSponsor: SponsorCreateManyWithoutAvatarInput
  avatarPieceOfSpeakerInfo: PieceOfSpeakerInfoCreateManyWithoutAvatarInput
  filePieceOfData: PieceOfDataCreateManyWithoutFileInput
  avatarPieceOfSponsorInfo: PieceOfSponsorInfoCreateManyWithoutAvatarInput
  imageExtended: ExtendedCreateManyWithoutImageInput
}

input AssetUpsertWithoutAvatarPieceOfSpeakerInfoInput {
  update: AssetUpdateWithoutAvatarPieceOfSpeakerInfoDataInput!
  create: AssetCreateWithoutAvatarPieceOfSpeakerInfoInput!
}

input AssetUpsertWithoutAvatarPieceOfSponsorInfoInput {
  update: AssetUpdateWithoutAvatarPieceOfSponsorInfoDataInput!
  create: AssetCreateWithoutAvatarPieceOfSponsorInfoInput!
}

input AssetUpsertWithoutAvatarSpeakerInput {
  update: AssetUpdateWithoutAvatarSpeakerDataInput!
  create: AssetCreateWithoutAvatarSpeakerInput!
}

input AssetUpsertWithoutAvatarSponsorInput {
  update: AssetUpdateWithoutAvatarSponsorDataInput!
  create: AssetCreateWithoutAvatarSponsorInput!
}

input AssetUpsertWithoutImageExtendedInput {
  update: AssetUpdateWithoutImageExtendedDataInput!
  create: AssetCreateWithoutImageExtendedInput!
}

input AssetUpsertWithoutImageJobInput {
  update: AssetUpdateWithoutImageJobDataInput!
  create: AssetCreateWithoutImageJobInput!
}

input AssetUpsertWithWhereUniqueWithoutFilePieceOfDataInput {
  where: AssetWhereUniqueInput!
  update: AssetUpdateWithoutFilePieceOfDataDataInput!
  create: AssetCreateWithoutFilePieceOfDataInput!
}

input AssetWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  handle: String

  """All values that are not equal to given value."""
  handle_not: String

  """All values that are contained in given list."""
  handle_in: [String!]

  """All values that are not contained in given list."""
  handle_not_in: [String!]

  """All values less than the given value."""
  handle_lt: String

  """All values less than or equal the given value."""
  handle_lte: String

  """All values greater than the given value."""
  handle_gt: String

  """All values greater than or equal the given value."""
  handle_gte: String

  """All values containing the given string."""
  handle_contains: String

  """All values not containing the given string."""
  handle_not_contains: String

  """All values starting with the given string."""
  handle_starts_with: String

  """All values not starting with the given string."""
  handle_not_starts_with: String

  """All values ending with the given string."""
  handle_ends_with: String

  """All values not ending with the given string."""
  handle_not_ends_with: String
  fileName: String

  """All values that are not equal to given value."""
  fileName_not: String

  """All values that are contained in given list."""
  fileName_in: [String!]

  """All values that are not contained in given list."""
  fileName_not_in: [String!]

  """All values less than the given value."""
  fileName_lt: String

  """All values less than or equal the given value."""
  fileName_lte: String

  """All values greater than the given value."""
  fileName_gt: String

  """All values greater than or equal the given value."""
  fileName_gte: String

  """All values containing the given string."""
  fileName_contains: String

  """All values not containing the given string."""
  fileName_not_contains: String

  """All values starting with the given string."""
  fileName_starts_with: String

  """All values not starting with the given string."""
  fileName_not_starts_with: String

  """All values ending with the given string."""
  fileName_ends_with: String

  """All values not ending with the given string."""
  fileName_not_ends_with: String
  height: Float

  """All values that are not equal to given value."""
  height_not: Float

  """All values that are contained in given list."""
  height_in: [Float!]

  """All values that are not contained in given list."""
  height_not_in: [Float!]

  """All values less than the given value."""
  height_lt: Float

  """All values less than or equal the given value."""
  height_lte: Float

  """All values greater than the given value."""
  height_gt: Float

  """All values greater than or equal the given value."""
  height_gte: Float
  width: Float

  """All values that are not equal to given value."""
  width_not: Float

  """All values that are contained in given list."""
  width_in: [Float!]

  """All values that are not contained in given list."""
  width_not_in: [Float!]

  """All values less than the given value."""
  width_lt: Float

  """All values less than or equal the given value."""
  width_lte: Float

  """All values greater than the given value."""
  width_gt: Float

  """All values greater than or equal the given value."""
  width_gte: Float
  size: Float

  """All values that are not equal to given value."""
  size_not: Float

  """All values that are contained in given list."""
  size_in: [Float!]

  """All values that are not contained in given list."""
  size_not_in: [Float!]

  """All values less than the given value."""
  size_lt: Float

  """All values less than or equal the given value."""
  size_lte: Float

  """All values greater than the given value."""
  size_gt: Float

  """All values greater than or equal the given value."""
  size_gte: Float
  mimeType: String

  """All values that are not equal to given value."""
  mimeType_not: String

  """All values that are contained in given list."""
  mimeType_in: [String!]

  """All values that are not contained in given list."""
  mimeType_not_in: [String!]

  """All values less than the given value."""
  mimeType_lt: String

  """All values less than or equal the given value."""
  mimeType_lte: String

  """All values greater than the given value."""
  mimeType_gt: String

  """All values greater than or equal the given value."""
  mimeType_gte: String

  """All values containing the given string."""
  mimeType_contains: String

  """All values not containing the given string."""
  mimeType_not_contains: String

  """All values starting with the given string."""
  mimeType_starts_with: String

  """All values not starting with the given string."""
  mimeType_not_starts_with: String

  """All values ending with the given string."""
  mimeType_ends_with: String

  """All values not ending with the given string."""
  mimeType_not_ends_with: String
  avatarSpeaker_every: SpeakerWhereInput
  avatarSpeaker_some: SpeakerWhereInput
  avatarSpeaker_none: SpeakerWhereInput
  avatarSponsor_every: SponsorWhereInput
  avatarSponsor_some: SponsorWhereInput
  avatarSponsor_none: SponsorWhereInput
  avatarPieceOfSpeakerInfo_every: PieceOfSpeakerInfoWhereInput
  avatarPieceOfSpeakerInfo_some: PieceOfSpeakerInfoWhereInput
  avatarPieceOfSpeakerInfo_none: PieceOfSpeakerInfoWhereInput
  filePieceOfData_every: PieceOfDataWhereInput
  filePieceOfData_some: PieceOfDataWhereInput
  filePieceOfData_none: PieceOfDataWhereInput
  imageJob_every: JobWhereInput
  imageJob_some: JobWhereInput
  imageJob_none: JobWhereInput
  avatarPieceOfSponsorInfo_every: PieceOfSponsorInfoWhereInput
  avatarPieceOfSponsorInfo_some: PieceOfSponsorInfoWhereInput
  avatarPieceOfSponsorInfo_none: PieceOfSponsorInfoWhereInput
  imageExtended_every: ExtendedWhereInput
  imageExtended_some: ExtendedWhereInput
  imageExtended_none: ExtendedWhereInput
}

input AssetWhereUniqueInput {
  id: ID
  handle: String
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  hex: HEX!
  rgba: RGBA!
  css: String!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  hex: HEX
  rgba: RGBAInput
}

type ConferenceBrand implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  city: String
  url: String!
  conferenceEvents(where: ConferenceEventWhereInput, orderBy: ConferenceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ConferenceEvent!]
  title: ConferenceTitle!
  slackUrl: String
  twitterUrl: String
  facebookUrl: String
  instagramUrl: String
  tiktokUrl: String
  linkedinUrl: String
  mediumUrl: String
  youtubeUrl: String
  codeOfConductIntro: String
  codeOfConductMain: String
}

"""A connection to a list of items."""
type ConferenceBrandConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ConferenceBrandEdge]!
  aggregate: AggregateConferenceBrand!
}

input ConferenceBrandCreateInput {
  status: Status
  city: String
  url: String!
  title: ConferenceTitle!
  slackUrl: String
  twitterUrl: String
  facebookUrl: String
  mediumUrl: String
  youtubeUrl: String
  codeOfConductIntro: String
  codeOfConductMain: String
  conferenceEvents: ConferenceEventCreateManyWithoutConferenceBrandInput
}

input ConferenceBrandCreateOneWithoutConferenceEventsInput {
  create: ConferenceBrandCreateWithoutConferenceEventsInput
  connect: ConferenceBrandWhereUniqueInput
}

input ConferenceBrandCreateWithoutConferenceEventsInput {
  status: Status
  city: String
  url: String!
  title: ConferenceTitle!
  slackUrl: String
  twitterUrl: String
  facebookUrl: String
  mediumUrl: String
  youtubeUrl: String
  codeOfConductIntro: String
  codeOfConductMain: String
}

"""An edge in a connection."""
type ConferenceBrandEdge {
  """The item at the end of the edge."""
  node: ConferenceBrand!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ConferenceBrandOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  city_ASC
  city_DESC
  url_ASC
  url_DESC
  title_ASC
  title_DESC
  slackUrl_ASC
  slackUrl_DESC
  twitterUrl_ASC
  twitterUrl_DESC
  facebookUrl_ASC
  facebookUrl_DESC
  mediumUrl_ASC
  mediumUrl_DESC
  youtubeUrl_ASC
  youtubeUrl_DESC
  codeOfConductIntro_ASC
  codeOfConductIntro_DESC
  codeOfConductMain_ASC
  codeOfConductMain_DESC
}

type ConferenceBrandPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  city: String
  url: String!
  title: ConferenceTitle!
  slackUrl: String
  twitterUrl: String
  facebookUrl: String
  mediumUrl: String
  youtubeUrl: String
  codeOfConductIntro: String
  codeOfConductMain: String
}

type ConferenceBrandSubscriptionPayload {
  mutation: MutationType!
  node: ConferenceBrand
  updatedFields: [String!]
  previousValues: ConferenceBrandPreviousValues
}

input ConferenceBrandSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ConferenceBrandSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConferenceBrandSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConferenceBrandSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ConferenceBrandWhereInput
}

input ConferenceBrandUpdateInput {
  status: Status
  city: String
  url: String
  title: ConferenceTitle
  slackUrl: String
  twitterUrl: String
  facebookUrl: String
  mediumUrl: String
  youtubeUrl: String
  codeOfConductIntro: String
  codeOfConductMain: String
  conferenceEvents: ConferenceEventUpdateManyWithoutConferenceBrandInput
}

input ConferenceBrandUpdateManyMutationInput {
  status: Status
  city: String
  url: String
  title: ConferenceTitle
  slackUrl: String
  twitterUrl: String
  facebookUrl: String
  mediumUrl: String
  youtubeUrl: String
  codeOfConductIntro: String
  codeOfConductMain: String
}

input ConferenceBrandUpdateOneWithoutConferenceEventsInput {
  create: ConferenceBrandCreateWithoutConferenceEventsInput
  connect: ConferenceBrandWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceBrandUpdateWithoutConferenceEventsDataInput
  upsert: ConferenceBrandUpsertWithoutConferenceEventsInput
}

input ConferenceBrandUpdateWithoutConferenceEventsDataInput {
  status: Status
  city: String
  url: String
  title: ConferenceTitle
  slackUrl: String
  twitterUrl: String
  facebookUrl: String
  mediumUrl: String
  youtubeUrl: String
  codeOfConductIntro: String
  codeOfConductMain: String
}

input ConferenceBrandUpsertWithoutConferenceEventsInput {
  update: ConferenceBrandUpdateWithoutConferenceEventsDataInput!
  create: ConferenceBrandCreateWithoutConferenceEventsInput!
}

input ConferenceBrandWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [ConferenceBrandWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConferenceBrandWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConferenceBrandWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  title: ConferenceTitle

  """All values that are not equal to given value."""
  title_not: ConferenceTitle

  """All values that are contained in given list."""
  title_in: [ConferenceTitle!]

  """All values that are not contained in given list."""
  title_not_in: [ConferenceTitle!]
  slackUrl: String

  """All values that are not equal to given value."""
  slackUrl_not: String

  """All values that are contained in given list."""
  slackUrl_in: [String!]

  """All values that are not contained in given list."""
  slackUrl_not_in: [String!]

  """All values less than the given value."""
  slackUrl_lt: String

  """All values less than or equal the given value."""
  slackUrl_lte: String

  """All values greater than the given value."""
  slackUrl_gt: String

  """All values greater than or equal the given value."""
  slackUrl_gte: String

  """All values containing the given string."""
  slackUrl_contains: String

  """All values not containing the given string."""
  slackUrl_not_contains: String

  """All values starting with the given string."""
  slackUrl_starts_with: String

  """All values not starting with the given string."""
  slackUrl_not_starts_with: String

  """All values ending with the given string."""
  slackUrl_ends_with: String

  """All values not ending with the given string."""
  slackUrl_not_ends_with: String
  twitterUrl: String

  """All values that are not equal to given value."""
  twitterUrl_not: String

  """All values that are contained in given list."""
  twitterUrl_in: [String!]

  """All values that are not contained in given list."""
  twitterUrl_not_in: [String!]

  """All values less than the given value."""
  twitterUrl_lt: String

  """All values less than or equal the given value."""
  twitterUrl_lte: String

  """All values greater than the given value."""
  twitterUrl_gt: String

  """All values greater than or equal the given value."""
  twitterUrl_gte: String

  """All values containing the given string."""
  twitterUrl_contains: String

  """All values not containing the given string."""
  twitterUrl_not_contains: String

  """All values starting with the given string."""
  twitterUrl_starts_with: String

  """All values not starting with the given string."""
  twitterUrl_not_starts_with: String

  """All values ending with the given string."""
  twitterUrl_ends_with: String

  """All values not ending with the given string."""
  twitterUrl_not_ends_with: String
  facebookUrl: String

  """All values that are not equal to given value."""
  facebookUrl_not: String

  """All values that are contained in given list."""
  facebookUrl_in: [String!]

  """All values that are not contained in given list."""
  facebookUrl_not_in: [String!]

  """All values less than the given value."""
  facebookUrl_lt: String

  """All values less than or equal the given value."""
  facebookUrl_lte: String

  """All values greater than the given value."""
  facebookUrl_gt: String

  """All values greater than or equal the given value."""
  facebookUrl_gte: String

  """All values containing the given string."""
  facebookUrl_contains: String

  """All values not containing the given string."""
  facebookUrl_not_contains: String

  """All values starting with the given string."""
  facebookUrl_starts_with: String

  """All values not starting with the given string."""
  facebookUrl_not_starts_with: String

  """All values ending with the given string."""
  facebookUrl_ends_with: String

  """All values not ending with the given string."""
  facebookUrl_not_ends_with: String
  mediumUrl: String

  """All values that are not equal to given value."""
  mediumUrl_not: String

  """All values that are contained in given list."""
  mediumUrl_in: [String!]

  """All values that are not contained in given list."""
  mediumUrl_not_in: [String!]

  """All values less than the given value."""
  mediumUrl_lt: String

  """All values less than or equal the given value."""
  mediumUrl_lte: String

  """All values greater than the given value."""
  mediumUrl_gt: String

  """All values greater than or equal the given value."""
  mediumUrl_gte: String

  """All values containing the given string."""
  mediumUrl_contains: String

  """All values not containing the given string."""
  mediumUrl_not_contains: String

  """All values starting with the given string."""
  mediumUrl_starts_with: String

  """All values not starting with the given string."""
  mediumUrl_not_starts_with: String

  """All values ending with the given string."""
  mediumUrl_ends_with: String

  """All values not ending with the given string."""
  mediumUrl_not_ends_with: String
  youtubeUrl: String

  """All values that are not equal to given value."""
  youtubeUrl_not: String

  """All values that are contained in given list."""
  youtubeUrl_in: [String!]

  """All values that are not contained in given list."""
  youtubeUrl_not_in: [String!]

  """All values less than the given value."""
  youtubeUrl_lt: String

  """All values less than or equal the given value."""
  youtubeUrl_lte: String

  """All values greater than the given value."""
  youtubeUrl_gt: String

  """All values greater than or equal the given value."""
  youtubeUrl_gte: String

  """All values containing the given string."""
  youtubeUrl_contains: String

  """All values not containing the given string."""
  youtubeUrl_not_contains: String

  """All values starting with the given string."""
  youtubeUrl_starts_with: String

  """All values not starting with the given string."""
  youtubeUrl_not_starts_with: String

  """All values ending with the given string."""
  youtubeUrl_ends_with: String

  """All values not ending with the given string."""
  youtubeUrl_not_ends_with: String
  codeOfConductIntro: String

  """All values that are not equal to given value."""
  codeOfConductIntro_not: String

  """All values that are contained in given list."""
  codeOfConductIntro_in: [String!]

  """All values that are not contained in given list."""
  codeOfConductIntro_not_in: [String!]

  """All values less than the given value."""
  codeOfConductIntro_lt: String

  """All values less than or equal the given value."""
  codeOfConductIntro_lte: String

  """All values greater than the given value."""
  codeOfConductIntro_gt: String

  """All values greater than or equal the given value."""
  codeOfConductIntro_gte: String

  """All values containing the given string."""
  codeOfConductIntro_contains: String

  """All values not containing the given string."""
  codeOfConductIntro_not_contains: String

  """All values starting with the given string."""
  codeOfConductIntro_starts_with: String

  """All values not starting with the given string."""
  codeOfConductIntro_not_starts_with: String

  """All values ending with the given string."""
  codeOfConductIntro_ends_with: String

  """All values not ending with the given string."""
  codeOfConductIntro_not_ends_with: String
  codeOfConductMain: String

  """All values that are not equal to given value."""
  codeOfConductMain_not: String

  """All values that are contained in given list."""
  codeOfConductMain_in: [String!]

  """All values that are not contained in given list."""
  codeOfConductMain_not_in: [String!]

  """All values less than the given value."""
  codeOfConductMain_lt: String

  """All values less than or equal the given value."""
  codeOfConductMain_lte: String

  """All values greater than the given value."""
  codeOfConductMain_gt: String

  """All values greater than or equal the given value."""
  codeOfConductMain_gte: String

  """All values containing the given string."""
  codeOfConductMain_contains: String

  """All values not containing the given string."""
  codeOfConductMain_not_contains: String

  """All values starting with the given string."""
  codeOfConductMain_starts_with: String

  """All values not starting with the given string."""
  codeOfConductMain_not_starts_with: String

  """All values ending with the given string."""
  codeOfConductMain_ends_with: String

  """All values not ending with the given string."""
  codeOfConductMain_not_ends_with: String
  conferenceEvents_every: ConferenceEventWhereInput
  conferenceEvents_some: ConferenceEventWhereInput
  conferenceEvents_none: ConferenceEventWhereInput
}

input ConferenceBrandWhereUniqueInput {
  id: ID
  title: ConferenceTitle
}

type ConferenceEvent implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  conferenceBrand: ConferenceBrand
  location: Location
  tracks(where: TrackWhereInput, orderBy: TrackOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Track!]
  daySchedules(where: DayScheduleWhereInput, orderBy: DayScheduleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DaySchedule!]
  speakers(where: SpeakerWhereInput, orderBy: SpeakerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Speaker!]
  talkRecordingsPlaylistUrl: String
  pages(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Page!]
  pieceOfTexts(where: PieceOfTextWhereInput, orderBy: PieceOfTextOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfText!]
  pieceOfSpeakerInfoes(where: PieceOfSpeakerInfoWhereInput, orderBy: PieceOfSpeakerInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfSpeakerInfo!]
  sponsors(where: SponsorWhereInput, orderBy: SponsorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sponsor!]
  pieceOfSponsorInfoes(where: PieceOfSponsorInfoWhereInput, orderBy: PieceOfSponsorInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfSponsorInfo!]
  year: EventYear
  title: String
  mcs(where: McWhereInput, orderBy: McOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Mc!]
  pieceOfDatas(where: PieceOfDataWhereInput, orderBy: PieceOfDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfData!]
  jobs(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
  openForTalks: Boolean
  faqs(where: FaqWhereInput, orderBy: FaqOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Faq!]
  extendeds(where: ExtendedWhereInput, orderBy: ExtendedOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Extended!]
  performanceTeam(where: SpeakerWhereInput, orderBy: SpeakerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Speaker!]
  committee(where: SpeakerWhereInput, orderBy: SpeakerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Speaker!]
}

"""A connection to a list of items."""
type ConferenceEventConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ConferenceEventEdge]!
  aggregate: AggregateConferenceEvent!
}

input ConferenceEventCreateInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateManyWithoutCommitteeInput {
  create: [ConferenceEventCreateWithoutCommitteeInput!]
  connect: [ConferenceEventWhereUniqueInput!]
}

input ConferenceEventCreateManyWithoutConferenceBrandInput {
  create: [ConferenceEventCreateWithoutConferenceBrandInput!]
  connect: [ConferenceEventWhereUniqueInput!]
}

input ConferenceEventCreateManyWithoutExtendedsInput {
  create: [ConferenceEventCreateWithoutExtendedsInput!]
  connect: [ConferenceEventWhereUniqueInput!]
}

input ConferenceEventCreateManyWithoutFaqsInput {
  create: [ConferenceEventCreateWithoutFaqsInput!]
  connect: [ConferenceEventWhereUniqueInput!]
}

input ConferenceEventCreateManyWithoutPerformanceTeamInput {
  create: [ConferenceEventCreateWithoutPerformanceTeamInput!]
  connect: [ConferenceEventWhereUniqueInput!]
}

input ConferenceEventCreateManyWithoutSpeakersInput {
  create: [ConferenceEventCreateWithoutSpeakersInput!]
  connect: [ConferenceEventWhereUniqueInput!]
}

input ConferenceEventCreateManyWithoutSponsorsInput {
  create: [ConferenceEventCreateWithoutSponsorsInput!]
  connect: [ConferenceEventWhereUniqueInput!]
}

input ConferenceEventCreateOneWithoutDaySchedulesInput {
  create: ConferenceEventCreateWithoutDaySchedulesInput
  connect: ConferenceEventWhereUniqueInput
}

input ConferenceEventCreateOneWithoutJobsInput {
  create: ConferenceEventCreateWithoutJobsInput
  connect: ConferenceEventWhereUniqueInput
}

input ConferenceEventCreateOneWithoutMcsInput {
  create: ConferenceEventCreateWithoutMcsInput
  connect: ConferenceEventWhereUniqueInput
}

input ConferenceEventCreateOneWithoutPagesInput {
  create: ConferenceEventCreateWithoutPagesInput
  connect: ConferenceEventWhereUniqueInput
}

input ConferenceEventCreateOneWithoutPieceOfDatasInput {
  create: ConferenceEventCreateWithoutPieceOfDatasInput
  connect: ConferenceEventWhereUniqueInput
}

input ConferenceEventCreateOneWithoutPieceOfSpeakerInfoesInput {
  create: ConferenceEventCreateWithoutPieceOfSpeakerInfoesInput
  connect: ConferenceEventWhereUniqueInput
}

input ConferenceEventCreateOneWithoutPieceOfSponsorInfoesInput {
  create: ConferenceEventCreateWithoutPieceOfSponsorInfoesInput
  connect: ConferenceEventWhereUniqueInput
}

input ConferenceEventCreateOneWithoutPieceOfTextsInput {
  create: ConferenceEventCreateWithoutPieceOfTextsInput
  connect: ConferenceEventWhereUniqueInput
}

input ConferenceEventCreateOneWithoutTracksInput {
  create: ConferenceEventCreateWithoutTracksInput
  connect: ConferenceEventWhereUniqueInput
}

input ConferenceEventCreateWithoutCommitteeInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
}

input ConferenceEventCreateWithoutConferenceBrandInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutDaySchedulesInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutExtendedsInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutFaqsInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutJobsInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutMcsInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutPagesInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutPerformanceTeamInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutPieceOfDatasInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutPieceOfSpeakerInfoesInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutPieceOfSponsorInfoesInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutPieceOfTextsInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutSpeakersInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutSponsorsInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  tracks: TrackCreateManyWithoutConferenceEventInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

input ConferenceEventCreateWithoutTracksInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandCreateOneWithoutConferenceEventsInput
  daySchedules: DayScheduleCreateManyWithoutConferenceEventInput
  speakers: SpeakerCreateManyWithoutConferenceEventsInput
  pages: PageCreateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextCreateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput
  sponsors: SponsorCreateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutConferenceEventInput
  mcs: McCreateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataCreateManyWithoutConferenceEventInput
  jobs: JobCreateManyWithoutConferenceEventInput
  faqs: FaqCreateManyWithoutConferenceEventsInput
  extendeds: ExtendedCreateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerCreateManyWithoutPerformanceForEventInput
  committee: SpeakerCreateManyWithoutConferenceCommitteeInput
}

"""An edge in a connection."""
type ConferenceEventEdge {
  """The item at the end of the edge."""
  node: ConferenceEvent!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ConferenceEventOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  location_ASC
  location_DESC
  talkRecordingsPlaylistUrl_ASC
  talkRecordingsPlaylistUrl_DESC
  year_ASC
  year_DESC
  title_ASC
  title_DESC
  openForTalks_ASC
  openForTalks_DESC
}

type ConferenceEventPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  location: Location
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
}

input ConferenceEventScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [ConferenceEventScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConferenceEventScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConferenceEventScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  talkRecordingsPlaylistUrl: String

  """All values that are not equal to given value."""
  talkRecordingsPlaylistUrl_not: String

  """All values that are contained in given list."""
  talkRecordingsPlaylistUrl_in: [String!]

  """All values that are not contained in given list."""
  talkRecordingsPlaylistUrl_not_in: [String!]

  """All values less than the given value."""
  talkRecordingsPlaylistUrl_lt: String

  """All values less than or equal the given value."""
  talkRecordingsPlaylistUrl_lte: String

  """All values greater than the given value."""
  talkRecordingsPlaylistUrl_gt: String

  """All values greater than or equal the given value."""
  talkRecordingsPlaylistUrl_gte: String

  """All values containing the given string."""
  talkRecordingsPlaylistUrl_contains: String

  """All values not containing the given string."""
  talkRecordingsPlaylistUrl_not_contains: String

  """All values starting with the given string."""
  talkRecordingsPlaylistUrl_starts_with: String

  """All values not starting with the given string."""
  talkRecordingsPlaylistUrl_not_starts_with: String

  """All values ending with the given string."""
  talkRecordingsPlaylistUrl_ends_with: String

  """All values not ending with the given string."""
  talkRecordingsPlaylistUrl_not_ends_with: String
  year: EventYear

  """All values that are not equal to given value."""
  year_not: EventYear

  """All values that are contained in given list."""
  year_in: [EventYear!]

  """All values that are not contained in given list."""
  year_not_in: [EventYear!]
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  openForTalks: Boolean

  """All values that are not equal to given value."""
  openForTalks_not: Boolean
}

type ConferenceEventSubscriptionPayload {
  mutation: MutationType!
  node: ConferenceEvent
  updatedFields: [String!]
  previousValues: ConferenceEventPreviousValues
}

input ConferenceEventSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ConferenceEventSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConferenceEventSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConferenceEventSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ConferenceEventWhereInput
}

input ConferenceEventUpdateInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateManyDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
}

input ConferenceEventUpdateManyMutationInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
}

input ConferenceEventUpdateManyWithoutCommitteeInput {
  create: [ConferenceEventCreateWithoutCommitteeInput!]
  connect: [ConferenceEventWhereUniqueInput!]
  set: [ConferenceEventWhereUniqueInput!]
  disconnect: [ConferenceEventWhereUniqueInput!]
  delete: [ConferenceEventWhereUniqueInput!]
  update: [ConferenceEventUpdateWithWhereUniqueWithoutCommitteeInput!]
  updateMany: [ConferenceEventUpdateManyWithWhereNestedInput!]
  deleteMany: [ConferenceEventScalarWhereInput!]
  upsert: [ConferenceEventUpsertWithWhereUniqueWithoutCommitteeInput!]
}

input ConferenceEventUpdateManyWithoutConferenceBrandInput {
  create: [ConferenceEventCreateWithoutConferenceBrandInput!]
  connect: [ConferenceEventWhereUniqueInput!]
  set: [ConferenceEventWhereUniqueInput!]
  disconnect: [ConferenceEventWhereUniqueInput!]
  delete: [ConferenceEventWhereUniqueInput!]
  update: [ConferenceEventUpdateWithWhereUniqueWithoutConferenceBrandInput!]
  updateMany: [ConferenceEventUpdateManyWithWhereNestedInput!]
  deleteMany: [ConferenceEventScalarWhereInput!]
  upsert: [ConferenceEventUpsertWithWhereUniqueWithoutConferenceBrandInput!]
}

input ConferenceEventUpdateManyWithoutExtendedsInput {
  create: [ConferenceEventCreateWithoutExtendedsInput!]
  connect: [ConferenceEventWhereUniqueInput!]
  set: [ConferenceEventWhereUniqueInput!]
  disconnect: [ConferenceEventWhereUniqueInput!]
  delete: [ConferenceEventWhereUniqueInput!]
  update: [ConferenceEventUpdateWithWhereUniqueWithoutExtendedsInput!]
  updateMany: [ConferenceEventUpdateManyWithWhereNestedInput!]
  deleteMany: [ConferenceEventScalarWhereInput!]
  upsert: [ConferenceEventUpsertWithWhereUniqueWithoutExtendedsInput!]
}

input ConferenceEventUpdateManyWithoutFaqsInput {
  create: [ConferenceEventCreateWithoutFaqsInput!]
  connect: [ConferenceEventWhereUniqueInput!]
  set: [ConferenceEventWhereUniqueInput!]
  disconnect: [ConferenceEventWhereUniqueInput!]
  delete: [ConferenceEventWhereUniqueInput!]
  update: [ConferenceEventUpdateWithWhereUniqueWithoutFaqsInput!]
  updateMany: [ConferenceEventUpdateManyWithWhereNestedInput!]
  deleteMany: [ConferenceEventScalarWhereInput!]
  upsert: [ConferenceEventUpsertWithWhereUniqueWithoutFaqsInput!]
}

input ConferenceEventUpdateManyWithoutPerformanceTeamInput {
  create: [ConferenceEventCreateWithoutPerformanceTeamInput!]
  connect: [ConferenceEventWhereUniqueInput!]
  set: [ConferenceEventWhereUniqueInput!]
  disconnect: [ConferenceEventWhereUniqueInput!]
  delete: [ConferenceEventWhereUniqueInput!]
  update: [ConferenceEventUpdateWithWhereUniqueWithoutPerformanceTeamInput!]
  updateMany: [ConferenceEventUpdateManyWithWhereNestedInput!]
  deleteMany: [ConferenceEventScalarWhereInput!]
  upsert: [ConferenceEventUpsertWithWhereUniqueWithoutPerformanceTeamInput!]
}

input ConferenceEventUpdateManyWithoutSpeakersInput {
  create: [ConferenceEventCreateWithoutSpeakersInput!]
  connect: [ConferenceEventWhereUniqueInput!]
  set: [ConferenceEventWhereUniqueInput!]
  disconnect: [ConferenceEventWhereUniqueInput!]
  delete: [ConferenceEventWhereUniqueInput!]
  update: [ConferenceEventUpdateWithWhereUniqueWithoutSpeakersInput!]
  updateMany: [ConferenceEventUpdateManyWithWhereNestedInput!]
  deleteMany: [ConferenceEventScalarWhereInput!]
  upsert: [ConferenceEventUpsertWithWhereUniqueWithoutSpeakersInput!]
}

input ConferenceEventUpdateManyWithoutSponsorsInput {
  create: [ConferenceEventCreateWithoutSponsorsInput!]
  connect: [ConferenceEventWhereUniqueInput!]
  set: [ConferenceEventWhereUniqueInput!]
  disconnect: [ConferenceEventWhereUniqueInput!]
  delete: [ConferenceEventWhereUniqueInput!]
  update: [ConferenceEventUpdateWithWhereUniqueWithoutSponsorsInput!]
  updateMany: [ConferenceEventUpdateManyWithWhereNestedInput!]
  deleteMany: [ConferenceEventScalarWhereInput!]
  upsert: [ConferenceEventUpsertWithWhereUniqueWithoutSponsorsInput!]
}

input ConferenceEventUpdateManyWithWhereNestedInput {
  where: ConferenceEventScalarWhereInput!
  data: ConferenceEventUpdateManyDataInput!
}

input ConferenceEventUpdateOneWithoutDaySchedulesInput {
  create: ConferenceEventCreateWithoutDaySchedulesInput
  connect: ConferenceEventWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceEventUpdateWithoutDaySchedulesDataInput
  upsert: ConferenceEventUpsertWithoutDaySchedulesInput
}

input ConferenceEventUpdateOneWithoutJobsInput {
  create: ConferenceEventCreateWithoutJobsInput
  connect: ConferenceEventWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceEventUpdateWithoutJobsDataInput
  upsert: ConferenceEventUpsertWithoutJobsInput
}

input ConferenceEventUpdateOneWithoutMcsInput {
  create: ConferenceEventCreateWithoutMcsInput
  connect: ConferenceEventWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceEventUpdateWithoutMcsDataInput
  upsert: ConferenceEventUpsertWithoutMcsInput
}

input ConferenceEventUpdateOneWithoutPagesInput {
  create: ConferenceEventCreateWithoutPagesInput
  connect: ConferenceEventWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceEventUpdateWithoutPagesDataInput
  upsert: ConferenceEventUpsertWithoutPagesInput
}

input ConferenceEventUpdateOneWithoutPieceOfDatasInput {
  create: ConferenceEventCreateWithoutPieceOfDatasInput
  connect: ConferenceEventWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceEventUpdateWithoutPieceOfDatasDataInput
  upsert: ConferenceEventUpsertWithoutPieceOfDatasInput
}

input ConferenceEventUpdateOneWithoutPieceOfSpeakerInfoesInput {
  create: ConferenceEventCreateWithoutPieceOfSpeakerInfoesInput
  connect: ConferenceEventWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceEventUpdateWithoutPieceOfSpeakerInfoesDataInput
  upsert: ConferenceEventUpsertWithoutPieceOfSpeakerInfoesInput
}

input ConferenceEventUpdateOneWithoutPieceOfSponsorInfoesInput {
  create: ConferenceEventCreateWithoutPieceOfSponsorInfoesInput
  connect: ConferenceEventWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceEventUpdateWithoutPieceOfSponsorInfoesDataInput
  upsert: ConferenceEventUpsertWithoutPieceOfSponsorInfoesInput
}

input ConferenceEventUpdateOneWithoutPieceOfTextsInput {
  create: ConferenceEventCreateWithoutPieceOfTextsInput
  connect: ConferenceEventWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceEventUpdateWithoutPieceOfTextsDataInput
  upsert: ConferenceEventUpsertWithoutPieceOfTextsInput
}

input ConferenceEventUpdateOneWithoutTracksInput {
  create: ConferenceEventCreateWithoutTracksInput
  connect: ConferenceEventWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ConferenceEventUpdateWithoutTracksDataInput
  upsert: ConferenceEventUpsertWithoutTracksInput
}

input ConferenceEventUpdateWithoutCommitteeDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
}

input ConferenceEventUpdateWithoutConferenceBrandDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutDaySchedulesDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutExtendedsDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutFaqsDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutJobsDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutMcsDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutPagesDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutPerformanceTeamDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutPieceOfDatasDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutPieceOfSpeakerInfoesDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutPieceOfSponsorInfoesDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutPieceOfTextsDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutSpeakersDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutSponsorsDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  tracks: TrackUpdateManyWithoutConferenceEventInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithoutTracksDataInput {
  status: Status
  location: LocationInput
  talkRecordingsPlaylistUrl: String
  year: EventYear
  title: String
  openForTalks: Boolean
  conferenceBrand: ConferenceBrandUpdateOneWithoutConferenceEventsInput
  daySchedules: DayScheduleUpdateManyWithoutConferenceEventInput
  speakers: SpeakerUpdateManyWithoutConferenceEventsInput
  pages: PageUpdateManyWithoutConferenceEventInput
  pieceOfTexts: PieceOfTextUpdateManyWithoutConferenceEventInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput
  sponsors: SponsorUpdateManyWithoutConferenceEventsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput
  mcs: McUpdateManyWithoutConferenceEventInput
  pieceOfDatas: PieceOfDataUpdateManyWithoutConferenceEventInput
  jobs: JobUpdateManyWithoutConferenceEventInput
  faqs: FaqUpdateManyWithoutConferenceEventsInput
  extendeds: ExtendedUpdateManyWithoutConferenceEventsInput
  performanceTeam: SpeakerUpdateManyWithoutPerformanceForEventInput
  committee: SpeakerUpdateManyWithoutConferenceCommitteeInput
}

input ConferenceEventUpdateWithWhereUniqueWithoutCommitteeInput {
  where: ConferenceEventWhereUniqueInput!
  data: ConferenceEventUpdateWithoutCommitteeDataInput!
}

input ConferenceEventUpdateWithWhereUniqueWithoutConferenceBrandInput {
  where: ConferenceEventWhereUniqueInput!
  data: ConferenceEventUpdateWithoutConferenceBrandDataInput!
}

input ConferenceEventUpdateWithWhereUniqueWithoutExtendedsInput {
  where: ConferenceEventWhereUniqueInput!
  data: ConferenceEventUpdateWithoutExtendedsDataInput!
}

input ConferenceEventUpdateWithWhereUniqueWithoutFaqsInput {
  where: ConferenceEventWhereUniqueInput!
  data: ConferenceEventUpdateWithoutFaqsDataInput!
}

input ConferenceEventUpdateWithWhereUniqueWithoutPerformanceTeamInput {
  where: ConferenceEventWhereUniqueInput!
  data: ConferenceEventUpdateWithoutPerformanceTeamDataInput!
}

input ConferenceEventUpdateWithWhereUniqueWithoutSpeakersInput {
  where: ConferenceEventWhereUniqueInput!
  data: ConferenceEventUpdateWithoutSpeakersDataInput!
}

input ConferenceEventUpdateWithWhereUniqueWithoutSponsorsInput {
  where: ConferenceEventWhereUniqueInput!
  data: ConferenceEventUpdateWithoutSponsorsDataInput!
}

input ConferenceEventUpsertWithoutDaySchedulesInput {
  update: ConferenceEventUpdateWithoutDaySchedulesDataInput!
  create: ConferenceEventCreateWithoutDaySchedulesInput!
}

input ConferenceEventUpsertWithoutJobsInput {
  update: ConferenceEventUpdateWithoutJobsDataInput!
  create: ConferenceEventCreateWithoutJobsInput!
}

input ConferenceEventUpsertWithoutMcsInput {
  update: ConferenceEventUpdateWithoutMcsDataInput!
  create: ConferenceEventCreateWithoutMcsInput!
}

input ConferenceEventUpsertWithoutPagesInput {
  update: ConferenceEventUpdateWithoutPagesDataInput!
  create: ConferenceEventCreateWithoutPagesInput!
}

input ConferenceEventUpsertWithoutPieceOfDatasInput {
  update: ConferenceEventUpdateWithoutPieceOfDatasDataInput!
  create: ConferenceEventCreateWithoutPieceOfDatasInput!
}

input ConferenceEventUpsertWithoutPieceOfSpeakerInfoesInput {
  update: ConferenceEventUpdateWithoutPieceOfSpeakerInfoesDataInput!
  create: ConferenceEventCreateWithoutPieceOfSpeakerInfoesInput!
}

input ConferenceEventUpsertWithoutPieceOfSponsorInfoesInput {
  update: ConferenceEventUpdateWithoutPieceOfSponsorInfoesDataInput!
  create: ConferenceEventCreateWithoutPieceOfSponsorInfoesInput!
}

input ConferenceEventUpsertWithoutPieceOfTextsInput {
  update: ConferenceEventUpdateWithoutPieceOfTextsDataInput!
  create: ConferenceEventCreateWithoutPieceOfTextsInput!
}

input ConferenceEventUpsertWithoutTracksInput {
  update: ConferenceEventUpdateWithoutTracksDataInput!
  create: ConferenceEventCreateWithoutTracksInput!
}

input ConferenceEventUpsertWithWhereUniqueWithoutCommitteeInput {
  where: ConferenceEventWhereUniqueInput!
  update: ConferenceEventUpdateWithoutCommitteeDataInput!
  create: ConferenceEventCreateWithoutCommitteeInput!
}

input ConferenceEventUpsertWithWhereUniqueWithoutConferenceBrandInput {
  where: ConferenceEventWhereUniqueInput!
  update: ConferenceEventUpdateWithoutConferenceBrandDataInput!
  create: ConferenceEventCreateWithoutConferenceBrandInput!
}

input ConferenceEventUpsertWithWhereUniqueWithoutExtendedsInput {
  where: ConferenceEventWhereUniqueInput!
  update: ConferenceEventUpdateWithoutExtendedsDataInput!
  create: ConferenceEventCreateWithoutExtendedsInput!
}

input ConferenceEventUpsertWithWhereUniqueWithoutFaqsInput {
  where: ConferenceEventWhereUniqueInput!
  update: ConferenceEventUpdateWithoutFaqsDataInput!
  create: ConferenceEventCreateWithoutFaqsInput!
}

input ConferenceEventUpsertWithWhereUniqueWithoutPerformanceTeamInput {
  where: ConferenceEventWhereUniqueInput!
  update: ConferenceEventUpdateWithoutPerformanceTeamDataInput!
  create: ConferenceEventCreateWithoutPerformanceTeamInput!
}

input ConferenceEventUpsertWithWhereUniqueWithoutSpeakersInput {
  where: ConferenceEventWhereUniqueInput!
  update: ConferenceEventUpdateWithoutSpeakersDataInput!
  create: ConferenceEventCreateWithoutSpeakersInput!
}

input ConferenceEventUpsertWithWhereUniqueWithoutSponsorsInput {
  where: ConferenceEventWhereUniqueInput!
  update: ConferenceEventUpdateWithoutSponsorsDataInput!
  create: ConferenceEventCreateWithoutSponsorsInput!
}

input ConferenceEventWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [ConferenceEventWhereInput!]

  """Logical OR on all given filters."""
  OR: [ConferenceEventWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ConferenceEventWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  talkRecordingsPlaylistUrl: String

  """All values that are not equal to given value."""
  talkRecordingsPlaylistUrl_not: String

  """All values that are contained in given list."""
  talkRecordingsPlaylistUrl_in: [String!]

  """All values that are not contained in given list."""
  talkRecordingsPlaylistUrl_not_in: [String!]

  """All values less than the given value."""
  talkRecordingsPlaylistUrl_lt: String

  """All values less than or equal the given value."""
  talkRecordingsPlaylistUrl_lte: String

  """All values greater than the given value."""
  talkRecordingsPlaylistUrl_gt: String

  """All values greater than or equal the given value."""
  talkRecordingsPlaylistUrl_gte: String

  """All values containing the given string."""
  talkRecordingsPlaylistUrl_contains: String

  """All values not containing the given string."""
  talkRecordingsPlaylistUrl_not_contains: String

  """All values starting with the given string."""
  talkRecordingsPlaylistUrl_starts_with: String

  """All values not starting with the given string."""
  talkRecordingsPlaylistUrl_not_starts_with: String

  """All values ending with the given string."""
  talkRecordingsPlaylistUrl_ends_with: String

  """All values not ending with the given string."""
  talkRecordingsPlaylistUrl_not_ends_with: String
  year: EventYear

  """All values that are not equal to given value."""
  year_not: EventYear

  """All values that are contained in given list."""
  year_in: [EventYear!]

  """All values that are not contained in given list."""
  year_not_in: [EventYear!]
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  openForTalks: Boolean

  """All values that are not equal to given value."""
  openForTalks_not: Boolean
  conferenceBrand: ConferenceBrandWhereInput
  tracks_every: TrackWhereInput
  tracks_some: TrackWhereInput
  tracks_none: TrackWhereInput
  daySchedules_every: DayScheduleWhereInput
  daySchedules_some: DayScheduleWhereInput
  daySchedules_none: DayScheduleWhereInput
  speakers_every: SpeakerWhereInput
  speakers_some: SpeakerWhereInput
  speakers_none: SpeakerWhereInput
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
  pieceOfTexts_every: PieceOfTextWhereInput
  pieceOfTexts_some: PieceOfTextWhereInput
  pieceOfTexts_none: PieceOfTextWhereInput
  pieceOfSpeakerInfoes_every: PieceOfSpeakerInfoWhereInput
  pieceOfSpeakerInfoes_some: PieceOfSpeakerInfoWhereInput
  pieceOfSpeakerInfoes_none: PieceOfSpeakerInfoWhereInput
  sponsors_every: SponsorWhereInput
  sponsors_some: SponsorWhereInput
  sponsors_none: SponsorWhereInput
  pieceOfSponsorInfoes_every: PieceOfSponsorInfoWhereInput
  pieceOfSponsorInfoes_some: PieceOfSponsorInfoWhereInput
  pieceOfSponsorInfoes_none: PieceOfSponsorInfoWhereInput
  mcs_every: McWhereInput
  mcs_some: McWhereInput
  mcs_none: McWhereInput
  pieceOfDatas_every: PieceOfDataWhereInput
  pieceOfDatas_some: PieceOfDataWhereInput
  pieceOfDatas_none: PieceOfDataWhereInput
  jobs_every: JobWhereInput
  jobs_some: JobWhereInput
  jobs_none: JobWhereInput
  faqs_every: FaqWhereInput
  faqs_some: FaqWhereInput
  faqs_none: FaqWhereInput
  extendeds_every: ExtendedWhereInput
  extendeds_some: ExtendedWhereInput
  extendeds_none: ExtendedWhereInput
  performanceTeam_every: SpeakerWhereInput
  performanceTeam_some: SpeakerWhereInput
  performanceTeam_none: SpeakerWhereInput
  committee_every: SpeakerWhereInput
  committee_some: SpeakerWhereInput
  committee_none: SpeakerWhereInput
}

input ConferenceEventWhereUniqueInput {
  id: ID
}

enum ConferenceTitle {
  React_Amsterdam
  React_Day_Berlin
  React_Advanced_London
  Amsterdam_JSNation
}

scalar DateTime

type DaySchedule implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  date: DateTime!
  conferenceEvent: ConferenceEvent
  talks(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Talk!]
  workshops(where: WorkshopWhereInput, orderBy: WorkshopOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Workshop!]
  adviceLounges(where: AdviceLoungeWhereInput, orderBy: AdviceLoungeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdviceLounge!]
  additionalEvents: Json
}

"""A connection to a list of items."""
type DayScheduleConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DayScheduleEdge]!
  aggregate: AggregateDaySchedule!
}

input DayScheduleCreateInput {
  status: Status
  date: DateTime!
  additionalEvents: Json
  conferenceEvent: ConferenceEventCreateOneWithoutDaySchedulesInput
  talks: TalkCreateManyWithoutDayScheduleInput
  workshops: WorkshopCreateManyWithoutDaySchedulesInput
  adviceLounges: AdviceLoungeCreateManyWithoutDayScheduleInput
}

input DayScheduleCreateManyWithoutConferenceEventInput {
  create: [DayScheduleCreateWithoutConferenceEventInput!]
  connect: [DayScheduleWhereUniqueInput!]
}

input DayScheduleCreateManyWithoutWorkshopsInput {
  create: [DayScheduleCreateWithoutWorkshopsInput!]
  connect: [DayScheduleWhereUniqueInput!]
}

input DayScheduleCreateOneWithoutAdviceLoungesInput {
  create: DayScheduleCreateWithoutAdviceLoungesInput
  connect: DayScheduleWhereUniqueInput
}

input DayScheduleCreateOneWithoutTalksInput {
  create: DayScheduleCreateWithoutTalksInput
  connect: DayScheduleWhereUniqueInput
}

input DayScheduleCreateWithoutAdviceLoungesInput {
  status: Status
  date: DateTime!
  additionalEvents: Json
  conferenceEvent: ConferenceEventCreateOneWithoutDaySchedulesInput
  talks: TalkCreateManyWithoutDayScheduleInput
  workshops: WorkshopCreateManyWithoutDaySchedulesInput
}

input DayScheduleCreateWithoutConferenceEventInput {
  status: Status
  date: DateTime!
  additionalEvents: Json
  talks: TalkCreateManyWithoutDayScheduleInput
  workshops: WorkshopCreateManyWithoutDaySchedulesInput
  adviceLounges: AdviceLoungeCreateManyWithoutDayScheduleInput
}

input DayScheduleCreateWithoutTalksInput {
  status: Status
  date: DateTime!
  additionalEvents: Json
  conferenceEvent: ConferenceEventCreateOneWithoutDaySchedulesInput
  workshops: WorkshopCreateManyWithoutDaySchedulesInput
  adviceLounges: AdviceLoungeCreateManyWithoutDayScheduleInput
}

input DayScheduleCreateWithoutWorkshopsInput {
  status: Status
  date: DateTime!
  additionalEvents: Json
  conferenceEvent: ConferenceEventCreateOneWithoutDaySchedulesInput
  talks: TalkCreateManyWithoutDayScheduleInput
  adviceLounges: AdviceLoungeCreateManyWithoutDayScheduleInput
}

"""An edge in a connection."""
type DayScheduleEdge {
  """The item at the end of the edge."""
  node: DaySchedule!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DayScheduleOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  date_ASC
  date_DESC
  additionalEvents_ASC
  additionalEvents_DESC
}

type DaySchedulePreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  date: DateTime!
  additionalEvents: Json
}

input DayScheduleScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [DayScheduleScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [DayScheduleScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DayScheduleScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  date: DateTime

  """All values that are not equal to given value."""
  date_not: DateTime

  """All values that are contained in given list."""
  date_in: [DateTime!]

  """All values that are not contained in given list."""
  date_not_in: [DateTime!]

  """All values less than the given value."""
  date_lt: DateTime

  """All values less than or equal the given value."""
  date_lte: DateTime

  """All values greater than the given value."""
  date_gt: DateTime

  """All values greater than or equal the given value."""
  date_gte: DateTime
}

type DayScheduleSubscriptionPayload {
  mutation: MutationType!
  node: DaySchedule
  updatedFields: [String!]
  previousValues: DaySchedulePreviousValues
}

input DayScheduleSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DayScheduleSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DayScheduleSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DayScheduleSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DayScheduleWhereInput
}

input DayScheduleUpdateInput {
  status: Status
  date: DateTime
  additionalEvents: Json
  conferenceEvent: ConferenceEventUpdateOneWithoutDaySchedulesInput
  talks: TalkUpdateManyWithoutDayScheduleInput
  workshops: WorkshopUpdateManyWithoutDaySchedulesInput
  adviceLounges: AdviceLoungeUpdateManyWithoutDayScheduleInput
}

input DayScheduleUpdateManyDataInput {
  status: Status
  date: DateTime
  additionalEvents: Json
}

input DayScheduleUpdateManyMutationInput {
  status: Status
  date: DateTime
  additionalEvents: Json
}

input DayScheduleUpdateManyWithoutConferenceEventInput {
  create: [DayScheduleCreateWithoutConferenceEventInput!]
  connect: [DayScheduleWhereUniqueInput!]
  set: [DayScheduleWhereUniqueInput!]
  disconnect: [DayScheduleWhereUniqueInput!]
  delete: [DayScheduleWhereUniqueInput!]
  update: [DayScheduleUpdateWithWhereUniqueWithoutConferenceEventInput!]
  updateMany: [DayScheduleUpdateManyWithWhereNestedInput!]
  deleteMany: [DayScheduleScalarWhereInput!]
  upsert: [DayScheduleUpsertWithWhereUniqueWithoutConferenceEventInput!]
}

input DayScheduleUpdateManyWithoutWorkshopsInput {
  create: [DayScheduleCreateWithoutWorkshopsInput!]
  connect: [DayScheduleWhereUniqueInput!]
  set: [DayScheduleWhereUniqueInput!]
  disconnect: [DayScheduleWhereUniqueInput!]
  delete: [DayScheduleWhereUniqueInput!]
  update: [DayScheduleUpdateWithWhereUniqueWithoutWorkshopsInput!]
  updateMany: [DayScheduleUpdateManyWithWhereNestedInput!]
  deleteMany: [DayScheduleScalarWhereInput!]
  upsert: [DayScheduleUpsertWithWhereUniqueWithoutWorkshopsInput!]
}

input DayScheduleUpdateManyWithWhereNestedInput {
  where: DayScheduleScalarWhereInput!
  data: DayScheduleUpdateManyDataInput!
}

input DayScheduleUpdateOneWithoutAdviceLoungesInput {
  create: DayScheduleCreateWithoutAdviceLoungesInput
  connect: DayScheduleWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: DayScheduleUpdateWithoutAdviceLoungesDataInput
  upsert: DayScheduleUpsertWithoutAdviceLoungesInput
}

input DayScheduleUpdateOneWithoutTalksInput {
  create: DayScheduleCreateWithoutTalksInput
  connect: DayScheduleWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: DayScheduleUpdateWithoutTalksDataInput
  upsert: DayScheduleUpsertWithoutTalksInput
}

input DayScheduleUpdateWithoutAdviceLoungesDataInput {
  status: Status
  date: DateTime
  additionalEvents: Json
  conferenceEvent: ConferenceEventUpdateOneWithoutDaySchedulesInput
  talks: TalkUpdateManyWithoutDayScheduleInput
  workshops: WorkshopUpdateManyWithoutDaySchedulesInput
}

input DayScheduleUpdateWithoutConferenceEventDataInput {
  status: Status
  date: DateTime
  additionalEvents: Json
  talks: TalkUpdateManyWithoutDayScheduleInput
  workshops: WorkshopUpdateManyWithoutDaySchedulesInput
  adviceLounges: AdviceLoungeUpdateManyWithoutDayScheduleInput
}

input DayScheduleUpdateWithoutTalksDataInput {
  status: Status
  date: DateTime
  additionalEvents: Json
  conferenceEvent: ConferenceEventUpdateOneWithoutDaySchedulesInput
  workshops: WorkshopUpdateManyWithoutDaySchedulesInput
  adviceLounges: AdviceLoungeUpdateManyWithoutDayScheduleInput
}

input DayScheduleUpdateWithoutWorkshopsDataInput {
  status: Status
  date: DateTime
  additionalEvents: Json
  conferenceEvent: ConferenceEventUpdateOneWithoutDaySchedulesInput
  talks: TalkUpdateManyWithoutDayScheduleInput
  adviceLounges: AdviceLoungeUpdateManyWithoutDayScheduleInput
}

input DayScheduleUpdateWithWhereUniqueWithoutConferenceEventInput {
  where: DayScheduleWhereUniqueInput!
  data: DayScheduleUpdateWithoutConferenceEventDataInput!
}

input DayScheduleUpdateWithWhereUniqueWithoutWorkshopsInput {
  where: DayScheduleWhereUniqueInput!
  data: DayScheduleUpdateWithoutWorkshopsDataInput!
}

input DayScheduleUpsertWithoutAdviceLoungesInput {
  update: DayScheduleUpdateWithoutAdviceLoungesDataInput!
  create: DayScheduleCreateWithoutAdviceLoungesInput!
}

input DayScheduleUpsertWithoutTalksInput {
  update: DayScheduleUpdateWithoutTalksDataInput!
  create: DayScheduleCreateWithoutTalksInput!
}

input DayScheduleUpsertWithWhereUniqueWithoutConferenceEventInput {
  where: DayScheduleWhereUniqueInput!
  update: DayScheduleUpdateWithoutConferenceEventDataInput!
  create: DayScheduleCreateWithoutConferenceEventInput!
}

input DayScheduleUpsertWithWhereUniqueWithoutWorkshopsInput {
  where: DayScheduleWhereUniqueInput!
  update: DayScheduleUpdateWithoutWorkshopsDataInput!
  create: DayScheduleCreateWithoutWorkshopsInput!
}

input DayScheduleWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [DayScheduleWhereInput!]

  """Logical OR on all given filters."""
  OR: [DayScheduleWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DayScheduleWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  date: DateTime

  """All values that are not equal to given value."""
  date_not: DateTime

  """All values that are contained in given list."""
  date_in: [DateTime!]

  """All values that are not contained in given list."""
  date_not_in: [DateTime!]

  """All values less than the given value."""
  date_lt: DateTime

  """All values less than or equal the given value."""
  date_lte: DateTime

  """All values greater than the given value."""
  date_gt: DateTime

  """All values greater than or equal the given value."""
  date_gte: DateTime
  conferenceEvent: ConferenceEventWhereInput
  talks_every: TalkWhereInput
  talks_some: TalkWhereInput
  talks_none: TalkWhereInput
  workshops_every: WorkshopWhereInput
  workshops_some: WorkshopWhereInput
  workshops_none: WorkshopWhereInput
  adviceLounges_every: AdviceLoungeWhereInput
  adviceLounges_some: AdviceLoungeWhereInput
  adviceLounges_none: AdviceLoungeWhereInput
}

input DayScheduleWhereUniqueInput {
  id: ID
}

enum DocumentFileTypes {
  jpg
  odp
  ods
  odt
  png
  svg
  txt
  webp
  docx
  html
  pdf
  doc
  xlsx
  xls
  pptx
  ppt
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""Transformations for Documents"""
input DocumentTransformationInput {
  """Changes the output for the file."""
  output: DocumentOutputInput
}

enum EventYear {
  Y2018
  Y2019
  Y2020
  Y2021
  Y2022
}

type Extended implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String
  description: String
  location: String
  subtitle: String
  image: Asset
  order: Int
  conferenceEvents(where: ConferenceEventWhereInput, orderBy: ConferenceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ConferenceEvent!]
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
}

"""A connection to a list of items."""
type ExtendedConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ExtendedEdge]!
  aggregate: AggregateExtended!
}

input ExtendedCreateInput {
  status: Status
  title: String
  description: String
  location: String
  subtitle: String
  order: Int
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
  image: AssetCreateOneWithoutImageExtendedInput
  conferenceEvents: ConferenceEventCreateManyWithoutExtendedsInput
}

input ExtendedCreateManyWithoutConferenceEventsInput {
  create: [ExtendedCreateWithoutConferenceEventsInput!]
  connect: [ExtendedWhereUniqueInput!]
}

input ExtendedCreateManyWithoutImageInput {
  create: [ExtendedCreateWithoutImageInput!]
  connect: [ExtendedWhereUniqueInput!]
}

input ExtendedCreateWithoutConferenceEventsInput {
  status: Status
  title: String
  description: String
  location: String
  subtitle: String
  order: Int
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
  image: AssetCreateOneWithoutImageExtendedInput
}

input ExtendedCreateWithoutImageInput {
  status: Status
  title: String
  description: String
  location: String
  subtitle: String
  order: Int
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
  conferenceEvents: ConferenceEventCreateManyWithoutExtendedsInput
}

"""An edge in a connection."""
type ExtendedEdge {
  """The item at the end of the edge."""
  node: Extended!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ExtendedOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  location_ASC
  location_DESC
  subtitle_ASC
  subtitle_DESC
  order_ASC
  order_DESC
  key_ASC
  key_DESC
  slackChannelName_ASC
  slackChannelName_DESC
  locationLink_ASC
  locationLink_DESC
  registerLink_ASC
  registerLink_DESC
}

type ExtendedPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String
  description: String
  location: String
  subtitle: String
  order: Int
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
}

input ExtendedScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [ExtendedScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ExtendedScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ExtendedScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  order: Int

  """All values that are not equal to given value."""
  order_not: Int

  """All values that are contained in given list."""
  order_in: [Int!]

  """All values that are not contained in given list."""
  order_not_in: [Int!]

  """All values less than the given value."""
  order_lt: Int

  """All values less than or equal the given value."""
  order_lte: Int

  """All values greater than the given value."""
  order_gt: Int

  """All values greater than or equal the given value."""
  order_gte: Int
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
  slackChannelName: String

  """All values that are not equal to given value."""
  slackChannelName_not: String

  """All values that are contained in given list."""
  slackChannelName_in: [String!]

  """All values that are not contained in given list."""
  slackChannelName_not_in: [String!]

  """All values less than the given value."""
  slackChannelName_lt: String

  """All values less than or equal the given value."""
  slackChannelName_lte: String

  """All values greater than the given value."""
  slackChannelName_gt: String

  """All values greater than or equal the given value."""
  slackChannelName_gte: String

  """All values containing the given string."""
  slackChannelName_contains: String

  """All values not containing the given string."""
  slackChannelName_not_contains: String

  """All values starting with the given string."""
  slackChannelName_starts_with: String

  """All values not starting with the given string."""
  slackChannelName_not_starts_with: String

  """All values ending with the given string."""
  slackChannelName_ends_with: String

  """All values not ending with the given string."""
  slackChannelName_not_ends_with: String
  locationLink: String

  """All values that are not equal to given value."""
  locationLink_not: String

  """All values that are contained in given list."""
  locationLink_in: [String!]

  """All values that are not contained in given list."""
  locationLink_not_in: [String!]

  """All values less than the given value."""
  locationLink_lt: String

  """All values less than or equal the given value."""
  locationLink_lte: String

  """All values greater than the given value."""
  locationLink_gt: String

  """All values greater than or equal the given value."""
  locationLink_gte: String

  """All values containing the given string."""
  locationLink_contains: String

  """All values not containing the given string."""
  locationLink_not_contains: String

  """All values starting with the given string."""
  locationLink_starts_with: String

  """All values not starting with the given string."""
  locationLink_not_starts_with: String

  """All values ending with the given string."""
  locationLink_ends_with: String

  """All values not ending with the given string."""
  locationLink_not_ends_with: String
  registerLink: String

  """All values that are not equal to given value."""
  registerLink_not: String

  """All values that are contained in given list."""
  registerLink_in: [String!]

  """All values that are not contained in given list."""
  registerLink_not_in: [String!]

  """All values less than the given value."""
  registerLink_lt: String

  """All values less than or equal the given value."""
  registerLink_lte: String

  """All values greater than the given value."""
  registerLink_gt: String

  """All values greater than or equal the given value."""
  registerLink_gte: String

  """All values containing the given string."""
  registerLink_contains: String

  """All values not containing the given string."""
  registerLink_not_contains: String

  """All values starting with the given string."""
  registerLink_starts_with: String

  """All values not starting with the given string."""
  registerLink_not_starts_with: String

  """All values ending with the given string."""
  registerLink_ends_with: String

  """All values not ending with the given string."""
  registerLink_not_ends_with: String
}

type ExtendedSubscriptionPayload {
  mutation: MutationType!
  node: Extended
  updatedFields: [String!]
  previousValues: ExtendedPreviousValues
}

input ExtendedSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ExtendedSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ExtendedSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ExtendedSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ExtendedWhereInput
}

input ExtendedUpdateInput {
  status: Status
  title: String
  description: String
  location: String
  subtitle: String
  order: Int
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
  image: AssetUpdateOneWithoutImageExtendedInput
  conferenceEvents: ConferenceEventUpdateManyWithoutExtendedsInput
}

input ExtendedUpdateManyDataInput {
  status: Status
  title: String
  description: String
  location: String
  subtitle: String
  order: Int
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
}

input ExtendedUpdateManyMutationInput {
  status: Status
  title: String
  description: String
  location: String
  subtitle: String
  order: Int
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
}

input ExtendedUpdateManyWithoutConferenceEventsInput {
  create: [ExtendedCreateWithoutConferenceEventsInput!]
  connect: [ExtendedWhereUniqueInput!]
  set: [ExtendedWhereUniqueInput!]
  disconnect: [ExtendedWhereUniqueInput!]
  delete: [ExtendedWhereUniqueInput!]
  update: [ExtendedUpdateWithWhereUniqueWithoutConferenceEventsInput!]
  updateMany: [ExtendedUpdateManyWithWhereNestedInput!]
  deleteMany: [ExtendedScalarWhereInput!]
  upsert: [ExtendedUpsertWithWhereUniqueWithoutConferenceEventsInput!]
}

input ExtendedUpdateManyWithoutImageInput {
  create: [ExtendedCreateWithoutImageInput!]
  connect: [ExtendedWhereUniqueInput!]
  set: [ExtendedWhereUniqueInput!]
  disconnect: [ExtendedWhereUniqueInput!]
  delete: [ExtendedWhereUniqueInput!]
  update: [ExtendedUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [ExtendedUpdateManyWithWhereNestedInput!]
  deleteMany: [ExtendedScalarWhereInput!]
  upsert: [ExtendedUpsertWithWhereUniqueWithoutImageInput!]
}

input ExtendedUpdateManyWithWhereNestedInput {
  where: ExtendedScalarWhereInput!
  data: ExtendedUpdateManyDataInput!
}

input ExtendedUpdateWithoutConferenceEventsDataInput {
  status: Status
  title: String
  description: String
  location: String
  subtitle: String
  order: Int
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
  image: AssetUpdateOneWithoutImageExtendedInput
}

input ExtendedUpdateWithoutImageDataInput {
  status: Status
  title: String
  description: String
  location: String
  subtitle: String
  order: Int
  key: String
  slackChannelName: String
  locationLink: String
  registerLink: String
  conferenceEvents: ConferenceEventUpdateManyWithoutExtendedsInput
}

input ExtendedUpdateWithWhereUniqueWithoutConferenceEventsInput {
  where: ExtendedWhereUniqueInput!
  data: ExtendedUpdateWithoutConferenceEventsDataInput!
}

input ExtendedUpdateWithWhereUniqueWithoutImageInput {
  where: ExtendedWhereUniqueInput!
  data: ExtendedUpdateWithoutImageDataInput!
}

input ExtendedUpsertWithWhereUniqueWithoutConferenceEventsInput {
  where: ExtendedWhereUniqueInput!
  update: ExtendedUpdateWithoutConferenceEventsDataInput!
  create: ExtendedCreateWithoutConferenceEventsInput!
}

input ExtendedUpsertWithWhereUniqueWithoutImageInput {
  where: ExtendedWhereUniqueInput!
  update: ExtendedUpdateWithoutImageDataInput!
  create: ExtendedCreateWithoutImageInput!
}

input ExtendedWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [ExtendedWhereInput!]

  """Logical OR on all given filters."""
  OR: [ExtendedWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ExtendedWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  order: Int

  """All values that are not equal to given value."""
  order_not: Int

  """All values that are contained in given list."""
  order_in: [Int!]

  """All values that are not contained in given list."""
  order_not_in: [Int!]

  """All values less than the given value."""
  order_lt: Int

  """All values less than or equal the given value."""
  order_lte: Int

  """All values greater than the given value."""
  order_gt: Int

  """All values greater than or equal the given value."""
  order_gte: Int
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
  slackChannelName: String

  """All values that are not equal to given value."""
  slackChannelName_not: String

  """All values that are contained in given list."""
  slackChannelName_in: [String!]

  """All values that are not contained in given list."""
  slackChannelName_not_in: [String!]

  """All values less than the given value."""
  slackChannelName_lt: String

  """All values less than or equal the given value."""
  slackChannelName_lte: String

  """All values greater than the given value."""
  slackChannelName_gt: String

  """All values greater than or equal the given value."""
  slackChannelName_gte: String

  """All values containing the given string."""
  slackChannelName_contains: String

  """All values not containing the given string."""
  slackChannelName_not_contains: String

  """All values starting with the given string."""
  slackChannelName_starts_with: String

  """All values not starting with the given string."""
  slackChannelName_not_starts_with: String

  """All values ending with the given string."""
  slackChannelName_ends_with: String

  """All values not ending with the given string."""
  slackChannelName_not_ends_with: String
  locationLink: String

  """All values that are not equal to given value."""
  locationLink_not: String

  """All values that are contained in given list."""
  locationLink_in: [String!]

  """All values that are not contained in given list."""
  locationLink_not_in: [String!]

  """All values less than the given value."""
  locationLink_lt: String

  """All values less than or equal the given value."""
  locationLink_lte: String

  """All values greater than the given value."""
  locationLink_gt: String

  """All values greater than or equal the given value."""
  locationLink_gte: String

  """All values containing the given string."""
  locationLink_contains: String

  """All values not containing the given string."""
  locationLink_not_contains: String

  """All values starting with the given string."""
  locationLink_starts_with: String

  """All values not starting with the given string."""
  locationLink_not_starts_with: String

  """All values ending with the given string."""
  locationLink_ends_with: String

  """All values not ending with the given string."""
  locationLink_not_ends_with: String
  registerLink: String

  """All values that are not equal to given value."""
  registerLink_not: String

  """All values that are contained in given list."""
  registerLink_in: [String!]

  """All values that are not contained in given list."""
  registerLink_not_in: [String!]

  """All values less than the given value."""
  registerLink_lt: String

  """All values less than or equal the given value."""
  registerLink_lte: String

  """All values greater than the given value."""
  registerLink_gt: String

  """All values greater than or equal the given value."""
  registerLink_gte: String

  """All values containing the given string."""
  registerLink_contains: String

  """All values not containing the given string."""
  registerLink_not_contains: String

  """All values starting with the given string."""
  registerLink_starts_with: String

  """All values not starting with the given string."""
  registerLink_not_starts_with: String

  """All values ending with the given string."""
  registerLink_ends_with: String

  """All values not ending with the given string."""
  registerLink_not_ends_with: String
  image: AssetWhereInput
  conferenceEvents_every: ConferenceEventWhereInput
  conferenceEvents_some: ConferenceEventWhereInput
  conferenceEvents_none: ConferenceEventWhereInput
}

input ExtendedWhereUniqueInput {
  id: ID
}

type Faq implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  conferenceEvents(where: ConferenceEventWhereInput, orderBy: ConferenceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ConferenceEvent!]
  category: String
  question: String
  answer: String
}

"""A connection to a list of items."""
type FaqConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [FaqEdge]!
  aggregate: AggregateFaq!
}

input FaqCreateInput {
  status: Status
  category: String
  question: String
  answer: String
  conferenceEvents: ConferenceEventCreateManyWithoutFaqsInput
}

input FaqCreateManyWithoutConferenceEventsInput {
  create: [FaqCreateWithoutConferenceEventsInput!]
  connect: [FaqWhereUniqueInput!]
}

input FaqCreateWithoutConferenceEventsInput {
  status: Status
  category: String
  question: String
  answer: String
}

"""An edge in a connection."""
type FaqEdge {
  """The item at the end of the edge."""
  node: Faq!

  """A cursor for use in pagination."""
  cursor: String!
}

enum FaqOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  category_ASC
  category_DESC
  question_ASC
  question_DESC
  answer_ASC
  answer_DESC
}

type FaqPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  category: String
  question: String
  answer: String
}

input FaqScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [FaqScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [FaqScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FaqScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  category: String

  """All values that are not equal to given value."""
  category_not: String

  """All values that are contained in given list."""
  category_in: [String!]

  """All values that are not contained in given list."""
  category_not_in: [String!]

  """All values less than the given value."""
  category_lt: String

  """All values less than or equal the given value."""
  category_lte: String

  """All values greater than the given value."""
  category_gt: String

  """All values greater than or equal the given value."""
  category_gte: String

  """All values containing the given string."""
  category_contains: String

  """All values not containing the given string."""
  category_not_contains: String

  """All values starting with the given string."""
  category_starts_with: String

  """All values not starting with the given string."""
  category_not_starts_with: String

  """All values ending with the given string."""
  category_ends_with: String

  """All values not ending with the given string."""
  category_not_ends_with: String
  question: String

  """All values that are not equal to given value."""
  question_not: String

  """All values that are contained in given list."""
  question_in: [String!]

  """All values that are not contained in given list."""
  question_not_in: [String!]

  """All values less than the given value."""
  question_lt: String

  """All values less than or equal the given value."""
  question_lte: String

  """All values greater than the given value."""
  question_gt: String

  """All values greater than or equal the given value."""
  question_gte: String

  """All values containing the given string."""
  question_contains: String

  """All values not containing the given string."""
  question_not_contains: String

  """All values starting with the given string."""
  question_starts_with: String

  """All values not starting with the given string."""
  question_not_starts_with: String

  """All values ending with the given string."""
  question_ends_with: String

  """All values not ending with the given string."""
  question_not_ends_with: String
  answer: String

  """All values that are not equal to given value."""
  answer_not: String

  """All values that are contained in given list."""
  answer_in: [String!]

  """All values that are not contained in given list."""
  answer_not_in: [String!]

  """All values less than the given value."""
  answer_lt: String

  """All values less than or equal the given value."""
  answer_lte: String

  """All values greater than the given value."""
  answer_gt: String

  """All values greater than or equal the given value."""
  answer_gte: String

  """All values containing the given string."""
  answer_contains: String

  """All values not containing the given string."""
  answer_not_contains: String

  """All values starting with the given string."""
  answer_starts_with: String

  """All values not starting with the given string."""
  answer_not_starts_with: String

  """All values ending with the given string."""
  answer_ends_with: String

  """All values not ending with the given string."""
  answer_not_ends_with: String
}

type FaqSubscriptionPayload {
  mutation: MutationType!
  node: Faq
  updatedFields: [String!]
  previousValues: FaqPreviousValues
}

input FaqSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [FaqSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [FaqSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FaqSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: FaqWhereInput
}

input FaqUpdateInput {
  status: Status
  category: String
  question: String
  answer: String
  conferenceEvents: ConferenceEventUpdateManyWithoutFaqsInput
}

input FaqUpdateManyDataInput {
  status: Status
  category: String
  question: String
  answer: String
}

input FaqUpdateManyMutationInput {
  status: Status
  category: String
  question: String
  answer: String
}

input FaqUpdateManyWithoutConferenceEventsInput {
  create: [FaqCreateWithoutConferenceEventsInput!]
  connect: [FaqWhereUniqueInput!]
  set: [FaqWhereUniqueInput!]
  disconnect: [FaqWhereUniqueInput!]
  delete: [FaqWhereUniqueInput!]
  update: [FaqUpdateWithWhereUniqueWithoutConferenceEventsInput!]
  updateMany: [FaqUpdateManyWithWhereNestedInput!]
  deleteMany: [FaqScalarWhereInput!]
  upsert: [FaqUpsertWithWhereUniqueWithoutConferenceEventsInput!]
}

input FaqUpdateManyWithWhereNestedInput {
  where: FaqScalarWhereInput!
  data: FaqUpdateManyDataInput!
}

input FaqUpdateWithoutConferenceEventsDataInput {
  status: Status
  category: String
  question: String
  answer: String
}

input FaqUpdateWithWhereUniqueWithoutConferenceEventsInput {
  where: FaqWhereUniqueInput!
  data: FaqUpdateWithoutConferenceEventsDataInput!
}

input FaqUpsertWithWhereUniqueWithoutConferenceEventsInput {
  where: FaqWhereUniqueInput!
  update: FaqUpdateWithoutConferenceEventsDataInput!
  create: FaqCreateWithoutConferenceEventsInput!
}

input FaqWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [FaqWhereInput!]

  """Logical OR on all given filters."""
  OR: [FaqWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FaqWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  category: String

  """All values that are not equal to given value."""
  category_not: String

  """All values that are contained in given list."""
  category_in: [String!]

  """All values that are not contained in given list."""
  category_not_in: [String!]

  """All values less than the given value."""
  category_lt: String

  """All values less than or equal the given value."""
  category_lte: String

  """All values greater than the given value."""
  category_gt: String

  """All values greater than or equal the given value."""
  category_gte: String

  """All values containing the given string."""
  category_contains: String

  """All values not containing the given string."""
  category_not_contains: String

  """All values starting with the given string."""
  category_starts_with: String

  """All values not starting with the given string."""
  category_not_starts_with: String

  """All values ending with the given string."""
  category_ends_with: String

  """All values not ending with the given string."""
  category_not_ends_with: String
  question: String

  """All values that are not equal to given value."""
  question_not: String

  """All values that are contained in given list."""
  question_in: [String!]

  """All values that are not contained in given list."""
  question_not_in: [String!]

  """All values less than the given value."""
  question_lt: String

  """All values less than or equal the given value."""
  question_lte: String

  """All values greater than the given value."""
  question_gt: String

  """All values greater than or equal the given value."""
  question_gte: String

  """All values containing the given string."""
  question_contains: String

  """All values not containing the given string."""
  question_not_contains: String

  """All values starting with the given string."""
  question_starts_with: String

  """All values not starting with the given string."""
  question_not_starts_with: String

  """All values ending with the given string."""
  question_ends_with: String

  """All values not ending with the given string."""
  question_not_ends_with: String
  answer: String

  """All values that are not equal to given value."""
  answer_not: String

  """All values that are contained in given list."""
  answer_in: [String!]

  """All values that are not contained in given list."""
  answer_not_in: [String!]

  """All values less than the given value."""
  answer_lt: String

  """All values less than or equal the given value."""
  answer_lte: String

  """All values greater than the given value."""
  answer_gt: String

  """All values greater than or equal the given value."""
  answer_gte: String

  """All values containing the given string."""
  answer_contains: String

  """All values not containing the given string."""
  answer_not_contains: String

  """All values starting with the given string."""
  answer_starts_with: String

  """All values not starting with the given string."""
  answer_not_starts_with: String

  """All values ending with the given string."""
  answer_ends_with: String

  """All values not ending with the given string."""
  answer_not_ends_with: String
  conferenceEvents_every: ConferenceEventWhereInput
  conferenceEvents_some: ConferenceEventWhereInput
  conferenceEvents_none: ConferenceEventWhereInput
}

input FaqWhereUniqueInput {
  id: ID
}

"""Custom scalar representing the hex color code value"""
scalar HEX

enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip

  """
  Resizes the image to fit the specified parameters exactly by removing any
  parts of the image that don't fit within the boundaries.
  """
  crop

  """
  Resizes the image to fit the specified parameters exactly by scaling the image
  to the desired size. The aspect ratio of the image is not respected and the
  image can be distorted using this method.
  """
  scale

  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip'
  will not scale the image if the image is smaller than the output size.
  """
  max
}

input ImageResizeInput {
  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int

  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int

  """The default value for the fit parameter is fit:clip."""
  fit: ImageFit
}

"""Transformations for Images"""
input ImageTransformationInput {
  """Resizes the image"""
  resize: ImageResizeInput
}

type Job implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String
  link: String
  image: Asset
  description: String
  conferenceEvent: ConferenceEvent
  subtitle: String
  slogan: String
}

"""A connection to a list of items."""
type JobConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [JobEdge]!
  aggregate: AggregateJob!
}

input JobCreateInput {
  status: Status
  title: String
  link: String
  description: String
  subtitle: String
  slogan: String
  image: AssetCreateOneWithoutImageJobInput
  conferenceEvent: ConferenceEventCreateOneWithoutJobsInput
}

input JobCreateManyWithoutConferenceEventInput {
  create: [JobCreateWithoutConferenceEventInput!]
  connect: [JobWhereUniqueInput!]
}

input JobCreateManyWithoutImageInput {
  create: [JobCreateWithoutImageInput!]
  connect: [JobWhereUniqueInput!]
}

input JobCreateWithoutConferenceEventInput {
  status: Status
  title: String
  link: String
  description: String
  subtitle: String
  slogan: String
  image: AssetCreateOneWithoutImageJobInput
}

input JobCreateWithoutImageInput {
  status: Status
  title: String
  link: String
  description: String
  subtitle: String
  slogan: String
  conferenceEvent: ConferenceEventCreateOneWithoutJobsInput
}

"""An edge in a connection."""
type JobEdge {
  """The item at the end of the edge."""
  node: Job!

  """A cursor for use in pagination."""
  cursor: String!
}

enum JobOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  link_ASC
  link_DESC
  description_ASC
  description_DESC
  subtitle_ASC
  subtitle_DESC
  slogan_ASC
  slogan_DESC
}

type JobPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String
  link: String
  description: String
  subtitle: String
  slogan: String
}

input JobScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [JobScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [JobScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [JobScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  slogan: String

  """All values that are not equal to given value."""
  slogan_not: String

  """All values that are contained in given list."""
  slogan_in: [String!]

  """All values that are not contained in given list."""
  slogan_not_in: [String!]

  """All values less than the given value."""
  slogan_lt: String

  """All values less than or equal the given value."""
  slogan_lte: String

  """All values greater than the given value."""
  slogan_gt: String

  """All values greater than or equal the given value."""
  slogan_gte: String

  """All values containing the given string."""
  slogan_contains: String

  """All values not containing the given string."""
  slogan_not_contains: String

  """All values starting with the given string."""
  slogan_starts_with: String

  """All values not starting with the given string."""
  slogan_not_starts_with: String

  """All values ending with the given string."""
  slogan_ends_with: String

  """All values not ending with the given string."""
  slogan_not_ends_with: String
}

type JobSubscriptionPayload {
  mutation: MutationType!
  node: Job
  updatedFields: [String!]
  previousValues: JobPreviousValues
}

input JobSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [JobSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [JobSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [JobSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: JobWhereInput
}

input JobUpdateInput {
  status: Status
  title: String
  link: String
  description: String
  subtitle: String
  slogan: String
  image: AssetUpdateOneWithoutImageJobInput
  conferenceEvent: ConferenceEventUpdateOneWithoutJobsInput
}

input JobUpdateManyDataInput {
  status: Status
  title: String
  link: String
  description: String
  subtitle: String
  slogan: String
}

input JobUpdateManyMutationInput {
  status: Status
  title: String
  link: String
  description: String
  subtitle: String
  slogan: String
}

input JobUpdateManyWithoutConferenceEventInput {
  create: [JobCreateWithoutConferenceEventInput!]
  connect: [JobWhereUniqueInput!]
  set: [JobWhereUniqueInput!]
  disconnect: [JobWhereUniqueInput!]
  delete: [JobWhereUniqueInput!]
  update: [JobUpdateWithWhereUniqueWithoutConferenceEventInput!]
  updateMany: [JobUpdateManyWithWhereNestedInput!]
  deleteMany: [JobScalarWhereInput!]
  upsert: [JobUpsertWithWhereUniqueWithoutConferenceEventInput!]
}

input JobUpdateManyWithoutImageInput {
  create: [JobCreateWithoutImageInput!]
  connect: [JobWhereUniqueInput!]
  set: [JobWhereUniqueInput!]
  disconnect: [JobWhereUniqueInput!]
  delete: [JobWhereUniqueInput!]
  update: [JobUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [JobUpdateManyWithWhereNestedInput!]
  deleteMany: [JobScalarWhereInput!]
  upsert: [JobUpsertWithWhereUniqueWithoutImageInput!]
}

input JobUpdateManyWithWhereNestedInput {
  where: JobScalarWhereInput!
  data: JobUpdateManyDataInput!
}

input JobUpdateWithoutConferenceEventDataInput {
  status: Status
  title: String
  link: String
  description: String
  subtitle: String
  slogan: String
  image: AssetUpdateOneWithoutImageJobInput
}

input JobUpdateWithoutImageDataInput {
  status: Status
  title: String
  link: String
  description: String
  subtitle: String
  slogan: String
  conferenceEvent: ConferenceEventUpdateOneWithoutJobsInput
}

input JobUpdateWithWhereUniqueWithoutConferenceEventInput {
  where: JobWhereUniqueInput!
  data: JobUpdateWithoutConferenceEventDataInput!
}

input JobUpdateWithWhereUniqueWithoutImageInput {
  where: JobWhereUniqueInput!
  data: JobUpdateWithoutImageDataInput!
}

input JobUpsertWithWhereUniqueWithoutConferenceEventInput {
  where: JobWhereUniqueInput!
  update: JobUpdateWithoutConferenceEventDataInput!
  create: JobCreateWithoutConferenceEventInput!
}

input JobUpsertWithWhereUniqueWithoutImageInput {
  where: JobWhereUniqueInput!
  update: JobUpdateWithoutImageDataInput!
  create: JobCreateWithoutImageInput!
}

input JobWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [JobWhereInput!]

  """Logical OR on all given filters."""
  OR: [JobWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [JobWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  slogan: String

  """All values that are not equal to given value."""
  slogan_not: String

  """All values that are contained in given list."""
  slogan_in: [String!]

  """All values that are not contained in given list."""
  slogan_not_in: [String!]

  """All values less than the given value."""
  slogan_lt: String

  """All values less than or equal the given value."""
  slogan_lte: String

  """All values greater than the given value."""
  slogan_gt: String

  """All values greater than or equal the given value."""
  slogan_gte: String

  """All values containing the given string."""
  slogan_contains: String

  """All values not containing the given string."""
  slogan_not_contains: String

  """All values starting with the given string."""
  slogan_starts_with: String

  """All values not starting with the given string."""
  slogan_not_starts_with: String

  """All values ending with the given string."""
  slogan_ends_with: String

  """All values not ending with the given string."""
  slogan_not_ends_with: String
  image: AssetWhereInput
  conferenceEvent: ConferenceEventWhereInput
}

input JobWhereUniqueInput {
  id: ID
}

"""Raw JSON value"""
scalar Json

enum Locale {
  EN
}

"""Representing a geolocation point with latitude and longitude"""
type Location {
  latitude: Float!
  longitude: Float!
}

"""Input for a geolocation point with latitude and longitude"""
input LocationInput {
  latitude: Float!
  longitude: Float!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

enum MarkdownRenderStyles {
  None_Default
  Standard_Markdown
}

type Mc implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  speaker: Speaker
  conferenceEvent: ConferenceEvent
}

"""A connection to a list of items."""
type McConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [McEdge]!
  aggregate: AggregateMc!
}

input McCreateInput {
  status: Status
  speaker: SpeakerCreateOneWithoutMcsInput
  conferenceEvent: ConferenceEventCreateOneWithoutMcsInput
}

input McCreateManyWithoutConferenceEventInput {
  create: [McCreateWithoutConferenceEventInput!]
  connect: [McWhereUniqueInput!]
}

input McCreateManyWithoutSpeakerInput {
  create: [McCreateWithoutSpeakerInput!]
  connect: [McWhereUniqueInput!]
}

input McCreateWithoutConferenceEventInput {
  status: Status
  speaker: SpeakerCreateOneWithoutMcsInput
}

input McCreateWithoutSpeakerInput {
  status: Status
  conferenceEvent: ConferenceEventCreateOneWithoutMcsInput
}

"""An edge in a connection."""
type McEdge {
  """The item at the end of the edge."""
  node: Mc!

  """A cursor for use in pagination."""
  cursor: String!
}

enum McOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
}

type McPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
}

input McScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [McScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [McScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [McScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
}

type McSubscriptionPayload {
  mutation: MutationType!
  node: Mc
  updatedFields: [String!]
  previousValues: McPreviousValues
}

input McSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [McSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [McSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [McSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: McWhereInput
}

input McUpdateInput {
  status: Status
  speaker: SpeakerUpdateOneWithoutMcsInput
  conferenceEvent: ConferenceEventUpdateOneWithoutMcsInput
}

input McUpdateManyDataInput {
  status: Status
}

input McUpdateManyMutationInput {
  status: Status
}

input McUpdateManyWithoutConferenceEventInput {
  create: [McCreateWithoutConferenceEventInput!]
  connect: [McWhereUniqueInput!]
  set: [McWhereUniqueInput!]
  disconnect: [McWhereUniqueInput!]
  delete: [McWhereUniqueInput!]
  update: [McUpdateWithWhereUniqueWithoutConferenceEventInput!]
  updateMany: [McUpdateManyWithWhereNestedInput!]
  deleteMany: [McScalarWhereInput!]
  upsert: [McUpsertWithWhereUniqueWithoutConferenceEventInput!]
}

input McUpdateManyWithoutSpeakerInput {
  create: [McCreateWithoutSpeakerInput!]
  connect: [McWhereUniqueInput!]
  set: [McWhereUniqueInput!]
  disconnect: [McWhereUniqueInput!]
  delete: [McWhereUniqueInput!]
  update: [McUpdateWithWhereUniqueWithoutSpeakerInput!]
  updateMany: [McUpdateManyWithWhereNestedInput!]
  deleteMany: [McScalarWhereInput!]
  upsert: [McUpsertWithWhereUniqueWithoutSpeakerInput!]
}

input McUpdateManyWithWhereNestedInput {
  where: McScalarWhereInput!
  data: McUpdateManyDataInput!
}

input McUpdateWithoutConferenceEventDataInput {
  status: Status
  speaker: SpeakerUpdateOneWithoutMcsInput
}

input McUpdateWithoutSpeakerDataInput {
  status: Status
  conferenceEvent: ConferenceEventUpdateOneWithoutMcsInput
}

input McUpdateWithWhereUniqueWithoutConferenceEventInput {
  where: McWhereUniqueInput!
  data: McUpdateWithoutConferenceEventDataInput!
}

input McUpdateWithWhereUniqueWithoutSpeakerInput {
  where: McWhereUniqueInput!
  data: McUpdateWithoutSpeakerDataInput!
}

input McUpsertWithWhereUniqueWithoutConferenceEventInput {
  where: McWhereUniqueInput!
  update: McUpdateWithoutConferenceEventDataInput!
  create: McCreateWithoutConferenceEventInput!
}

input McUpsertWithWhereUniqueWithoutSpeakerInput {
  where: McWhereUniqueInput!
  update: McUpdateWithoutSpeakerDataInput!
  create: McCreateWithoutSpeakerInput!
}

input McWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [McWhereInput!]

  """Logical OR on all given filters."""
  OR: [McWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [McWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  speaker: SpeakerWhereInput
  conferenceEvent: ConferenceEventWhereInput
}

input McWhereUniqueInput {
  id: ID
}

type Mutation {
  createAsset(data: AssetCreateInput!): Asset!
  uploadAsset(data: AssetUploadInput!): Asset!
  createPieceOfText(data: PieceOfTextCreateInput!): PieceOfText!
  createConferenceBrand(data: ConferenceBrandCreateInput!): ConferenceBrand!
  createConferenceEvent(data: ConferenceEventCreateInput!): ConferenceEvent!
  createTrack(data: TrackCreateInput!): Track!
  createDaySchedule(data: DayScheduleCreateInput!): DaySchedule!
  createSpeaker(data: SpeakerCreateInput!): Speaker!
  createTalk(data: TalkCreateInput!): Talk!
  createWorkshop(data: WorkshopCreateInput!): Workshop!
  createAdviceLounge(data: AdviceLoungeCreateInput!): AdviceLounge!
  createPieceOfSpeakerInfo(data: PieceOfSpeakerInfoCreateInput!): PieceOfSpeakerInfo!
  createSponsor(data: SponsorCreateInput!): Sponsor!
  createPieceOfSponsorInfo(data: PieceOfSponsorInfoCreateInput!): PieceOfSponsorInfo!
  createPage(data: PageCreateInput!): Page!
  createMc(data: McCreateInput!): Mc!
  createPieceOfData(data: PieceOfDataCreateInput!): PieceOfData!
  createJob(data: JobCreateInput!): Job!
  createSdf(data: SdfCreateInput!): Sdf!
  createFaq(data: FaqCreateInput!): Faq!
  createExtended(data: ExtendedCreateInput!): Extended!
  updateAsset(data: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset
  updatePieceOfText(data: PieceOfTextUpdateInput!, where: PieceOfTextWhereUniqueInput!): PieceOfText
  updateConferenceBrand(data: ConferenceBrandUpdateInput!, where: ConferenceBrandWhereUniqueInput!): ConferenceBrand
  updateConferenceEvent(data: ConferenceEventUpdateInput!, where: ConferenceEventWhereUniqueInput!): ConferenceEvent
  updateTrack(data: TrackUpdateInput!, where: TrackWhereUniqueInput!): Track
  updateDaySchedule(data: DayScheduleUpdateInput!, where: DayScheduleWhereUniqueInput!): DaySchedule
  updateSpeaker(data: SpeakerUpdateInput!, where: SpeakerWhereUniqueInput!): Speaker
  updateTalk(data: TalkUpdateInput!, where: TalkWhereUniqueInput!): Talk
  updateWorkshop(data: WorkshopUpdateInput!, where: WorkshopWhereUniqueInput!): Workshop
  updateAdviceLounge(data: AdviceLoungeUpdateInput!, where: AdviceLoungeWhereUniqueInput!): AdviceLounge
  updatePieceOfSpeakerInfo(data: PieceOfSpeakerInfoUpdateInput!, where: PieceOfSpeakerInfoWhereUniqueInput!): PieceOfSpeakerInfo
  updateSponsor(data: SponsorUpdateInput!, where: SponsorWhereUniqueInput!): Sponsor
  updatePieceOfSponsorInfo(data: PieceOfSponsorInfoUpdateInput!, where: PieceOfSponsorInfoWhereUniqueInput!): PieceOfSponsorInfo
  updatePage(data: PageUpdateInput!, where: PageWhereUniqueInput!): Page
  updateMc(data: McUpdateInput!, where: McWhereUniqueInput!): Mc
  updatePieceOfData(data: PieceOfDataUpdateInput!, where: PieceOfDataWhereUniqueInput!): PieceOfData
  updateJob(data: JobUpdateInput!, where: JobWhereUniqueInput!): Job
  updateSdf(data: SdfUpdateInput!, where: SdfWhereUniqueInput!): Sdf
  updateFaq(data: FaqUpdateInput!, where: FaqWhereUniqueInput!): Faq
  updateExtended(data: ExtendedUpdateInput!, where: ExtendedWhereUniqueInput!): Extended
  deleteAsset(where: AssetWhereUniqueInput!): Asset
  deletePieceOfText(where: PieceOfTextWhereUniqueInput!): PieceOfText
  deleteConferenceBrand(where: ConferenceBrandWhereUniqueInput!): ConferenceBrand
  deleteConferenceEvent(where: ConferenceEventWhereUniqueInput!): ConferenceEvent
  deleteTrack(where: TrackWhereUniqueInput!): Track
  deleteDaySchedule(where: DayScheduleWhereUniqueInput!): DaySchedule
  deleteSpeaker(where: SpeakerWhereUniqueInput!): Speaker
  deleteTalk(where: TalkWhereUniqueInput!): Talk
  deleteWorkshop(where: WorkshopWhereUniqueInput!): Workshop
  deleteAdviceLounge(where: AdviceLoungeWhereUniqueInput!): AdviceLounge
  deletePieceOfSpeakerInfo(where: PieceOfSpeakerInfoWhereUniqueInput!): PieceOfSpeakerInfo
  deleteSponsor(where: SponsorWhereUniqueInput!): Sponsor
  deletePieceOfSponsorInfo(where: PieceOfSponsorInfoWhereUniqueInput!): PieceOfSponsorInfo
  deletePage(where: PageWhereUniqueInput!): Page
  deleteMc(where: McWhereUniqueInput!): Mc
  deletePieceOfData(where: PieceOfDataWhereUniqueInput!): PieceOfData
  deleteJob(where: JobWhereUniqueInput!): Job
  deleteSdf(where: SdfWhereUniqueInput!): Sdf
  deleteFaq(where: FaqWhereUniqueInput!): Faq
  deleteExtended(where: ExtendedWhereUniqueInput!): Extended
  upsertAsset(where: AssetWhereUniqueInput!, create: AssetCreateInput!, update: AssetUpdateInput!): Asset!
  upsertPieceOfText(where: PieceOfTextWhereUniqueInput!, create: PieceOfTextCreateInput!, update: PieceOfTextUpdateInput!): PieceOfText!
  upsertConferenceBrand(where: ConferenceBrandWhereUniqueInput!, create: ConferenceBrandCreateInput!, update: ConferenceBrandUpdateInput!): ConferenceBrand!
  upsertConferenceEvent(where: ConferenceEventWhereUniqueInput!, create: ConferenceEventCreateInput!, update: ConferenceEventUpdateInput!): ConferenceEvent!
  upsertTrack(where: TrackWhereUniqueInput!, create: TrackCreateInput!, update: TrackUpdateInput!): Track!
  upsertDaySchedule(where: DayScheduleWhereUniqueInput!, create: DayScheduleCreateInput!, update: DayScheduleUpdateInput!): DaySchedule!
  upsertSpeaker(where: SpeakerWhereUniqueInput!, create: SpeakerCreateInput!, update: SpeakerUpdateInput!): Speaker!
  upsertTalk(where: TalkWhereUniqueInput!, create: TalkCreateInput!, update: TalkUpdateInput!): Talk!
  upsertWorkshop(where: WorkshopWhereUniqueInput!, create: WorkshopCreateInput!, update: WorkshopUpdateInput!): Workshop!
  upsertAdviceLounge(where: AdviceLoungeWhereUniqueInput!, create: AdviceLoungeCreateInput!, update: AdviceLoungeUpdateInput!): AdviceLounge!
  upsertPieceOfSpeakerInfo(where: PieceOfSpeakerInfoWhereUniqueInput!, create: PieceOfSpeakerInfoCreateInput!, update: PieceOfSpeakerInfoUpdateInput!): PieceOfSpeakerInfo!
  upsertSponsor(where: SponsorWhereUniqueInput!, create: SponsorCreateInput!, update: SponsorUpdateInput!): Sponsor!
  upsertPieceOfSponsorInfo(where: PieceOfSponsorInfoWhereUniqueInput!, create: PieceOfSponsorInfoCreateInput!, update: PieceOfSponsorInfoUpdateInput!): PieceOfSponsorInfo!
  upsertPage(where: PageWhereUniqueInput!, create: PageCreateInput!, update: PageUpdateInput!): Page!
  upsertMc(where: McWhereUniqueInput!, create: McCreateInput!, update: McUpdateInput!): Mc!
  upsertPieceOfData(where: PieceOfDataWhereUniqueInput!, create: PieceOfDataCreateInput!, update: PieceOfDataUpdateInput!): PieceOfData!
  upsertJob(where: JobWhereUniqueInput!, create: JobCreateInput!, update: JobUpdateInput!): Job!
  upsertSdf(where: SdfWhereUniqueInput!, create: SdfCreateInput!, update: SdfUpdateInput!): Sdf!
  upsertFaq(where: FaqWhereUniqueInput!, create: FaqCreateInput!, update: FaqUpdateInput!): Faq!
  upsertExtended(where: ExtendedWhereUniqueInput!, create: ExtendedCreateInput!, update: ExtendedUpdateInput!): Extended!
  updateManyAssets(data: AssetUpdateManyMutationInput!, where: AssetWhereInput): BatchPayload!
  updateManyPieceOfTexts(data: PieceOfTextUpdateManyMutationInput!, where: PieceOfTextWhereInput): BatchPayload!
  updateManyConferenceBrands(data: ConferenceBrandUpdateManyMutationInput!, where: ConferenceBrandWhereInput): BatchPayload!
  updateManyConferenceEvents(data: ConferenceEventUpdateManyMutationInput!, where: ConferenceEventWhereInput): BatchPayload!
  updateManyTracks(data: TrackUpdateManyMutationInput!, where: TrackWhereInput): BatchPayload!
  updateManyDaySchedules(data: DayScheduleUpdateManyMutationInput!, where: DayScheduleWhereInput): BatchPayload!
  updateManySpeakers(data: SpeakerUpdateManyMutationInput!, where: SpeakerWhereInput): BatchPayload!
  updateManyTalks(data: TalkUpdateManyMutationInput!, where: TalkWhereInput): BatchPayload!
  updateManyWorkshops(data: WorkshopUpdateManyMutationInput!, where: WorkshopWhereInput): BatchPayload!
  updateManyAdviceLounges(data: AdviceLoungeUpdateManyMutationInput!, where: AdviceLoungeWhereInput): BatchPayload!
  updateManyPieceOfSpeakerInfoes(data: PieceOfSpeakerInfoUpdateManyMutationInput!, where: PieceOfSpeakerInfoWhereInput): BatchPayload!
  updateManySponsors(data: SponsorUpdateManyMutationInput!, where: SponsorWhereInput): BatchPayload!
  updateManyPieceOfSponsorInfoes(data: PieceOfSponsorInfoUpdateManyMutationInput!, where: PieceOfSponsorInfoWhereInput): BatchPayload!
  updateManyPages(data: PageUpdateManyMutationInput!, where: PageWhereInput): BatchPayload!
  updateManyMcs(data: McUpdateManyMutationInput!, where: McWhereInput): BatchPayload!
  updateManyPieceOfDatas(data: PieceOfDataUpdateManyMutationInput!, where: PieceOfDataWhereInput): BatchPayload!
  updateManyJobs(data: JobUpdateManyMutationInput!, where: JobWhereInput): BatchPayload!
  updateManySdfs(data: SdfUpdateManyMutationInput!, where: SdfWhereInput): BatchPayload!
  updateManyFaqs(data: FaqUpdateManyMutationInput!, where: FaqWhereInput): BatchPayload!
  updateManyExtendeds(data: ExtendedUpdateManyMutationInput!, where: ExtendedWhereInput): BatchPayload!
  deleteManyAssets(where: AssetWhereInput): BatchPayload!
  deleteManyPieceOfTexts(where: PieceOfTextWhereInput): BatchPayload!
  deleteManyConferenceBrands(where: ConferenceBrandWhereInput): BatchPayload!
  deleteManyConferenceEvents(where: ConferenceEventWhereInput): BatchPayload!
  deleteManyTracks(where: TrackWhereInput): BatchPayload!
  deleteManyDaySchedules(where: DayScheduleWhereInput): BatchPayload!
  deleteManySpeakers(where: SpeakerWhereInput): BatchPayload!
  deleteManyTalks(where: TalkWhereInput): BatchPayload!
  deleteManyWorkshops(where: WorkshopWhereInput): BatchPayload!
  deleteManyAdviceLounges(where: AdviceLoungeWhereInput): BatchPayload!
  deleteManyPieceOfSpeakerInfoes(where: PieceOfSpeakerInfoWhereInput): BatchPayload!
  deleteManySponsors(where: SponsorWhereInput): BatchPayload!
  deleteManyPieceOfSponsorInfoes(where: PieceOfSponsorInfoWhereInput): BatchPayload!
  deleteManyPages(where: PageWhereInput): BatchPayload!
  deleteManyMcs(where: McWhereInput): BatchPayload!
  deleteManyPieceOfDatas(where: PieceOfDataWhereInput): BatchPayload!
  deleteManyJobs(where: JobWhereInput): BatchPayload!
  deleteManySdfs(where: SdfWhereInput): BatchPayload!
  deleteManyFaqs(where: FaqWhereInput): BatchPayload!
  deleteManyExtendeds(where: ExtendedWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type Page implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  titleSeo: String
  conferenceEvent: ConferenceEvent
  description: String
  key: String!
  titlePage: String
  pageSlogan: String
  pageStatistics: Json
  seoDescription: String
  themeColor: Color
  keywords: [String!]!
  locationTitle: String
  pageNavigation: Json
  pageSections: Json
}

"""A connection to a list of items."""
type PageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PageEdge]!
  aggregate: AggregatePage!
}

input PageCreateInput {
  status: Status
  titleSeo: String
  description: String
  key: String!
  titlePage: String
  pageSlogan: String
  pageStatistics: Json
  seoDescription: String
  themeColor: ColorInput
  locationTitle: String
  pageNavigation: Json
  pageSections: Json
  keywords: PageCreatekeywordsInput
  conferenceEvent: ConferenceEventCreateOneWithoutPagesInput
}

input PageCreatekeywordsInput {
  set: [String!]
}

input PageCreateManyWithoutConferenceEventInput {
  create: [PageCreateWithoutConferenceEventInput!]
  connect: [PageWhereUniqueInput!]
}

input PageCreateWithoutConferenceEventInput {
  status: Status
  titleSeo: String
  description: String
  key: String!
  titlePage: String
  pageSlogan: String
  pageStatistics: Json
  seoDescription: String
  themeColor: ColorInput
  locationTitle: String
  pageNavigation: Json
  pageSections: Json
  keywords: PageCreatekeywordsInput
}

"""An edge in a connection."""
type PageEdge {
  """The item at the end of the edge."""
  node: Page!

  """A cursor for use in pagination."""
  cursor: String!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum PageOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  titleSeo_ASC
  titleSeo_DESC
  description_ASC
  description_DESC
  key_ASC
  key_DESC
  titlePage_ASC
  titlePage_DESC
  pageSlogan_ASC
  pageSlogan_DESC
  pageStatistics_ASC
  pageStatistics_DESC
  seoDescription_ASC
  seoDescription_DESC
  themeColor_ASC
  themeColor_DESC
  locationTitle_ASC
  locationTitle_DESC
  pageNavigation_ASC
  pageNavigation_DESC
  pageSections_ASC
  pageSections_DESC
}

type PagePreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  titleSeo: String
  description: String
  key: String!
  titlePage: String
  pageSlogan: String
  pageStatistics: Json
  seoDescription: String
  themeColor: Color
  keywords: [String!]!
  locationTitle: String
  pageNavigation: Json
  pageSections: Json
}

input PageScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PageScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PageScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PageScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  titleSeo: String

  """All values that are not equal to given value."""
  titleSeo_not: String

  """All values that are contained in given list."""
  titleSeo_in: [String!]

  """All values that are not contained in given list."""
  titleSeo_not_in: [String!]

  """All values less than the given value."""
  titleSeo_lt: String

  """All values less than or equal the given value."""
  titleSeo_lte: String

  """All values greater than the given value."""
  titleSeo_gt: String

  """All values greater than or equal the given value."""
  titleSeo_gte: String

  """All values containing the given string."""
  titleSeo_contains: String

  """All values not containing the given string."""
  titleSeo_not_contains: String

  """All values starting with the given string."""
  titleSeo_starts_with: String

  """All values not starting with the given string."""
  titleSeo_not_starts_with: String

  """All values ending with the given string."""
  titleSeo_ends_with: String

  """All values not ending with the given string."""
  titleSeo_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
  titlePage: String

  """All values that are not equal to given value."""
  titlePage_not: String

  """All values that are contained in given list."""
  titlePage_in: [String!]

  """All values that are not contained in given list."""
  titlePage_not_in: [String!]

  """All values less than the given value."""
  titlePage_lt: String

  """All values less than or equal the given value."""
  titlePage_lte: String

  """All values greater than the given value."""
  titlePage_gt: String

  """All values greater than or equal the given value."""
  titlePage_gte: String

  """All values containing the given string."""
  titlePage_contains: String

  """All values not containing the given string."""
  titlePage_not_contains: String

  """All values starting with the given string."""
  titlePage_starts_with: String

  """All values not starting with the given string."""
  titlePage_not_starts_with: String

  """All values ending with the given string."""
  titlePage_ends_with: String

  """All values not ending with the given string."""
  titlePage_not_ends_with: String
  pageSlogan: String

  """All values that are not equal to given value."""
  pageSlogan_not: String

  """All values that are contained in given list."""
  pageSlogan_in: [String!]

  """All values that are not contained in given list."""
  pageSlogan_not_in: [String!]

  """All values less than the given value."""
  pageSlogan_lt: String

  """All values less than or equal the given value."""
  pageSlogan_lte: String

  """All values greater than the given value."""
  pageSlogan_gt: String

  """All values greater than or equal the given value."""
  pageSlogan_gte: String

  """All values containing the given string."""
  pageSlogan_contains: String

  """All values not containing the given string."""
  pageSlogan_not_contains: String

  """All values starting with the given string."""
  pageSlogan_starts_with: String

  """All values not starting with the given string."""
  pageSlogan_not_starts_with: String

  """All values ending with the given string."""
  pageSlogan_ends_with: String

  """All values not ending with the given string."""
  pageSlogan_not_ends_with: String
  seoDescription: String

  """All values that are not equal to given value."""
  seoDescription_not: String

  """All values that are contained in given list."""
  seoDescription_in: [String!]

  """All values that are not contained in given list."""
  seoDescription_not_in: [String!]

  """All values less than the given value."""
  seoDescription_lt: String

  """All values less than or equal the given value."""
  seoDescription_lte: String

  """All values greater than the given value."""
  seoDescription_gt: String

  """All values greater than or equal the given value."""
  seoDescription_gte: String

  """All values containing the given string."""
  seoDescription_contains: String

  """All values not containing the given string."""
  seoDescription_not_contains: String

  """All values starting with the given string."""
  seoDescription_starts_with: String

  """All values not starting with the given string."""
  seoDescription_not_starts_with: String

  """All values ending with the given string."""
  seoDescription_ends_with: String

  """All values not ending with the given string."""
  seoDescription_not_ends_with: String
  themeColor: String

  """All values that are not equal to given value."""
  themeColor_not: String

  """All values that are contained in given list."""
  themeColor_in: [String!]

  """All values that are not contained in given list."""
  themeColor_not_in: [String!]

  """All values less than the given value."""
  themeColor_lt: String

  """All values less than or equal the given value."""
  themeColor_lte: String

  """All values greater than the given value."""
  themeColor_gt: String

  """All values greater than or equal the given value."""
  themeColor_gte: String

  """All values containing the given string."""
  themeColor_contains: String

  """All values not containing the given string."""
  themeColor_not_contains: String

  """All values starting with the given string."""
  themeColor_starts_with: String

  """All values not starting with the given string."""
  themeColor_not_starts_with: String

  """All values ending with the given string."""
  themeColor_ends_with: String

  """All values not ending with the given string."""
  themeColor_not_ends_with: String
  locationTitle: String

  """All values that are not equal to given value."""
  locationTitle_not: String

  """All values that are contained in given list."""
  locationTitle_in: [String!]

  """All values that are not contained in given list."""
  locationTitle_not_in: [String!]

  """All values less than the given value."""
  locationTitle_lt: String

  """All values less than or equal the given value."""
  locationTitle_lte: String

  """All values greater than the given value."""
  locationTitle_gt: String

  """All values greater than or equal the given value."""
  locationTitle_gte: String

  """All values containing the given string."""
  locationTitle_contains: String

  """All values not containing the given string."""
  locationTitle_not_contains: String

  """All values starting with the given string."""
  locationTitle_starts_with: String

  """All values not starting with the given string."""
  locationTitle_not_starts_with: String

  """All values ending with the given string."""
  locationTitle_ends_with: String

  """All values not ending with the given string."""
  locationTitle_not_ends_with: String
}

type PageSubscriptionPayload {
  mutation: MutationType!
  node: Page
  updatedFields: [String!]
  previousValues: PagePreviousValues
}

input PageSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PageSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PageSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PageSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PageWhereInput
}

input PageUpdateInput {
  status: Status
  titleSeo: String
  description: String
  key: String
  titlePage: String
  pageSlogan: String
  pageStatistics: Json
  seoDescription: String
  themeColor: ColorInput
  locationTitle: String
  pageNavigation: Json
  pageSections: Json
  keywords: PageUpdatekeywordsInput
  conferenceEvent: ConferenceEventUpdateOneWithoutPagesInput
}

input PageUpdatekeywordsInput {
  set: [String!]
}

input PageUpdateManyDataInput {
  status: Status
  titleSeo: String
  description: String
  key: String
  titlePage: String
  pageSlogan: String
  pageStatistics: Json
  seoDescription: String
  themeColor: ColorInput
  locationTitle: String
  pageNavigation: Json
  pageSections: Json
  keywords: PageUpdatekeywordsInput
}

input PageUpdateManyMutationInput {
  status: Status
  titleSeo: String
  description: String
  key: String
  titlePage: String
  pageSlogan: String
  pageStatistics: Json
  seoDescription: String
  themeColor: ColorInput
  locationTitle: String
  pageNavigation: Json
  pageSections: Json
  keywords: PageUpdatekeywordsInput
}

input PageUpdateManyWithoutConferenceEventInput {
  create: [PageCreateWithoutConferenceEventInput!]
  connect: [PageWhereUniqueInput!]
  set: [PageWhereUniqueInput!]
  disconnect: [PageWhereUniqueInput!]
  delete: [PageWhereUniqueInput!]
  update: [PageUpdateWithWhereUniqueWithoutConferenceEventInput!]
  updateMany: [PageUpdateManyWithWhereNestedInput!]
  deleteMany: [PageScalarWhereInput!]
  upsert: [PageUpsertWithWhereUniqueWithoutConferenceEventInput!]
}

input PageUpdateManyWithWhereNestedInput {
  where: PageScalarWhereInput!
  data: PageUpdateManyDataInput!
}

input PageUpdateWithoutConferenceEventDataInput {
  status: Status
  titleSeo: String
  description: String
  key: String
  titlePage: String
  pageSlogan: String
  pageStatistics: Json
  seoDescription: String
  themeColor: ColorInput
  locationTitle: String
  pageNavigation: Json
  pageSections: Json
  keywords: PageUpdatekeywordsInput
}

input PageUpdateWithWhereUniqueWithoutConferenceEventInput {
  where: PageWhereUniqueInput!
  data: PageUpdateWithoutConferenceEventDataInput!
}

input PageUpsertWithWhereUniqueWithoutConferenceEventInput {
  where: PageWhereUniqueInput!
  update: PageUpdateWithoutConferenceEventDataInput!
  create: PageCreateWithoutConferenceEventInput!
}

input PageWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PageWhereInput!]

  """Logical OR on all given filters."""
  OR: [PageWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PageWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  titleSeo: String

  """All values that are not equal to given value."""
  titleSeo_not: String

  """All values that are contained in given list."""
  titleSeo_in: [String!]

  """All values that are not contained in given list."""
  titleSeo_not_in: [String!]

  """All values less than the given value."""
  titleSeo_lt: String

  """All values less than or equal the given value."""
  titleSeo_lte: String

  """All values greater than the given value."""
  titleSeo_gt: String

  """All values greater than or equal the given value."""
  titleSeo_gte: String

  """All values containing the given string."""
  titleSeo_contains: String

  """All values not containing the given string."""
  titleSeo_not_contains: String

  """All values starting with the given string."""
  titleSeo_starts_with: String

  """All values not starting with the given string."""
  titleSeo_not_starts_with: String

  """All values ending with the given string."""
  titleSeo_ends_with: String

  """All values not ending with the given string."""
  titleSeo_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
  titlePage: String

  """All values that are not equal to given value."""
  titlePage_not: String

  """All values that are contained in given list."""
  titlePage_in: [String!]

  """All values that are not contained in given list."""
  titlePage_not_in: [String!]

  """All values less than the given value."""
  titlePage_lt: String

  """All values less than or equal the given value."""
  titlePage_lte: String

  """All values greater than the given value."""
  titlePage_gt: String

  """All values greater than or equal the given value."""
  titlePage_gte: String

  """All values containing the given string."""
  titlePage_contains: String

  """All values not containing the given string."""
  titlePage_not_contains: String

  """All values starting with the given string."""
  titlePage_starts_with: String

  """All values not starting with the given string."""
  titlePage_not_starts_with: String

  """All values ending with the given string."""
  titlePage_ends_with: String

  """All values not ending with the given string."""
  titlePage_not_ends_with: String
  pageSlogan: String

  """All values that are not equal to given value."""
  pageSlogan_not: String

  """All values that are contained in given list."""
  pageSlogan_in: [String!]

  """All values that are not contained in given list."""
  pageSlogan_not_in: [String!]

  """All values less than the given value."""
  pageSlogan_lt: String

  """All values less than or equal the given value."""
  pageSlogan_lte: String

  """All values greater than the given value."""
  pageSlogan_gt: String

  """All values greater than or equal the given value."""
  pageSlogan_gte: String

  """All values containing the given string."""
  pageSlogan_contains: String

  """All values not containing the given string."""
  pageSlogan_not_contains: String

  """All values starting with the given string."""
  pageSlogan_starts_with: String

  """All values not starting with the given string."""
  pageSlogan_not_starts_with: String

  """All values ending with the given string."""
  pageSlogan_ends_with: String

  """All values not ending with the given string."""
  pageSlogan_not_ends_with: String
  seoDescription: String

  """All values that are not equal to given value."""
  seoDescription_not: String

  """All values that are contained in given list."""
  seoDescription_in: [String!]

  """All values that are not contained in given list."""
  seoDescription_not_in: [String!]

  """All values less than the given value."""
  seoDescription_lt: String

  """All values less than or equal the given value."""
  seoDescription_lte: String

  """All values greater than the given value."""
  seoDescription_gt: String

  """All values greater than or equal the given value."""
  seoDescription_gte: String

  """All values containing the given string."""
  seoDescription_contains: String

  """All values not containing the given string."""
  seoDescription_not_contains: String

  """All values starting with the given string."""
  seoDescription_starts_with: String

  """All values not starting with the given string."""
  seoDescription_not_starts_with: String

  """All values ending with the given string."""
  seoDescription_ends_with: String

  """All values not ending with the given string."""
  seoDescription_not_ends_with: String
  themeColor: ColorInput

  """All values that are not equal to given value."""
  themeColor_not: String

  """All values that are contained in given list."""
  themeColor_in: [String!]

  """All values that are not contained in given list."""
  themeColor_not_in: [String!]

  """All values less than the given value."""
  themeColor_lt: String

  """All values less than or equal the given value."""
  themeColor_lte: String

  """All values greater than the given value."""
  themeColor_gt: String

  """All values greater than or equal the given value."""
  themeColor_gte: String

  """All values containing the given string."""
  themeColor_contains: String

  """All values not containing the given string."""
  themeColor_not_contains: String

  """All values starting with the given string."""
  themeColor_starts_with: String

  """All values not starting with the given string."""
  themeColor_not_starts_with: String

  """All values ending with the given string."""
  themeColor_ends_with: String

  """All values not ending with the given string."""
  themeColor_not_ends_with: String
  locationTitle: String

  """All values that are not equal to given value."""
  locationTitle_not: String

  """All values that are contained in given list."""
  locationTitle_in: [String!]

  """All values that are not contained in given list."""
  locationTitle_not_in: [String!]

  """All values less than the given value."""
  locationTitle_lt: String

  """All values less than or equal the given value."""
  locationTitle_lte: String

  """All values greater than the given value."""
  locationTitle_gt: String

  """All values greater than or equal the given value."""
  locationTitle_gte: String

  """All values containing the given string."""
  locationTitle_contains: String

  """All values not containing the given string."""
  locationTitle_not_contains: String

  """All values starting with the given string."""
  locationTitle_starts_with: String

  """All values not starting with the given string."""
  locationTitle_not_starts_with: String

  """All values ending with the given string."""
  locationTitle_ends_with: String

  """All values not ending with the given string."""
  locationTitle_not_ends_with: String
  conferenceEvent: ConferenceEventWhereInput
}

input PageWhereUniqueInput {
  id: ID
}

type PieceOfData implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  key: String
  conferenceEvent: ConferenceEvent
  file(where: AssetWhereInput, orderBy: AssetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Asset!]
  data: Json
}

"""A connection to a list of items."""
type PieceOfDataConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PieceOfDataEdge]!
  aggregate: AggregatePieceOfData!
}

input PieceOfDataCreateInput {
  status: Status
  key: String
  data: Json
  conferenceEvent: ConferenceEventCreateOneWithoutPieceOfDatasInput
  file: AssetCreateManyWithoutFilePieceOfDataInput
}

input PieceOfDataCreateManyWithoutConferenceEventInput {
  create: [PieceOfDataCreateWithoutConferenceEventInput!]
  connect: [PieceOfDataWhereUniqueInput!]
}

input PieceOfDataCreateManyWithoutFileInput {
  create: [PieceOfDataCreateWithoutFileInput!]
  connect: [PieceOfDataWhereUniqueInput!]
}

input PieceOfDataCreateWithoutConferenceEventInput {
  status: Status
  key: String
  data: Json
  file: AssetCreateManyWithoutFilePieceOfDataInput
}

input PieceOfDataCreateWithoutFileInput {
  status: Status
  key: String
  data: Json
  conferenceEvent: ConferenceEventCreateOneWithoutPieceOfDatasInput
}

"""An edge in a connection."""
type PieceOfDataEdge {
  """The item at the end of the edge."""
  node: PieceOfData!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PieceOfDataOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  key_ASC
  key_DESC
  data_ASC
  data_DESC
}

type PieceOfDataPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  key: String
  data: Json
}

input PieceOfDataScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PieceOfDataScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfDataScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfDataScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
}

type PieceOfDataSubscriptionPayload {
  mutation: MutationType!
  node: PieceOfData
  updatedFields: [String!]
  previousValues: PieceOfDataPreviousValues
}

input PieceOfDataSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PieceOfDataSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfDataSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfDataSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PieceOfDataWhereInput
}

input PieceOfDataUpdateInput {
  status: Status
  key: String
  data: Json
  conferenceEvent: ConferenceEventUpdateOneWithoutPieceOfDatasInput
  file: AssetUpdateManyWithoutFilePieceOfDataInput
}

input PieceOfDataUpdateManyDataInput {
  status: Status
  key: String
  data: Json
}

input PieceOfDataUpdateManyMutationInput {
  status: Status
  key: String
  data: Json
}

input PieceOfDataUpdateManyWithoutConferenceEventInput {
  create: [PieceOfDataCreateWithoutConferenceEventInput!]
  connect: [PieceOfDataWhereUniqueInput!]
  set: [PieceOfDataWhereUniqueInput!]
  disconnect: [PieceOfDataWhereUniqueInput!]
  delete: [PieceOfDataWhereUniqueInput!]
  update: [PieceOfDataUpdateWithWhereUniqueWithoutConferenceEventInput!]
  updateMany: [PieceOfDataUpdateManyWithWhereNestedInput!]
  deleteMany: [PieceOfDataScalarWhereInput!]
  upsert: [PieceOfDataUpsertWithWhereUniqueWithoutConferenceEventInput!]
}

input PieceOfDataUpdateManyWithoutFileInput {
  create: [PieceOfDataCreateWithoutFileInput!]
  connect: [PieceOfDataWhereUniqueInput!]
  set: [PieceOfDataWhereUniqueInput!]
  disconnect: [PieceOfDataWhereUniqueInput!]
  delete: [PieceOfDataWhereUniqueInput!]
  update: [PieceOfDataUpdateWithWhereUniqueWithoutFileInput!]
  updateMany: [PieceOfDataUpdateManyWithWhereNestedInput!]
  deleteMany: [PieceOfDataScalarWhereInput!]
  upsert: [PieceOfDataUpsertWithWhereUniqueWithoutFileInput!]
}

input PieceOfDataUpdateManyWithWhereNestedInput {
  where: PieceOfDataScalarWhereInput!
  data: PieceOfDataUpdateManyDataInput!
}

input PieceOfDataUpdateWithoutConferenceEventDataInput {
  status: Status
  key: String
  data: Json
  file: AssetUpdateManyWithoutFilePieceOfDataInput
}

input PieceOfDataUpdateWithoutFileDataInput {
  status: Status
  key: String
  data: Json
  conferenceEvent: ConferenceEventUpdateOneWithoutPieceOfDatasInput
}

input PieceOfDataUpdateWithWhereUniqueWithoutConferenceEventInput {
  where: PieceOfDataWhereUniqueInput!
  data: PieceOfDataUpdateWithoutConferenceEventDataInput!
}

input PieceOfDataUpdateWithWhereUniqueWithoutFileInput {
  where: PieceOfDataWhereUniqueInput!
  data: PieceOfDataUpdateWithoutFileDataInput!
}

input PieceOfDataUpsertWithWhereUniqueWithoutConferenceEventInput {
  where: PieceOfDataWhereUniqueInput!
  update: PieceOfDataUpdateWithoutConferenceEventDataInput!
  create: PieceOfDataCreateWithoutConferenceEventInput!
}

input PieceOfDataUpsertWithWhereUniqueWithoutFileInput {
  where: PieceOfDataWhereUniqueInput!
  update: PieceOfDataUpdateWithoutFileDataInput!
  create: PieceOfDataCreateWithoutFileInput!
}

input PieceOfDataWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PieceOfDataWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfDataWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfDataWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
  conferenceEvent: ConferenceEventWhereInput
  file_every: AssetWhereInput
  file_some: AssetWhereInput
  file_none: AssetWhereInput
}

input PieceOfDataWhereUniqueInput {
  id: ID
}

type PieceOfSpeakerInfo implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  speaker: Speaker
  conferenceEvent: ConferenceEvent
  label: String
  avatar: Asset
  isNightSpeaker: Boolean
  order: Int
}

"""A connection to a list of items."""
type PieceOfSpeakerInfoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PieceOfSpeakerInfoEdge]!
  aggregate: AggregatePieceOfSpeakerInfo!
}

input PieceOfSpeakerInfoCreateInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
  speaker: SpeakerCreateOneWithoutPieceOfSpeakerInfoesInput
  conferenceEvent: ConferenceEventCreateOneWithoutPieceOfSpeakerInfoesInput
  avatar: AssetCreateOneWithoutAvatarPieceOfSpeakerInfoInput
}

input PieceOfSpeakerInfoCreateManyWithoutAvatarInput {
  create: [PieceOfSpeakerInfoCreateWithoutAvatarInput!]
  connect: [PieceOfSpeakerInfoWhereUniqueInput!]
}

input PieceOfSpeakerInfoCreateManyWithoutConferenceEventInput {
  create: [PieceOfSpeakerInfoCreateWithoutConferenceEventInput!]
  connect: [PieceOfSpeakerInfoWhereUniqueInput!]
}

input PieceOfSpeakerInfoCreateManyWithoutSpeakerInput {
  create: [PieceOfSpeakerInfoCreateWithoutSpeakerInput!]
  connect: [PieceOfSpeakerInfoWhereUniqueInput!]
}

input PieceOfSpeakerInfoCreateWithoutAvatarInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
  speaker: SpeakerCreateOneWithoutPieceOfSpeakerInfoesInput
  conferenceEvent: ConferenceEventCreateOneWithoutPieceOfSpeakerInfoesInput
}

input PieceOfSpeakerInfoCreateWithoutConferenceEventInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
  speaker: SpeakerCreateOneWithoutPieceOfSpeakerInfoesInput
  avatar: AssetCreateOneWithoutAvatarPieceOfSpeakerInfoInput
}

input PieceOfSpeakerInfoCreateWithoutSpeakerInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
  conferenceEvent: ConferenceEventCreateOneWithoutPieceOfSpeakerInfoesInput
  avatar: AssetCreateOneWithoutAvatarPieceOfSpeakerInfoInput
}

"""An edge in a connection."""
type PieceOfSpeakerInfoEdge {
  """The item at the end of the edge."""
  node: PieceOfSpeakerInfo!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PieceOfSpeakerInfoOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  label_ASC
  label_DESC
  isNightSpeaker_ASC
  isNightSpeaker_DESC
  order_ASC
  order_DESC
}

type PieceOfSpeakerInfoPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  label: String
  isNightSpeaker: Boolean
  order: Int
}

input PieceOfSpeakerInfoScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PieceOfSpeakerInfoScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfSpeakerInfoScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfSpeakerInfoScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  label: String

  """All values that are not equal to given value."""
  label_not: String

  """All values that are contained in given list."""
  label_in: [String!]

  """All values that are not contained in given list."""
  label_not_in: [String!]

  """All values less than the given value."""
  label_lt: String

  """All values less than or equal the given value."""
  label_lte: String

  """All values greater than the given value."""
  label_gt: String

  """All values greater than or equal the given value."""
  label_gte: String

  """All values containing the given string."""
  label_contains: String

  """All values not containing the given string."""
  label_not_contains: String

  """All values starting with the given string."""
  label_starts_with: String

  """All values not starting with the given string."""
  label_not_starts_with: String

  """All values ending with the given string."""
  label_ends_with: String

  """All values not ending with the given string."""
  label_not_ends_with: String
  isNightSpeaker: Boolean

  """All values that are not equal to given value."""
  isNightSpeaker_not: Boolean
  order: Int

  """All values that are not equal to given value."""
  order_not: Int

  """All values that are contained in given list."""
  order_in: [Int!]

  """All values that are not contained in given list."""
  order_not_in: [Int!]

  """All values less than the given value."""
  order_lt: Int

  """All values less than or equal the given value."""
  order_lte: Int

  """All values greater than the given value."""
  order_gt: Int

  """All values greater than or equal the given value."""
  order_gte: Int
}

type PieceOfSpeakerInfoSubscriptionPayload {
  mutation: MutationType!
  node: PieceOfSpeakerInfo
  updatedFields: [String!]
  previousValues: PieceOfSpeakerInfoPreviousValues
}

input PieceOfSpeakerInfoSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PieceOfSpeakerInfoSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfSpeakerInfoSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfSpeakerInfoSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PieceOfSpeakerInfoWhereInput
}

input PieceOfSpeakerInfoUpdateInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
  speaker: SpeakerUpdateOneWithoutPieceOfSpeakerInfoesInput
  conferenceEvent: ConferenceEventUpdateOneWithoutPieceOfSpeakerInfoesInput
  avatar: AssetUpdateOneWithoutAvatarPieceOfSpeakerInfoInput
}

input PieceOfSpeakerInfoUpdateManyDataInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
}

input PieceOfSpeakerInfoUpdateManyMutationInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
}

input PieceOfSpeakerInfoUpdateManyWithoutAvatarInput {
  create: [PieceOfSpeakerInfoCreateWithoutAvatarInput!]
  connect: [PieceOfSpeakerInfoWhereUniqueInput!]
  set: [PieceOfSpeakerInfoWhereUniqueInput!]
  disconnect: [PieceOfSpeakerInfoWhereUniqueInput!]
  delete: [PieceOfSpeakerInfoWhereUniqueInput!]
  update: [PieceOfSpeakerInfoUpdateWithWhereUniqueWithoutAvatarInput!]
  updateMany: [PieceOfSpeakerInfoUpdateManyWithWhereNestedInput!]
  deleteMany: [PieceOfSpeakerInfoScalarWhereInput!]
  upsert: [PieceOfSpeakerInfoUpsertWithWhereUniqueWithoutAvatarInput!]
}

input PieceOfSpeakerInfoUpdateManyWithoutConferenceEventInput {
  create: [PieceOfSpeakerInfoCreateWithoutConferenceEventInput!]
  connect: [PieceOfSpeakerInfoWhereUniqueInput!]
  set: [PieceOfSpeakerInfoWhereUniqueInput!]
  disconnect: [PieceOfSpeakerInfoWhereUniqueInput!]
  delete: [PieceOfSpeakerInfoWhereUniqueInput!]
  update: [PieceOfSpeakerInfoUpdateWithWhereUniqueWithoutConferenceEventInput!]
  updateMany: [PieceOfSpeakerInfoUpdateManyWithWhereNestedInput!]
  deleteMany: [PieceOfSpeakerInfoScalarWhereInput!]
  upsert: [PieceOfSpeakerInfoUpsertWithWhereUniqueWithoutConferenceEventInput!]
}

input PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput {
  create: [PieceOfSpeakerInfoCreateWithoutSpeakerInput!]
  connect: [PieceOfSpeakerInfoWhereUniqueInput!]
  set: [PieceOfSpeakerInfoWhereUniqueInput!]
  disconnect: [PieceOfSpeakerInfoWhereUniqueInput!]
  delete: [PieceOfSpeakerInfoWhereUniqueInput!]
  update: [PieceOfSpeakerInfoUpdateWithWhereUniqueWithoutSpeakerInput!]
  updateMany: [PieceOfSpeakerInfoUpdateManyWithWhereNestedInput!]
  deleteMany: [PieceOfSpeakerInfoScalarWhereInput!]
  upsert: [PieceOfSpeakerInfoUpsertWithWhereUniqueWithoutSpeakerInput!]
}

input PieceOfSpeakerInfoUpdateManyWithWhereNestedInput {
  where: PieceOfSpeakerInfoScalarWhereInput!
  data: PieceOfSpeakerInfoUpdateManyDataInput!
}

input PieceOfSpeakerInfoUpdateWithoutAvatarDataInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
  speaker: SpeakerUpdateOneWithoutPieceOfSpeakerInfoesInput
  conferenceEvent: ConferenceEventUpdateOneWithoutPieceOfSpeakerInfoesInput
}

input PieceOfSpeakerInfoUpdateWithoutConferenceEventDataInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
  speaker: SpeakerUpdateOneWithoutPieceOfSpeakerInfoesInput
  avatar: AssetUpdateOneWithoutAvatarPieceOfSpeakerInfoInput
}

input PieceOfSpeakerInfoUpdateWithoutSpeakerDataInput {
  status: Status
  label: String
  isNightSpeaker: Boolean
  order: Int
  conferenceEvent: ConferenceEventUpdateOneWithoutPieceOfSpeakerInfoesInput
  avatar: AssetUpdateOneWithoutAvatarPieceOfSpeakerInfoInput
}

input PieceOfSpeakerInfoUpdateWithWhereUniqueWithoutAvatarInput {
  where: PieceOfSpeakerInfoWhereUniqueInput!
  data: PieceOfSpeakerInfoUpdateWithoutAvatarDataInput!
}

input PieceOfSpeakerInfoUpdateWithWhereUniqueWithoutConferenceEventInput {
  where: PieceOfSpeakerInfoWhereUniqueInput!
  data: PieceOfSpeakerInfoUpdateWithoutConferenceEventDataInput!
}

input PieceOfSpeakerInfoUpdateWithWhereUniqueWithoutSpeakerInput {
  where: PieceOfSpeakerInfoWhereUniqueInput!
  data: PieceOfSpeakerInfoUpdateWithoutSpeakerDataInput!
}

input PieceOfSpeakerInfoUpsertWithWhereUniqueWithoutAvatarInput {
  where: PieceOfSpeakerInfoWhereUniqueInput!
  update: PieceOfSpeakerInfoUpdateWithoutAvatarDataInput!
  create: PieceOfSpeakerInfoCreateWithoutAvatarInput!
}

input PieceOfSpeakerInfoUpsertWithWhereUniqueWithoutConferenceEventInput {
  where: PieceOfSpeakerInfoWhereUniqueInput!
  update: PieceOfSpeakerInfoUpdateWithoutConferenceEventDataInput!
  create: PieceOfSpeakerInfoCreateWithoutConferenceEventInput!
}

input PieceOfSpeakerInfoUpsertWithWhereUniqueWithoutSpeakerInput {
  where: PieceOfSpeakerInfoWhereUniqueInput!
  update: PieceOfSpeakerInfoUpdateWithoutSpeakerDataInput!
  create: PieceOfSpeakerInfoCreateWithoutSpeakerInput!
}

input PieceOfSpeakerInfoWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PieceOfSpeakerInfoWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfSpeakerInfoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfSpeakerInfoWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  label: String

  """All values that are not equal to given value."""
  label_not: String

  """All values that are contained in given list."""
  label_in: [String!]

  """All values that are not contained in given list."""
  label_not_in: [String!]

  """All values less than the given value."""
  label_lt: String

  """All values less than or equal the given value."""
  label_lte: String

  """All values greater than the given value."""
  label_gt: String

  """All values greater than or equal the given value."""
  label_gte: String

  """All values containing the given string."""
  label_contains: String

  """All values not containing the given string."""
  label_not_contains: String

  """All values starting with the given string."""
  label_starts_with: String

  """All values not starting with the given string."""
  label_not_starts_with: String

  """All values ending with the given string."""
  label_ends_with: String

  """All values not ending with the given string."""
  label_not_ends_with: String
  isNightSpeaker: Boolean

  """All values that are not equal to given value."""
  isNightSpeaker_not: Boolean
  order: Int

  """All values that are not equal to given value."""
  order_not: Int

  """All values that are contained in given list."""
  order_in: [Int!]

  """All values that are not contained in given list."""
  order_not_in: [Int!]

  """All values less than the given value."""
  order_lt: Int

  """All values less than or equal the given value."""
  order_lte: Int

  """All values greater than the given value."""
  order_gt: Int

  """All values greater than or equal the given value."""
  order_gte: Int
  speaker: SpeakerWhereInput
  conferenceEvent: ConferenceEventWhereInput
  avatar: AssetWhereInput
}

input PieceOfSpeakerInfoWhereUniqueInput {
  id: ID
}

type PieceOfSponsorInfo implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  sponsor: Sponsor
  conferenceEvent: ConferenceEvent
  width: Int
  category: SponsorStatus
  avatar: Asset
  order: Int
}

"""A connection to a list of items."""
type PieceOfSponsorInfoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PieceOfSponsorInfoEdge]!
  aggregate: AggregatePieceOfSponsorInfo!
}

input PieceOfSponsorInfoCreateInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
  sponsor: SponsorCreateOneWithoutPieceOfSponsorInfoesInput
  conferenceEvent: ConferenceEventCreateOneWithoutPieceOfSponsorInfoesInput
  avatar: AssetCreateOneWithoutAvatarPieceOfSponsorInfoInput
}

input PieceOfSponsorInfoCreateManyWithoutAvatarInput {
  create: [PieceOfSponsorInfoCreateWithoutAvatarInput!]
  connect: [PieceOfSponsorInfoWhereUniqueInput!]
}

input PieceOfSponsorInfoCreateManyWithoutConferenceEventInput {
  create: [PieceOfSponsorInfoCreateWithoutConferenceEventInput!]
  connect: [PieceOfSponsorInfoWhereUniqueInput!]
}

input PieceOfSponsorInfoCreateManyWithoutSponsorInput {
  create: [PieceOfSponsorInfoCreateWithoutSponsorInput!]
  connect: [PieceOfSponsorInfoWhereUniqueInput!]
}

input PieceOfSponsorInfoCreateWithoutAvatarInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
  sponsor: SponsorCreateOneWithoutPieceOfSponsorInfoesInput
  conferenceEvent: ConferenceEventCreateOneWithoutPieceOfSponsorInfoesInput
}

input PieceOfSponsorInfoCreateWithoutConferenceEventInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
  sponsor: SponsorCreateOneWithoutPieceOfSponsorInfoesInput
  avatar: AssetCreateOneWithoutAvatarPieceOfSponsorInfoInput
}

input PieceOfSponsorInfoCreateWithoutSponsorInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
  conferenceEvent: ConferenceEventCreateOneWithoutPieceOfSponsorInfoesInput
  avatar: AssetCreateOneWithoutAvatarPieceOfSponsorInfoInput
}

"""An edge in a connection."""
type PieceOfSponsorInfoEdge {
  """The item at the end of the edge."""
  node: PieceOfSponsorInfo!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PieceOfSponsorInfoOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  width_ASC
  width_DESC
  category_ASC
  category_DESC
  order_ASC
  order_DESC
}

type PieceOfSponsorInfoPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  width: Int
  category: SponsorStatus
  order: Int
}

input PieceOfSponsorInfoScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PieceOfSponsorInfoScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfSponsorInfoScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfSponsorInfoScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  width: Int

  """All values that are not equal to given value."""
  width_not: Int

  """All values that are contained in given list."""
  width_in: [Int!]

  """All values that are not contained in given list."""
  width_not_in: [Int!]

  """All values less than the given value."""
  width_lt: Int

  """All values less than or equal the given value."""
  width_lte: Int

  """All values greater than the given value."""
  width_gt: Int

  """All values greater than or equal the given value."""
  width_gte: Int
  category: SponsorStatus

  """All values that are not equal to given value."""
  category_not: SponsorStatus

  """All values that are contained in given list."""
  category_in: [SponsorStatus!]

  """All values that are not contained in given list."""
  category_not_in: [SponsorStatus!]
  order: Int

  """All values that are not equal to given value."""
  order_not: Int

  """All values that are contained in given list."""
  order_in: [Int!]

  """All values that are not contained in given list."""
  order_not_in: [Int!]

  """All values less than the given value."""
  order_lt: Int

  """All values less than or equal the given value."""
  order_lte: Int

  """All values greater than the given value."""
  order_gt: Int

  """All values greater than or equal the given value."""
  order_gte: Int
}

type PieceOfSponsorInfoSubscriptionPayload {
  mutation: MutationType!
  node: PieceOfSponsorInfo
  updatedFields: [String!]
  previousValues: PieceOfSponsorInfoPreviousValues
}

input PieceOfSponsorInfoSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PieceOfSponsorInfoSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfSponsorInfoSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfSponsorInfoSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PieceOfSponsorInfoWhereInput
}

input PieceOfSponsorInfoUpdateInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
  sponsor: SponsorUpdateOneWithoutPieceOfSponsorInfoesInput
  conferenceEvent: ConferenceEventUpdateOneWithoutPieceOfSponsorInfoesInput
  avatar: AssetUpdateOneWithoutAvatarPieceOfSponsorInfoInput
}

input PieceOfSponsorInfoUpdateManyDataInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
}

input PieceOfSponsorInfoUpdateManyMutationInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
}

input PieceOfSponsorInfoUpdateManyWithoutAvatarInput {
  create: [PieceOfSponsorInfoCreateWithoutAvatarInput!]
  connect: [PieceOfSponsorInfoWhereUniqueInput!]
  set: [PieceOfSponsorInfoWhereUniqueInput!]
  disconnect: [PieceOfSponsorInfoWhereUniqueInput!]
  delete: [PieceOfSponsorInfoWhereUniqueInput!]
  update: [PieceOfSponsorInfoUpdateWithWhereUniqueWithoutAvatarInput!]
  updateMany: [PieceOfSponsorInfoUpdateManyWithWhereNestedInput!]
  deleteMany: [PieceOfSponsorInfoScalarWhereInput!]
  upsert: [PieceOfSponsorInfoUpsertWithWhereUniqueWithoutAvatarInput!]
}

input PieceOfSponsorInfoUpdateManyWithoutConferenceEventInput {
  create: [PieceOfSponsorInfoCreateWithoutConferenceEventInput!]
  connect: [PieceOfSponsorInfoWhereUniqueInput!]
  set: [PieceOfSponsorInfoWhereUniqueInput!]
  disconnect: [PieceOfSponsorInfoWhereUniqueInput!]
  delete: [PieceOfSponsorInfoWhereUniqueInput!]
  update: [PieceOfSponsorInfoUpdateWithWhereUniqueWithoutConferenceEventInput!]
  updateMany: [PieceOfSponsorInfoUpdateManyWithWhereNestedInput!]
  deleteMany: [PieceOfSponsorInfoScalarWhereInput!]
  upsert: [PieceOfSponsorInfoUpsertWithWhereUniqueWithoutConferenceEventInput!]
}

input PieceOfSponsorInfoUpdateManyWithoutSponsorInput {
  create: [PieceOfSponsorInfoCreateWithoutSponsorInput!]
  connect: [PieceOfSponsorInfoWhereUniqueInput!]
  set: [PieceOfSponsorInfoWhereUniqueInput!]
  disconnect: [PieceOfSponsorInfoWhereUniqueInput!]
  delete: [PieceOfSponsorInfoWhereUniqueInput!]
  update: [PieceOfSponsorInfoUpdateWithWhereUniqueWithoutSponsorInput!]
  updateMany: [PieceOfSponsorInfoUpdateManyWithWhereNestedInput!]
  deleteMany: [PieceOfSponsorInfoScalarWhereInput!]
  upsert: [PieceOfSponsorInfoUpsertWithWhereUniqueWithoutSponsorInput!]
}

input PieceOfSponsorInfoUpdateManyWithWhereNestedInput {
  where: PieceOfSponsorInfoScalarWhereInput!
  data: PieceOfSponsorInfoUpdateManyDataInput!
}

input PieceOfSponsorInfoUpdateWithoutAvatarDataInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
  sponsor: SponsorUpdateOneWithoutPieceOfSponsorInfoesInput
  conferenceEvent: ConferenceEventUpdateOneWithoutPieceOfSponsorInfoesInput
}

input PieceOfSponsorInfoUpdateWithoutConferenceEventDataInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
  sponsor: SponsorUpdateOneWithoutPieceOfSponsorInfoesInput
  avatar: AssetUpdateOneWithoutAvatarPieceOfSponsorInfoInput
}

input PieceOfSponsorInfoUpdateWithoutSponsorDataInput {
  status: Status
  width: Int
  category: SponsorStatus
  order: Int
  conferenceEvent: ConferenceEventUpdateOneWithoutPieceOfSponsorInfoesInput
  avatar: AssetUpdateOneWithoutAvatarPieceOfSponsorInfoInput
}

input PieceOfSponsorInfoUpdateWithWhereUniqueWithoutAvatarInput {
  where: PieceOfSponsorInfoWhereUniqueInput!
  data: PieceOfSponsorInfoUpdateWithoutAvatarDataInput!
}

input PieceOfSponsorInfoUpdateWithWhereUniqueWithoutConferenceEventInput {
  where: PieceOfSponsorInfoWhereUniqueInput!
  data: PieceOfSponsorInfoUpdateWithoutConferenceEventDataInput!
}

input PieceOfSponsorInfoUpdateWithWhereUniqueWithoutSponsorInput {
  where: PieceOfSponsorInfoWhereUniqueInput!
  data: PieceOfSponsorInfoUpdateWithoutSponsorDataInput!
}

input PieceOfSponsorInfoUpsertWithWhereUniqueWithoutAvatarInput {
  where: PieceOfSponsorInfoWhereUniqueInput!
  update: PieceOfSponsorInfoUpdateWithoutAvatarDataInput!
  create: PieceOfSponsorInfoCreateWithoutAvatarInput!
}

input PieceOfSponsorInfoUpsertWithWhereUniqueWithoutConferenceEventInput {
  where: PieceOfSponsorInfoWhereUniqueInput!
  update: PieceOfSponsorInfoUpdateWithoutConferenceEventDataInput!
  create: PieceOfSponsorInfoCreateWithoutConferenceEventInput!
}

input PieceOfSponsorInfoUpsertWithWhereUniqueWithoutSponsorInput {
  where: PieceOfSponsorInfoWhereUniqueInput!
  update: PieceOfSponsorInfoUpdateWithoutSponsorDataInput!
  create: PieceOfSponsorInfoCreateWithoutSponsorInput!
}

input PieceOfSponsorInfoWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PieceOfSponsorInfoWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfSponsorInfoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfSponsorInfoWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  width: Int

  """All values that are not equal to given value."""
  width_not: Int

  """All values that are contained in given list."""
  width_in: [Int!]

  """All values that are not contained in given list."""
  width_not_in: [Int!]

  """All values less than the given value."""
  width_lt: Int

  """All values less than or equal the given value."""
  width_lte: Int

  """All values greater than the given value."""
  width_gt: Int

  """All values greater than or equal the given value."""
  width_gte: Int
  category: SponsorStatus

  """All values that are not equal to given value."""
  category_not: SponsorStatus

  """All values that are contained in given list."""
  category_in: [SponsorStatus!]

  """All values that are not contained in given list."""
  category_not_in: [SponsorStatus!]
  order: Int

  """All values that are not equal to given value."""
  order_not: Int

  """All values that are contained in given list."""
  order_in: [Int!]

  """All values that are not contained in given list."""
  order_not_in: [Int!]

  """All values less than the given value."""
  order_lt: Int

  """All values less than or equal the given value."""
  order_lte: Int

  """All values greater than the given value."""
  order_gt: Int

  """All values greater than or equal the given value."""
  order_gte: Int
  sponsor: SponsorWhereInput
  conferenceEvent: ConferenceEventWhereInput
  avatar: AssetWhereInput
}

input PieceOfSponsorInfoWhereUniqueInput {
  id: ID
}

type PieceOfText implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  markdown: String
  key: String!
  conferenceEvent: ConferenceEvent
  renderStyle: MarkdownRenderStyles
}

"""A connection to a list of items."""
type PieceOfTextConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PieceOfTextEdge]!
  aggregate: AggregatePieceOfText!
}

input PieceOfTextCreateInput {
  status: Status
  markdown: String
  key: String!
  renderStyle: MarkdownRenderStyles
  conferenceEvent: ConferenceEventCreateOneWithoutPieceOfTextsInput
}

input PieceOfTextCreateManyWithoutConferenceEventInput {
  create: [PieceOfTextCreateWithoutConferenceEventInput!]
  connect: [PieceOfTextWhereUniqueInput!]
}

input PieceOfTextCreateWithoutConferenceEventInput {
  status: Status
  markdown: String
  key: String!
  renderStyle: MarkdownRenderStyles
}

"""An edge in a connection."""
type PieceOfTextEdge {
  """The item at the end of the edge."""
  node: PieceOfText!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PieceOfTextOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  markdown_ASC
  markdown_DESC
  key_ASC
  key_DESC
  renderStyle_ASC
  renderStyle_DESC
}

type PieceOfTextPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  markdown: String
  key: String!
  renderStyle: MarkdownRenderStyles
}

input PieceOfTextScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PieceOfTextScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfTextScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfTextScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  markdown: String

  """All values that are not equal to given value."""
  markdown_not: String

  """All values that are contained in given list."""
  markdown_in: [String!]

  """All values that are not contained in given list."""
  markdown_not_in: [String!]

  """All values less than the given value."""
  markdown_lt: String

  """All values less than or equal the given value."""
  markdown_lte: String

  """All values greater than the given value."""
  markdown_gt: String

  """All values greater than or equal the given value."""
  markdown_gte: String

  """All values containing the given string."""
  markdown_contains: String

  """All values not containing the given string."""
  markdown_not_contains: String

  """All values starting with the given string."""
  markdown_starts_with: String

  """All values not starting with the given string."""
  markdown_not_starts_with: String

  """All values ending with the given string."""
  markdown_ends_with: String

  """All values not ending with the given string."""
  markdown_not_ends_with: String
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
  renderStyle: MarkdownRenderStyles

  """All values that are not equal to given value."""
  renderStyle_not: MarkdownRenderStyles

  """All values that are contained in given list."""
  renderStyle_in: [MarkdownRenderStyles!]

  """All values that are not contained in given list."""
  renderStyle_not_in: [MarkdownRenderStyles!]
}

type PieceOfTextSubscriptionPayload {
  mutation: MutationType!
  node: PieceOfText
  updatedFields: [String!]
  previousValues: PieceOfTextPreviousValues
}

input PieceOfTextSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PieceOfTextSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfTextSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfTextSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PieceOfTextWhereInput
}

input PieceOfTextUpdateInput {
  status: Status
  markdown: String
  key: String
  renderStyle: MarkdownRenderStyles
  conferenceEvent: ConferenceEventUpdateOneWithoutPieceOfTextsInput
}

input PieceOfTextUpdateManyDataInput {
  status: Status
  markdown: String
  key: String
  renderStyle: MarkdownRenderStyles
}

input PieceOfTextUpdateManyMutationInput {
  status: Status
  markdown: String
  key: String
  renderStyle: MarkdownRenderStyles
}

input PieceOfTextUpdateManyWithoutConferenceEventInput {
  create: [PieceOfTextCreateWithoutConferenceEventInput!]
  connect: [PieceOfTextWhereUniqueInput!]
  set: [PieceOfTextWhereUniqueInput!]
  disconnect: [PieceOfTextWhereUniqueInput!]
  delete: [PieceOfTextWhereUniqueInput!]
  update: [PieceOfTextUpdateWithWhereUniqueWithoutConferenceEventInput!]
  updateMany: [PieceOfTextUpdateManyWithWhereNestedInput!]
  deleteMany: [PieceOfTextScalarWhereInput!]
  upsert: [PieceOfTextUpsertWithWhereUniqueWithoutConferenceEventInput!]
}

input PieceOfTextUpdateManyWithWhereNestedInput {
  where: PieceOfTextScalarWhereInput!
  data: PieceOfTextUpdateManyDataInput!
}

input PieceOfTextUpdateWithoutConferenceEventDataInput {
  status: Status
  markdown: String
  key: String
  renderStyle: MarkdownRenderStyles
}

input PieceOfTextUpdateWithWhereUniqueWithoutConferenceEventInput {
  where: PieceOfTextWhereUniqueInput!
  data: PieceOfTextUpdateWithoutConferenceEventDataInput!
}

input PieceOfTextUpsertWithWhereUniqueWithoutConferenceEventInput {
  where: PieceOfTextWhereUniqueInput!
  update: PieceOfTextUpdateWithoutConferenceEventDataInput!
  create: PieceOfTextCreateWithoutConferenceEventInput!
}

input PieceOfTextWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [PieceOfTextWhereInput!]

  """Logical OR on all given filters."""
  OR: [PieceOfTextWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PieceOfTextWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  markdown: String

  """All values that are not equal to given value."""
  markdown_not: String

  """All values that are contained in given list."""
  markdown_in: [String!]

  """All values that are not contained in given list."""
  markdown_not_in: [String!]

  """All values less than the given value."""
  markdown_lt: String

  """All values less than or equal the given value."""
  markdown_lte: String

  """All values greater than the given value."""
  markdown_gt: String

  """All values greater than or equal the given value."""
  markdown_gte: String

  """All values containing the given string."""
  markdown_contains: String

  """All values not containing the given string."""
  markdown_not_contains: String

  """All values starting with the given string."""
  markdown_starts_with: String

  """All values not starting with the given string."""
  markdown_not_starts_with: String

  """All values ending with the given string."""
  markdown_ends_with: String

  """All values not ending with the given string."""
  markdown_not_ends_with: String
  key: String

  """All values that are not equal to given value."""
  key_not: String

  """All values that are contained in given list."""
  key_in: [String!]

  """All values that are not contained in given list."""
  key_not_in: [String!]

  """All values less than the given value."""
  key_lt: String

  """All values less than or equal the given value."""
  key_lte: String

  """All values greater than the given value."""
  key_gt: String

  """All values greater than or equal the given value."""
  key_gte: String

  """All values containing the given string."""
  key_contains: String

  """All values not containing the given string."""
  key_not_contains: String

  """All values starting with the given string."""
  key_starts_with: String

  """All values not starting with the given string."""
  key_not_starts_with: String

  """All values ending with the given string."""
  key_ends_with: String

  """All values not ending with the given string."""
  key_not_ends_with: String
  renderStyle: MarkdownRenderStyles

  """All values that are not equal to given value."""
  renderStyle_not: MarkdownRenderStyles

  """All values that are contained in given list."""
  renderStyle_in: [MarkdownRenderStyles!]

  """All values that are not contained in given list."""
  renderStyle_not_in: [MarkdownRenderStyles!]
  conferenceEvent: ConferenceEventWhereInput
}

input PieceOfTextWhereUniqueInput {
  id: ID
}

type Query {
  assets(where: AssetWhereInput, orderBy: AssetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Asset]!
  pieceOfTexts(where: PieceOfTextWhereInput, orderBy: PieceOfTextOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfText]!
  conferenceBrands(where: ConferenceBrandWhereInput, orderBy: ConferenceBrandOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ConferenceBrand]!
  conferenceEvents(where: ConferenceEventWhereInput, orderBy: ConferenceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ConferenceEvent]!
  tracks(where: TrackWhereInput, orderBy: TrackOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Track]!
  daySchedules(where: DayScheduleWhereInput, orderBy: DayScheduleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DaySchedule]!
  speakers(where: SpeakerWhereInput, orderBy: SpeakerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Speaker]!
  talks(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Talk]!
  workshops(where: WorkshopWhereInput, orderBy: WorkshopOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Workshop]!
  adviceLounges(where: AdviceLoungeWhereInput, orderBy: AdviceLoungeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdviceLounge]!
  pieceOfSpeakerInfoes(where: PieceOfSpeakerInfoWhereInput, orderBy: PieceOfSpeakerInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfSpeakerInfo]!
  sponsors(where: SponsorWhereInput, orderBy: SponsorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sponsor]!
  pieceOfSponsorInfoes(where: PieceOfSponsorInfoWhereInput, orderBy: PieceOfSponsorInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfSponsorInfo]!
  pages(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Page]!
  mcs(where: McWhereInput, orderBy: McOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Mc]!
  pieceOfDatas(where: PieceOfDataWhereInput, orderBy: PieceOfDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfData]!
  jobs(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job]!
  sdfs(where: SdfWhereInput, orderBy: SdfOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sdf]!
  faqs(where: FaqWhereInput, orderBy: FaqOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Faq]!
  extendeds(where: ExtendedWhereInput, orderBy: ExtendedOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Extended]!
  asset(where: AssetWhereUniqueInput!): Asset
  pieceOfText(where: PieceOfTextWhereUniqueInput!): PieceOfText
  conferenceBrand(where: ConferenceBrandWhereUniqueInput!): ConferenceBrand
  conferenceEvent(where: ConferenceEventWhereUniqueInput!): ConferenceEvent
  track(where: TrackWhereUniqueInput!): Track
  daySchedule(where: DayScheduleWhereUniqueInput!): DaySchedule
  speaker(where: SpeakerWhereUniqueInput!): Speaker
  talk(where: TalkWhereUniqueInput!): Talk
  workshop(where: WorkshopWhereUniqueInput!): Workshop
  adviceLounge(where: AdviceLoungeWhereUniqueInput!): AdviceLounge
  pieceOfSpeakerInfo(where: PieceOfSpeakerInfoWhereUniqueInput!): PieceOfSpeakerInfo
  sponsor(where: SponsorWhereUniqueInput!): Sponsor
  pieceOfSponsorInfo(where: PieceOfSponsorInfoWhereUniqueInput!): PieceOfSponsorInfo
  page(where: PageWhereUniqueInput!): Page
  mc(where: McWhereUniqueInput!): Mc
  pieceOfData(where: PieceOfDataWhereUniqueInput!): PieceOfData
  job(where: JobWhereUniqueInput!): Job
  sdf(where: SdfWhereUniqueInput!): Sdf
  faq(where: FaqWhereUniqueInput!): Faq
  extended(where: ExtendedWhereUniqueInput!): Extended
  assetsConnection(where: AssetWhereInput, orderBy: AssetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AssetConnection!
  pieceOfTextsConnection(where: PieceOfTextWhereInput, orderBy: PieceOfTextOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PieceOfTextConnection!
  conferenceBrandsConnection(where: ConferenceBrandWhereInput, orderBy: ConferenceBrandOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ConferenceBrandConnection!
  conferenceEventsConnection(where: ConferenceEventWhereInput, orderBy: ConferenceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ConferenceEventConnection!
  tracksConnection(where: TrackWhereInput, orderBy: TrackOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TrackConnection!
  daySchedulesConnection(where: DayScheduleWhereInput, orderBy: DayScheduleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DayScheduleConnection!
  speakersConnection(where: SpeakerWhereInput, orderBy: SpeakerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SpeakerConnection!
  talksConnection(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TalkConnection!
  workshopsConnection(where: WorkshopWhereInput, orderBy: WorkshopOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WorkshopConnection!
  adviceLoungesConnection(where: AdviceLoungeWhereInput, orderBy: AdviceLoungeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdviceLoungeConnection!
  pieceOfSpeakerInfoesConnection(where: PieceOfSpeakerInfoWhereInput, orderBy: PieceOfSpeakerInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PieceOfSpeakerInfoConnection!
  sponsorsConnection(where: SponsorWhereInput, orderBy: SponsorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SponsorConnection!
  pieceOfSponsorInfoesConnection(where: PieceOfSponsorInfoWhereInput, orderBy: PieceOfSponsorInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PieceOfSponsorInfoConnection!
  pagesConnection(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PageConnection!
  mcsConnection(where: McWhereInput, orderBy: McOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): McConnection!
  pieceOfDatasConnection(where: PieceOfDataWhereInput, orderBy: PieceOfDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PieceOfDataConnection!
  jobsConnection(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): JobConnection!
  sdfsConnection(where: SdfWhereInput, orderBy: SdfOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SdfConnection!
  faqsConnection(where: FaqWhereInput, orderBy: FaqOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FaqConnection!
  extendedsConnection(where: ExtendedWhereInput, orderBy: ExtendedOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ExtendedConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}

"""
Custom scalar representing the hue part of a rgba value. Value ranges from 0 - 255
"""
scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}

"""
Custom scalar representing the transparency part of a rgba value. Value ranges from 0 - 1
"""
scalar RGBATransparency

type Sdf implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  ssss: [String!]!
}

"""A connection to a list of items."""
type SdfConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SdfEdge]!
  aggregate: AggregateSdf!
}

input SdfCreateInput {
  status: Status
  ssss: SdfCreatessssInput
}

input SdfCreatessssInput {
  set: [String!]
}

"""An edge in a connection."""
type SdfEdge {
  """The item at the end of the edge."""
  node: Sdf!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SdfOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
}

type SdfPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  ssss: [String!]!
}

type SdfSubscriptionPayload {
  mutation: MutationType!
  node: Sdf
  updatedFields: [String!]
  previousValues: SdfPreviousValues
}

input SdfSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SdfSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SdfSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SdfSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SdfWhereInput
}

input SdfUpdateInput {
  status: Status
  ssss: SdfUpdatessssInput
}

input SdfUpdateManyMutationInput {
  status: Status
  ssss: SdfUpdatessssInput
}

input SdfUpdatessssInput {
  set: [String!]
}

input SdfWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [SdfWhereInput!]

  """Logical OR on all given filters."""
  OR: [SdfWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SdfWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
}

input SdfWhereUniqueInput {
  id: ID
}

type Speaker implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  name: String
  avatarExtraUrl: String
  avatar: Asset
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  conferenceEvents(where: ConferenceEventWhereInput, orderBy: ConferenceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ConferenceEvent!]
  talks(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Talk!]
  workshops(where: WorkshopWhereInput, orderBy: WorkshopOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Workshop!]
  adviceLounges(where: AdviceLoungeWhereInput, orderBy: AdviceLoungeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdviceLounge!]
  pieceOfSpeakerInfoes(where: PieceOfSpeakerInfoWhereInput, orderBy: PieceOfSpeakerInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfSpeakerInfo!]
  mcs(where: McWhereInput, orderBy: McOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Mc!]
  performanceForEvent(where: ConferenceEventWhereInput, orderBy: ConferenceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ConferenceEvent!]
  conferenceCommittee(where: ConferenceEventWhereInput, orderBy: ConferenceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ConferenceEvent!]
}

"""A connection to a list of items."""
type SpeakerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SpeakerEdge]!
  aggregate: AggregateSpeaker!
}

input SpeakerCreateInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetCreateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventCreateManyWithoutSpeakersInput
  talks: TalkCreateManyWithoutSpeakerInput
  workshops: WorkshopCreateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeCreateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutSpeakerInput
  mcs: McCreateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventCreateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventCreateManyWithoutCommitteeInput
}

input SpeakerCreateManyWithoutAvatarInput {
  create: [SpeakerCreateWithoutAvatarInput!]
  connect: [SpeakerWhereUniqueInput!]
}

input SpeakerCreateManyWithoutConferenceCommitteeInput {
  create: [SpeakerCreateWithoutConferenceCommitteeInput!]
  connect: [SpeakerWhereUniqueInput!]
}

input SpeakerCreateManyWithoutConferenceEventsInput {
  create: [SpeakerCreateWithoutConferenceEventsInput!]
  connect: [SpeakerWhereUniqueInput!]
}

input SpeakerCreateManyWithoutPerformanceForEventInput {
  create: [SpeakerCreateWithoutPerformanceForEventInput!]
  connect: [SpeakerWhereUniqueInput!]
}

input SpeakerCreateOneWithoutAdviceLoungesInput {
  create: SpeakerCreateWithoutAdviceLoungesInput
  connect: SpeakerWhereUniqueInput
}

input SpeakerCreateOneWithoutMcsInput {
  create: SpeakerCreateWithoutMcsInput
  connect: SpeakerWhereUniqueInput
}

input SpeakerCreateOneWithoutPieceOfSpeakerInfoesInput {
  create: SpeakerCreateWithoutPieceOfSpeakerInfoesInput
  connect: SpeakerWhereUniqueInput
}

input SpeakerCreateOneWithoutTalksInput {
  create: SpeakerCreateWithoutTalksInput
  connect: SpeakerWhereUniqueInput
}

input SpeakerCreateOneWithoutWorkshopsInput {
  create: SpeakerCreateWithoutWorkshopsInput
  connect: SpeakerWhereUniqueInput
}

input SpeakerCreateWithoutAdviceLoungesInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetCreateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventCreateManyWithoutSpeakersInput
  talks: TalkCreateManyWithoutSpeakerInput
  workshops: WorkshopCreateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutSpeakerInput
  mcs: McCreateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventCreateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventCreateManyWithoutCommitteeInput
}

input SpeakerCreateWithoutAvatarInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  conferenceEvents: ConferenceEventCreateManyWithoutSpeakersInput
  talks: TalkCreateManyWithoutSpeakerInput
  workshops: WorkshopCreateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeCreateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutSpeakerInput
  mcs: McCreateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventCreateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventCreateManyWithoutCommitteeInput
}

input SpeakerCreateWithoutConferenceCommitteeInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetCreateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventCreateManyWithoutSpeakersInput
  talks: TalkCreateManyWithoutSpeakerInput
  workshops: WorkshopCreateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeCreateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutSpeakerInput
  mcs: McCreateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventCreateManyWithoutPerformanceTeamInput
}

input SpeakerCreateWithoutConferenceEventsInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetCreateOneWithoutAvatarSpeakerInput
  talks: TalkCreateManyWithoutSpeakerInput
  workshops: WorkshopCreateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeCreateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutSpeakerInput
  mcs: McCreateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventCreateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventCreateManyWithoutCommitteeInput
}

input SpeakerCreateWithoutMcsInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetCreateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventCreateManyWithoutSpeakersInput
  talks: TalkCreateManyWithoutSpeakerInput
  workshops: WorkshopCreateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeCreateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventCreateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventCreateManyWithoutCommitteeInput
}

input SpeakerCreateWithoutPerformanceForEventInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetCreateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventCreateManyWithoutSpeakersInput
  talks: TalkCreateManyWithoutSpeakerInput
  workshops: WorkshopCreateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeCreateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutSpeakerInput
  mcs: McCreateManyWithoutSpeakerInput
  conferenceCommittee: ConferenceEventCreateManyWithoutCommitteeInput
}

input SpeakerCreateWithoutPieceOfSpeakerInfoesInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetCreateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventCreateManyWithoutSpeakersInput
  talks: TalkCreateManyWithoutSpeakerInput
  workshops: WorkshopCreateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeCreateManyWithoutSpeakerInput
  mcs: McCreateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventCreateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventCreateManyWithoutCommitteeInput
}

input SpeakerCreateWithoutTalksInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetCreateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventCreateManyWithoutSpeakersInput
  workshops: WorkshopCreateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeCreateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutSpeakerInput
  mcs: McCreateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventCreateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventCreateManyWithoutCommitteeInput
}

input SpeakerCreateWithoutWorkshopsInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetCreateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventCreateManyWithoutSpeakersInput
  talks: TalkCreateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeCreateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoCreateManyWithoutSpeakerInput
  mcs: McCreateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventCreateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventCreateManyWithoutCommitteeInput
}

"""An edge in a connection."""
type SpeakerEdge {
  """The item at the end of the edge."""
  node: Speaker!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SpeakerOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  avatarExtraUrl_ASC
  avatarExtraUrl_DESC
  company_ASC
  company_DESC
  country_ASC
  country_DESC
  bio_ASC
  bio_DESC
  githubUrl_ASC
  githubUrl_DESC
  twitterUrl_ASC
  twitterUrl_DESC
  mediumUrl_ASC
  mediumUrl_DESC
  ownSite_ASC
  ownSite_DESC
  companySite_ASC
  companySite_DESC
}

type SpeakerPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
}

input SpeakerScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [SpeakerScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeakerScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeakerScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  avatarExtraUrl: String

  """All values that are not equal to given value."""
  avatarExtraUrl_not: String

  """All values that are contained in given list."""
  avatarExtraUrl_in: [String!]

  """All values that are not contained in given list."""
  avatarExtraUrl_not_in: [String!]

  """All values less than the given value."""
  avatarExtraUrl_lt: String

  """All values less than or equal the given value."""
  avatarExtraUrl_lte: String

  """All values greater than the given value."""
  avatarExtraUrl_gt: String

  """All values greater than or equal the given value."""
  avatarExtraUrl_gte: String

  """All values containing the given string."""
  avatarExtraUrl_contains: String

  """All values not containing the given string."""
  avatarExtraUrl_not_contains: String

  """All values starting with the given string."""
  avatarExtraUrl_starts_with: String

  """All values not starting with the given string."""
  avatarExtraUrl_not_starts_with: String

  """All values ending with the given string."""
  avatarExtraUrl_ends_with: String

  """All values not ending with the given string."""
  avatarExtraUrl_not_ends_with: String
  company: String

  """All values that are not equal to given value."""
  company_not: String

  """All values that are contained in given list."""
  company_in: [String!]

  """All values that are not contained in given list."""
  company_not_in: [String!]

  """All values less than the given value."""
  company_lt: String

  """All values less than or equal the given value."""
  company_lte: String

  """All values greater than the given value."""
  company_gt: String

  """All values greater than or equal the given value."""
  company_gte: String

  """All values containing the given string."""
  company_contains: String

  """All values not containing the given string."""
  company_not_contains: String

  """All values starting with the given string."""
  company_starts_with: String

  """All values not starting with the given string."""
  company_not_starts_with: String

  """All values ending with the given string."""
  company_ends_with: String

  """All values not ending with the given string."""
  company_not_ends_with: String
  country: String

  """All values that are not equal to given value."""
  country_not: String

  """All values that are contained in given list."""
  country_in: [String!]

  """All values that are not contained in given list."""
  country_not_in: [String!]

  """All values less than the given value."""
  country_lt: String

  """All values less than or equal the given value."""
  country_lte: String

  """All values greater than the given value."""
  country_gt: String

  """All values greater than or equal the given value."""
  country_gte: String

  """All values containing the given string."""
  country_contains: String

  """All values not containing the given string."""
  country_not_contains: String

  """All values starting with the given string."""
  country_starts_with: String

  """All values not starting with the given string."""
  country_not_starts_with: String

  """All values ending with the given string."""
  country_ends_with: String

  """All values not ending with the given string."""
  country_not_ends_with: String
  bio: String

  """All values that are not equal to given value."""
  bio_not: String

  """All values that are contained in given list."""
  bio_in: [String!]

  """All values that are not contained in given list."""
  bio_not_in: [String!]

  """All values less than the given value."""
  bio_lt: String

  """All values less than or equal the given value."""
  bio_lte: String

  """All values greater than the given value."""
  bio_gt: String

  """All values greater than or equal the given value."""
  bio_gte: String

  """All values containing the given string."""
  bio_contains: String

  """All values not containing the given string."""
  bio_not_contains: String

  """All values starting with the given string."""
  bio_starts_with: String

  """All values not starting with the given string."""
  bio_not_starts_with: String

  """All values ending with the given string."""
  bio_ends_with: String

  """All values not ending with the given string."""
  bio_not_ends_with: String
  githubUrl: String

  """All values that are not equal to given value."""
  githubUrl_not: String

  """All values that are contained in given list."""
  githubUrl_in: [String!]

  """All values that are not contained in given list."""
  githubUrl_not_in: [String!]

  """All values less than the given value."""
  githubUrl_lt: String

  """All values less than or equal the given value."""
  githubUrl_lte: String

  """All values greater than the given value."""
  githubUrl_gt: String

  """All values greater than or equal the given value."""
  githubUrl_gte: String

  """All values containing the given string."""
  githubUrl_contains: String

  """All values not containing the given string."""
  githubUrl_not_contains: String

  """All values starting with the given string."""
  githubUrl_starts_with: String

  """All values not starting with the given string."""
  githubUrl_not_starts_with: String

  """All values ending with the given string."""
  githubUrl_ends_with: String

  """All values not ending with the given string."""
  githubUrl_not_ends_with: String
  twitterUrl: String

  """All values that are not equal to given value."""
  twitterUrl_not: String

  """All values that are contained in given list."""
  twitterUrl_in: [String!]

  """All values that are not contained in given list."""
  twitterUrl_not_in: [String!]

  """All values less than the given value."""
  twitterUrl_lt: String

  """All values less than or equal the given value."""
  twitterUrl_lte: String

  """All values greater than the given value."""
  twitterUrl_gt: String

  """All values greater than or equal the given value."""
  twitterUrl_gte: String

  """All values containing the given string."""
  twitterUrl_contains: String

  """All values not containing the given string."""
  twitterUrl_not_contains: String

  """All values starting with the given string."""
  twitterUrl_starts_with: String

  """All values not starting with the given string."""
  twitterUrl_not_starts_with: String

  """All values ending with the given string."""
  twitterUrl_ends_with: String

  """All values not ending with the given string."""
  twitterUrl_not_ends_with: String
  mediumUrl: String

  """All values that are not equal to given value."""
  mediumUrl_not: String

  """All values that are contained in given list."""
  mediumUrl_in: [String!]

  """All values that are not contained in given list."""
  mediumUrl_not_in: [String!]

  """All values less than the given value."""
  mediumUrl_lt: String

  """All values less than or equal the given value."""
  mediumUrl_lte: String

  """All values greater than the given value."""
  mediumUrl_gt: String

  """All values greater than or equal the given value."""
  mediumUrl_gte: String

  """All values containing the given string."""
  mediumUrl_contains: String

  """All values not containing the given string."""
  mediumUrl_not_contains: String

  """All values starting with the given string."""
  mediumUrl_starts_with: String

  """All values not starting with the given string."""
  mediumUrl_not_starts_with: String

  """All values ending with the given string."""
  mediumUrl_ends_with: String

  """All values not ending with the given string."""
  mediumUrl_not_ends_with: String
  ownSite: String

  """All values that are not equal to given value."""
  ownSite_not: String

  """All values that are contained in given list."""
  ownSite_in: [String!]

  """All values that are not contained in given list."""
  ownSite_not_in: [String!]

  """All values less than the given value."""
  ownSite_lt: String

  """All values less than or equal the given value."""
  ownSite_lte: String

  """All values greater than the given value."""
  ownSite_gt: String

  """All values greater than or equal the given value."""
  ownSite_gte: String

  """All values containing the given string."""
  ownSite_contains: String

  """All values not containing the given string."""
  ownSite_not_contains: String

  """All values starting with the given string."""
  ownSite_starts_with: String

  """All values not starting with the given string."""
  ownSite_not_starts_with: String

  """All values ending with the given string."""
  ownSite_ends_with: String

  """All values not ending with the given string."""
  ownSite_not_ends_with: String
  companySite: String

  """All values that are not equal to given value."""
  companySite_not: String

  """All values that are contained in given list."""
  companySite_in: [String!]

  """All values that are not contained in given list."""
  companySite_not_in: [String!]

  """All values less than the given value."""
  companySite_lt: String

  """All values less than or equal the given value."""
  companySite_lte: String

  """All values greater than the given value."""
  companySite_gt: String

  """All values greater than or equal the given value."""
  companySite_gte: String

  """All values containing the given string."""
  companySite_contains: String

  """All values not containing the given string."""
  companySite_not_contains: String

  """All values starting with the given string."""
  companySite_starts_with: String

  """All values not starting with the given string."""
  companySite_not_starts_with: String

  """All values ending with the given string."""
  companySite_ends_with: String

  """All values not ending with the given string."""
  companySite_not_ends_with: String
}

type SpeakerSubscriptionPayload {
  mutation: MutationType!
  node: Speaker
  updatedFields: [String!]
  previousValues: SpeakerPreviousValues
}

input SpeakerSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SpeakerSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeakerSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeakerSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SpeakerWhereInput
}

input SpeakerUpdateInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetUpdateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSpeakersInput
  talks: TalkUpdateManyWithoutSpeakerInput
  workshops: WorkshopUpdateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeUpdateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput
  mcs: McUpdateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventUpdateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventUpdateManyWithoutCommitteeInput
}

input SpeakerUpdateManyDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
}

input SpeakerUpdateManyMutationInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
}

input SpeakerUpdateManyWithoutAvatarInput {
  create: [SpeakerCreateWithoutAvatarInput!]
  connect: [SpeakerWhereUniqueInput!]
  set: [SpeakerWhereUniqueInput!]
  disconnect: [SpeakerWhereUniqueInput!]
  delete: [SpeakerWhereUniqueInput!]
  update: [SpeakerUpdateWithWhereUniqueWithoutAvatarInput!]
  updateMany: [SpeakerUpdateManyWithWhereNestedInput!]
  deleteMany: [SpeakerScalarWhereInput!]
  upsert: [SpeakerUpsertWithWhereUniqueWithoutAvatarInput!]
}

input SpeakerUpdateManyWithoutConferenceCommitteeInput {
  create: [SpeakerCreateWithoutConferenceCommitteeInput!]
  connect: [SpeakerWhereUniqueInput!]
  set: [SpeakerWhereUniqueInput!]
  disconnect: [SpeakerWhereUniqueInput!]
  delete: [SpeakerWhereUniqueInput!]
  update: [SpeakerUpdateWithWhereUniqueWithoutConferenceCommitteeInput!]
  updateMany: [SpeakerUpdateManyWithWhereNestedInput!]
  deleteMany: [SpeakerScalarWhereInput!]
  upsert: [SpeakerUpsertWithWhereUniqueWithoutConferenceCommitteeInput!]
}

input SpeakerUpdateManyWithoutConferenceEventsInput {
  create: [SpeakerCreateWithoutConferenceEventsInput!]
  connect: [SpeakerWhereUniqueInput!]
  set: [SpeakerWhereUniqueInput!]
  disconnect: [SpeakerWhereUniqueInput!]
  delete: [SpeakerWhereUniqueInput!]
  update: [SpeakerUpdateWithWhereUniqueWithoutConferenceEventsInput!]
  updateMany: [SpeakerUpdateManyWithWhereNestedInput!]
  deleteMany: [SpeakerScalarWhereInput!]
  upsert: [SpeakerUpsertWithWhereUniqueWithoutConferenceEventsInput!]
}

input SpeakerUpdateManyWithoutPerformanceForEventInput {
  create: [SpeakerCreateWithoutPerformanceForEventInput!]
  connect: [SpeakerWhereUniqueInput!]
  set: [SpeakerWhereUniqueInput!]
  disconnect: [SpeakerWhereUniqueInput!]
  delete: [SpeakerWhereUniqueInput!]
  update: [SpeakerUpdateWithWhereUniqueWithoutPerformanceForEventInput!]
  updateMany: [SpeakerUpdateManyWithWhereNestedInput!]
  deleteMany: [SpeakerScalarWhereInput!]
  upsert: [SpeakerUpsertWithWhereUniqueWithoutPerformanceForEventInput!]
}

input SpeakerUpdateManyWithWhereNestedInput {
  where: SpeakerScalarWhereInput!
  data: SpeakerUpdateManyDataInput!
}

input SpeakerUpdateOneWithoutAdviceLoungesInput {
  create: SpeakerCreateWithoutAdviceLoungesInput
  connect: SpeakerWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: SpeakerUpdateWithoutAdviceLoungesDataInput
  upsert: SpeakerUpsertWithoutAdviceLoungesInput
}

input SpeakerUpdateOneWithoutMcsInput {
  create: SpeakerCreateWithoutMcsInput
  connect: SpeakerWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: SpeakerUpdateWithoutMcsDataInput
  upsert: SpeakerUpsertWithoutMcsInput
}

input SpeakerUpdateOneWithoutPieceOfSpeakerInfoesInput {
  create: SpeakerCreateWithoutPieceOfSpeakerInfoesInput
  connect: SpeakerWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: SpeakerUpdateWithoutPieceOfSpeakerInfoesDataInput
  upsert: SpeakerUpsertWithoutPieceOfSpeakerInfoesInput
}

input SpeakerUpdateOneWithoutTalksInput {
  create: SpeakerCreateWithoutTalksInput
  connect: SpeakerWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: SpeakerUpdateWithoutTalksDataInput
  upsert: SpeakerUpsertWithoutTalksInput
}

input SpeakerUpdateOneWithoutWorkshopsInput {
  create: SpeakerCreateWithoutWorkshopsInput
  connect: SpeakerWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: SpeakerUpdateWithoutWorkshopsDataInput
  upsert: SpeakerUpsertWithoutWorkshopsInput
}

input SpeakerUpdateWithoutAdviceLoungesDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetUpdateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSpeakersInput
  talks: TalkUpdateManyWithoutSpeakerInput
  workshops: WorkshopUpdateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput
  mcs: McUpdateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventUpdateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventUpdateManyWithoutCommitteeInput
}

input SpeakerUpdateWithoutAvatarDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  conferenceEvents: ConferenceEventUpdateManyWithoutSpeakersInput
  talks: TalkUpdateManyWithoutSpeakerInput
  workshops: WorkshopUpdateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeUpdateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput
  mcs: McUpdateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventUpdateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventUpdateManyWithoutCommitteeInput
}

input SpeakerUpdateWithoutConferenceCommitteeDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetUpdateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSpeakersInput
  talks: TalkUpdateManyWithoutSpeakerInput
  workshops: WorkshopUpdateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeUpdateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput
  mcs: McUpdateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventUpdateManyWithoutPerformanceTeamInput
}

input SpeakerUpdateWithoutConferenceEventsDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetUpdateOneWithoutAvatarSpeakerInput
  talks: TalkUpdateManyWithoutSpeakerInput
  workshops: WorkshopUpdateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeUpdateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput
  mcs: McUpdateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventUpdateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventUpdateManyWithoutCommitteeInput
}

input SpeakerUpdateWithoutMcsDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetUpdateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSpeakersInput
  talks: TalkUpdateManyWithoutSpeakerInput
  workshops: WorkshopUpdateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeUpdateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventUpdateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventUpdateManyWithoutCommitteeInput
}

input SpeakerUpdateWithoutPerformanceForEventDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetUpdateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSpeakersInput
  talks: TalkUpdateManyWithoutSpeakerInput
  workshops: WorkshopUpdateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeUpdateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput
  mcs: McUpdateManyWithoutSpeakerInput
  conferenceCommittee: ConferenceEventUpdateManyWithoutCommitteeInput
}

input SpeakerUpdateWithoutPieceOfSpeakerInfoesDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetUpdateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSpeakersInput
  talks: TalkUpdateManyWithoutSpeakerInput
  workshops: WorkshopUpdateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeUpdateManyWithoutSpeakerInput
  mcs: McUpdateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventUpdateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventUpdateManyWithoutCommitteeInput
}

input SpeakerUpdateWithoutTalksDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetUpdateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSpeakersInput
  workshops: WorkshopUpdateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeUpdateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput
  mcs: McUpdateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventUpdateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventUpdateManyWithoutCommitteeInput
}

input SpeakerUpdateWithoutWorkshopsDataInput {
  status: Status
  name: String
  avatarExtraUrl: String
  company: String
  country: String
  bio: String
  githubUrl: String
  twitterUrl: String
  mediumUrl: String
  ownSite: String
  companySite: String
  avatar: AssetUpdateOneWithoutAvatarSpeakerInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSpeakersInput
  talks: TalkUpdateManyWithoutSpeakerInput
  adviceLounges: AdviceLoungeUpdateManyWithoutSpeakerInput
  pieceOfSpeakerInfoes: PieceOfSpeakerInfoUpdateManyWithoutSpeakerInput
  mcs: McUpdateManyWithoutSpeakerInput
  performanceForEvent: ConferenceEventUpdateManyWithoutPerformanceTeamInput
  conferenceCommittee: ConferenceEventUpdateManyWithoutCommitteeInput
}

input SpeakerUpdateWithWhereUniqueWithoutAvatarInput {
  where: SpeakerWhereUniqueInput!
  data: SpeakerUpdateWithoutAvatarDataInput!
}

input SpeakerUpdateWithWhereUniqueWithoutConferenceCommitteeInput {
  where: SpeakerWhereUniqueInput!
  data: SpeakerUpdateWithoutConferenceCommitteeDataInput!
}

input SpeakerUpdateWithWhereUniqueWithoutConferenceEventsInput {
  where: SpeakerWhereUniqueInput!
  data: SpeakerUpdateWithoutConferenceEventsDataInput!
}

input SpeakerUpdateWithWhereUniqueWithoutPerformanceForEventInput {
  where: SpeakerWhereUniqueInput!
  data: SpeakerUpdateWithoutPerformanceForEventDataInput!
}

input SpeakerUpsertWithoutAdviceLoungesInput {
  update: SpeakerUpdateWithoutAdviceLoungesDataInput!
  create: SpeakerCreateWithoutAdviceLoungesInput!
}

input SpeakerUpsertWithoutMcsInput {
  update: SpeakerUpdateWithoutMcsDataInput!
  create: SpeakerCreateWithoutMcsInput!
}

input SpeakerUpsertWithoutPieceOfSpeakerInfoesInput {
  update: SpeakerUpdateWithoutPieceOfSpeakerInfoesDataInput!
  create: SpeakerCreateWithoutPieceOfSpeakerInfoesInput!
}

input SpeakerUpsertWithoutTalksInput {
  update: SpeakerUpdateWithoutTalksDataInput!
  create: SpeakerCreateWithoutTalksInput!
}

input SpeakerUpsertWithoutWorkshopsInput {
  update: SpeakerUpdateWithoutWorkshopsDataInput!
  create: SpeakerCreateWithoutWorkshopsInput!
}

input SpeakerUpsertWithWhereUniqueWithoutAvatarInput {
  where: SpeakerWhereUniqueInput!
  update: SpeakerUpdateWithoutAvatarDataInput!
  create: SpeakerCreateWithoutAvatarInput!
}

input SpeakerUpsertWithWhereUniqueWithoutConferenceCommitteeInput {
  where: SpeakerWhereUniqueInput!
  update: SpeakerUpdateWithoutConferenceCommitteeDataInput!
  create: SpeakerCreateWithoutConferenceCommitteeInput!
}

input SpeakerUpsertWithWhereUniqueWithoutConferenceEventsInput {
  where: SpeakerWhereUniqueInput!
  update: SpeakerUpdateWithoutConferenceEventsDataInput!
  create: SpeakerCreateWithoutConferenceEventsInput!
}

input SpeakerUpsertWithWhereUniqueWithoutPerformanceForEventInput {
  where: SpeakerWhereUniqueInput!
  update: SpeakerUpdateWithoutPerformanceForEventDataInput!
  create: SpeakerCreateWithoutPerformanceForEventInput!
}

input SpeakerWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [SpeakerWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeakerWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeakerWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  avatarExtraUrl: String

  """All values that are not equal to given value."""
  avatarExtraUrl_not: String

  """All values that are contained in given list."""
  avatarExtraUrl_in: [String!]

  """All values that are not contained in given list."""
  avatarExtraUrl_not_in: [String!]

  """All values less than the given value."""
  avatarExtraUrl_lt: String

  """All values less than or equal the given value."""
  avatarExtraUrl_lte: String

  """All values greater than the given value."""
  avatarExtraUrl_gt: String

  """All values greater than or equal the given value."""
  avatarExtraUrl_gte: String

  """All values containing the given string."""
  avatarExtraUrl_contains: String

  """All values not containing the given string."""
  avatarExtraUrl_not_contains: String

  """All values starting with the given string."""
  avatarExtraUrl_starts_with: String

  """All values not starting with the given string."""
  avatarExtraUrl_not_starts_with: String

  """All values ending with the given string."""
  avatarExtraUrl_ends_with: String

  """All values not ending with the given string."""
  avatarExtraUrl_not_ends_with: String
  company: String

  """All values that are not equal to given value."""
  company_not: String

  """All values that are contained in given list."""
  company_in: [String!]

  """All values that are not contained in given list."""
  company_not_in: [String!]

  """All values less than the given value."""
  company_lt: String

  """All values less than or equal the given value."""
  company_lte: String

  """All values greater than the given value."""
  company_gt: String

  """All values greater than or equal the given value."""
  company_gte: String

  """All values containing the given string."""
  company_contains: String

  """All values not containing the given string."""
  company_not_contains: String

  """All values starting with the given string."""
  company_starts_with: String

  """All values not starting with the given string."""
  company_not_starts_with: String

  """All values ending with the given string."""
  company_ends_with: String

  """All values not ending with the given string."""
  company_not_ends_with: String
  country: String

  """All values that are not equal to given value."""
  country_not: String

  """All values that are contained in given list."""
  country_in: [String!]

  """All values that are not contained in given list."""
  country_not_in: [String!]

  """All values less than the given value."""
  country_lt: String

  """All values less than or equal the given value."""
  country_lte: String

  """All values greater than the given value."""
  country_gt: String

  """All values greater than or equal the given value."""
  country_gte: String

  """All values containing the given string."""
  country_contains: String

  """All values not containing the given string."""
  country_not_contains: String

  """All values starting with the given string."""
  country_starts_with: String

  """All values not starting with the given string."""
  country_not_starts_with: String

  """All values ending with the given string."""
  country_ends_with: String

  """All values not ending with the given string."""
  country_not_ends_with: String
  bio: String

  """All values that are not equal to given value."""
  bio_not: String

  """All values that are contained in given list."""
  bio_in: [String!]

  """All values that are not contained in given list."""
  bio_not_in: [String!]

  """All values less than the given value."""
  bio_lt: String

  """All values less than or equal the given value."""
  bio_lte: String

  """All values greater than the given value."""
  bio_gt: String

  """All values greater than or equal the given value."""
  bio_gte: String

  """All values containing the given string."""
  bio_contains: String

  """All values not containing the given string."""
  bio_not_contains: String

  """All values starting with the given string."""
  bio_starts_with: String

  """All values not starting with the given string."""
  bio_not_starts_with: String

  """All values ending with the given string."""
  bio_ends_with: String

  """All values not ending with the given string."""
  bio_not_ends_with: String
  githubUrl: String

  """All values that are not equal to given value."""
  githubUrl_not: String

  """All values that are contained in given list."""
  githubUrl_in: [String!]

  """All values that are not contained in given list."""
  githubUrl_not_in: [String!]

  """All values less than the given value."""
  githubUrl_lt: String

  """All values less than or equal the given value."""
  githubUrl_lte: String

  """All values greater than the given value."""
  githubUrl_gt: String

  """All values greater than or equal the given value."""
  githubUrl_gte: String

  """All values containing the given string."""
  githubUrl_contains: String

  """All values not containing the given string."""
  githubUrl_not_contains: String

  """All values starting with the given string."""
  githubUrl_starts_with: String

  """All values not starting with the given string."""
  githubUrl_not_starts_with: String

  """All values ending with the given string."""
  githubUrl_ends_with: String

  """All values not ending with the given string."""
  githubUrl_not_ends_with: String
  twitterUrl: String

  """All values that are not equal to given value."""
  twitterUrl_not: String

  """All values that are contained in given list."""
  twitterUrl_in: [String!]

  """All values that are not contained in given list."""
  twitterUrl_not_in: [String!]

  """All values less than the given value."""
  twitterUrl_lt: String

  """All values less than or equal the given value."""
  twitterUrl_lte: String

  """All values greater than the given value."""
  twitterUrl_gt: String

  """All values greater than or equal the given value."""
  twitterUrl_gte: String

  """All values containing the given string."""
  twitterUrl_contains: String

  """All values not containing the given string."""
  twitterUrl_not_contains: String

  """All values starting with the given string."""
  twitterUrl_starts_with: String

  """All values not starting with the given string."""
  twitterUrl_not_starts_with: String

  """All values ending with the given string."""
  twitterUrl_ends_with: String

  """All values not ending with the given string."""
  twitterUrl_not_ends_with: String
  mediumUrl: String

  """All values that are not equal to given value."""
  mediumUrl_not: String

  """All values that are contained in given list."""
  mediumUrl_in: [String!]

  """All values that are not contained in given list."""
  mediumUrl_not_in: [String!]

  """All values less than the given value."""
  mediumUrl_lt: String

  """All values less than or equal the given value."""
  mediumUrl_lte: String

  """All values greater than the given value."""
  mediumUrl_gt: String

  """All values greater than or equal the given value."""
  mediumUrl_gte: String

  """All values containing the given string."""
  mediumUrl_contains: String

  """All values not containing the given string."""
  mediumUrl_not_contains: String

  """All values starting with the given string."""
  mediumUrl_starts_with: String

  """All values not starting with the given string."""
  mediumUrl_not_starts_with: String

  """All values ending with the given string."""
  mediumUrl_ends_with: String

  """All values not ending with the given string."""
  mediumUrl_not_ends_with: String
  ownSite: String

  """All values that are not equal to given value."""
  ownSite_not: String

  """All values that are contained in given list."""
  ownSite_in: [String!]

  """All values that are not contained in given list."""
  ownSite_not_in: [String!]

  """All values less than the given value."""
  ownSite_lt: String

  """All values less than or equal the given value."""
  ownSite_lte: String

  """All values greater than the given value."""
  ownSite_gt: String

  """All values greater than or equal the given value."""
  ownSite_gte: String

  """All values containing the given string."""
  ownSite_contains: String

  """All values not containing the given string."""
  ownSite_not_contains: String

  """All values starting with the given string."""
  ownSite_starts_with: String

  """All values not starting with the given string."""
  ownSite_not_starts_with: String

  """All values ending with the given string."""
  ownSite_ends_with: String

  """All values not ending with the given string."""
  ownSite_not_ends_with: String
  companySite: String

  """All values that are not equal to given value."""
  companySite_not: String

  """All values that are contained in given list."""
  companySite_in: [String!]

  """All values that are not contained in given list."""
  companySite_not_in: [String!]

  """All values less than the given value."""
  companySite_lt: String

  """All values less than or equal the given value."""
  companySite_lte: String

  """All values greater than the given value."""
  companySite_gt: String

  """All values greater than or equal the given value."""
  companySite_gte: String

  """All values containing the given string."""
  companySite_contains: String

  """All values not containing the given string."""
  companySite_not_contains: String

  """All values starting with the given string."""
  companySite_starts_with: String

  """All values not starting with the given string."""
  companySite_not_starts_with: String

  """All values ending with the given string."""
  companySite_ends_with: String

  """All values not ending with the given string."""
  companySite_not_ends_with: String
  avatar: AssetWhereInput
  conferenceEvents_every: ConferenceEventWhereInput
  conferenceEvents_some: ConferenceEventWhereInput
  conferenceEvents_none: ConferenceEventWhereInput
  talks_every: TalkWhereInput
  talks_some: TalkWhereInput
  talks_none: TalkWhereInput
  workshops_every: WorkshopWhereInput
  workshops_some: WorkshopWhereInput
  workshops_none: WorkshopWhereInput
  adviceLounges_every: AdviceLoungeWhereInput
  adviceLounges_some: AdviceLoungeWhereInput
  adviceLounges_none: AdviceLoungeWhereInput
  pieceOfSpeakerInfoes_every: PieceOfSpeakerInfoWhereInput
  pieceOfSpeakerInfoes_some: PieceOfSpeakerInfoWhereInput
  pieceOfSpeakerInfoes_none: PieceOfSpeakerInfoWhereInput
  mcs_every: McWhereInput
  mcs_some: McWhereInput
  mcs_none: McWhereInput
  performanceForEvent_every: ConferenceEventWhereInput
  performanceForEvent_some: ConferenceEventWhereInput
  performanceForEvent_none: ConferenceEventWhereInput
  conferenceCommittee_every: ConferenceEventWhereInput
  conferenceCommittee_some: ConferenceEventWhereInput
  conferenceCommittee_none: ConferenceEventWhereInput
}

input SpeakerWhereUniqueInput {
  id: ID
}

type Sponsor implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String!
  site: String
  avatarExtraUrl: String
  avatar: Asset
  conferenceEvents(where: ConferenceEventWhereInput, orderBy: ConferenceEventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ConferenceEvent!]
  category: SponsorStatus
  pieceOfSponsorInfoes(where: PieceOfSponsorInfoWhereInput, orderBy: PieceOfSponsorInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PieceOfSponsorInfo!]
}

"""A connection to a list of items."""
type SponsorConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SponsorEdge]!
  aggregate: AggregateSponsor!
}

input SponsorCreateInput {
  status: Status
  title: String!
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
  avatar: AssetCreateOneWithoutAvatarSponsorInput
  conferenceEvents: ConferenceEventCreateManyWithoutSponsorsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutSponsorInput
}

input SponsorCreateManyWithoutAvatarInput {
  create: [SponsorCreateWithoutAvatarInput!]
  connect: [SponsorWhereUniqueInput!]
}

input SponsorCreateManyWithoutConferenceEventsInput {
  create: [SponsorCreateWithoutConferenceEventsInput!]
  connect: [SponsorWhereUniqueInput!]
}

input SponsorCreateOneWithoutPieceOfSponsorInfoesInput {
  create: SponsorCreateWithoutPieceOfSponsorInfoesInput
  connect: SponsorWhereUniqueInput
}

input SponsorCreateWithoutAvatarInput {
  status: Status
  title: String!
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
  conferenceEvents: ConferenceEventCreateManyWithoutSponsorsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutSponsorInput
}

input SponsorCreateWithoutConferenceEventsInput {
  status: Status
  title: String!
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
  avatar: AssetCreateOneWithoutAvatarSponsorInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoCreateManyWithoutSponsorInput
}

input SponsorCreateWithoutPieceOfSponsorInfoesInput {
  status: Status
  title: String!
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
  avatar: AssetCreateOneWithoutAvatarSponsorInput
  conferenceEvents: ConferenceEventCreateManyWithoutSponsorsInput
}

"""An edge in a connection."""
type SponsorEdge {
  """The item at the end of the edge."""
  node: Sponsor!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SponsorOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  site_ASC
  site_DESC
  avatarExtraUrl_ASC
  avatarExtraUrl_DESC
  category_ASC
  category_DESC
}

type SponsorPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String!
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
}

input SponsorScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [SponsorScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [SponsorScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SponsorScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  site: String

  """All values that are not equal to given value."""
  site_not: String

  """All values that are contained in given list."""
  site_in: [String!]

  """All values that are not contained in given list."""
  site_not_in: [String!]

  """All values less than the given value."""
  site_lt: String

  """All values less than or equal the given value."""
  site_lte: String

  """All values greater than the given value."""
  site_gt: String

  """All values greater than or equal the given value."""
  site_gte: String

  """All values containing the given string."""
  site_contains: String

  """All values not containing the given string."""
  site_not_contains: String

  """All values starting with the given string."""
  site_starts_with: String

  """All values not starting with the given string."""
  site_not_starts_with: String

  """All values ending with the given string."""
  site_ends_with: String

  """All values not ending with the given string."""
  site_not_ends_with: String
  avatarExtraUrl: String

  """All values that are not equal to given value."""
  avatarExtraUrl_not: String

  """All values that are contained in given list."""
  avatarExtraUrl_in: [String!]

  """All values that are not contained in given list."""
  avatarExtraUrl_not_in: [String!]

  """All values less than the given value."""
  avatarExtraUrl_lt: String

  """All values less than or equal the given value."""
  avatarExtraUrl_lte: String

  """All values greater than the given value."""
  avatarExtraUrl_gt: String

  """All values greater than or equal the given value."""
  avatarExtraUrl_gte: String

  """All values containing the given string."""
  avatarExtraUrl_contains: String

  """All values not containing the given string."""
  avatarExtraUrl_not_contains: String

  """All values starting with the given string."""
  avatarExtraUrl_starts_with: String

  """All values not starting with the given string."""
  avatarExtraUrl_not_starts_with: String

  """All values ending with the given string."""
  avatarExtraUrl_ends_with: String

  """All values not ending with the given string."""
  avatarExtraUrl_not_ends_with: String
  category: SponsorStatus

  """All values that are not equal to given value."""
  category_not: SponsorStatus

  """All values that are contained in given list."""
  category_in: [SponsorStatus!]

  """All values that are not contained in given list."""
  category_not_in: [SponsorStatus!]
}

enum SponsorStatus {
  Gold
  Silver
  Partner
  MediaPartner
  ProductionPartner
  Platinum
}

type SponsorSubscriptionPayload {
  mutation: MutationType!
  node: Sponsor
  updatedFields: [String!]
  previousValues: SponsorPreviousValues
}

input SponsorSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SponsorSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SponsorSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SponsorSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SponsorWhereInput
}

input SponsorUpdateInput {
  status: Status
  title: String
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
  avatar: AssetUpdateOneWithoutAvatarSponsorInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSponsorsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutSponsorInput
}

input SponsorUpdateManyDataInput {
  status: Status
  title: String
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
}

input SponsorUpdateManyMutationInput {
  status: Status
  title: String
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
}

input SponsorUpdateManyWithoutAvatarInput {
  create: [SponsorCreateWithoutAvatarInput!]
  connect: [SponsorWhereUniqueInput!]
  set: [SponsorWhereUniqueInput!]
  disconnect: [SponsorWhereUniqueInput!]
  delete: [SponsorWhereUniqueInput!]
  update: [SponsorUpdateWithWhereUniqueWithoutAvatarInput!]
  updateMany: [SponsorUpdateManyWithWhereNestedInput!]
  deleteMany: [SponsorScalarWhereInput!]
  upsert: [SponsorUpsertWithWhereUniqueWithoutAvatarInput!]
}

input SponsorUpdateManyWithoutConferenceEventsInput {
  create: [SponsorCreateWithoutConferenceEventsInput!]
  connect: [SponsorWhereUniqueInput!]
  set: [SponsorWhereUniqueInput!]
  disconnect: [SponsorWhereUniqueInput!]
  delete: [SponsorWhereUniqueInput!]
  update: [SponsorUpdateWithWhereUniqueWithoutConferenceEventsInput!]
  updateMany: [SponsorUpdateManyWithWhereNestedInput!]
  deleteMany: [SponsorScalarWhereInput!]
  upsert: [SponsorUpsertWithWhereUniqueWithoutConferenceEventsInput!]
}

input SponsorUpdateManyWithWhereNestedInput {
  where: SponsorScalarWhereInput!
  data: SponsorUpdateManyDataInput!
}

input SponsorUpdateOneWithoutPieceOfSponsorInfoesInput {
  create: SponsorCreateWithoutPieceOfSponsorInfoesInput
  connect: SponsorWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: SponsorUpdateWithoutPieceOfSponsorInfoesDataInput
  upsert: SponsorUpsertWithoutPieceOfSponsorInfoesInput
}

input SponsorUpdateWithoutAvatarDataInput {
  status: Status
  title: String
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
  conferenceEvents: ConferenceEventUpdateManyWithoutSponsorsInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutSponsorInput
}

input SponsorUpdateWithoutConferenceEventsDataInput {
  status: Status
  title: String
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
  avatar: AssetUpdateOneWithoutAvatarSponsorInput
  pieceOfSponsorInfoes: PieceOfSponsorInfoUpdateManyWithoutSponsorInput
}

input SponsorUpdateWithoutPieceOfSponsorInfoesDataInput {
  status: Status
  title: String
  site: String
  avatarExtraUrl: String
  category: SponsorStatus
  avatar: AssetUpdateOneWithoutAvatarSponsorInput
  conferenceEvents: ConferenceEventUpdateManyWithoutSponsorsInput
}

input SponsorUpdateWithWhereUniqueWithoutAvatarInput {
  where: SponsorWhereUniqueInput!
  data: SponsorUpdateWithoutAvatarDataInput!
}

input SponsorUpdateWithWhereUniqueWithoutConferenceEventsInput {
  where: SponsorWhereUniqueInput!
  data: SponsorUpdateWithoutConferenceEventsDataInput!
}

input SponsorUpsertWithoutPieceOfSponsorInfoesInput {
  update: SponsorUpdateWithoutPieceOfSponsorInfoesDataInput!
  create: SponsorCreateWithoutPieceOfSponsorInfoesInput!
}

input SponsorUpsertWithWhereUniqueWithoutAvatarInput {
  where: SponsorWhereUniqueInput!
  update: SponsorUpdateWithoutAvatarDataInput!
  create: SponsorCreateWithoutAvatarInput!
}

input SponsorUpsertWithWhereUniqueWithoutConferenceEventsInput {
  where: SponsorWhereUniqueInput!
  update: SponsorUpdateWithoutConferenceEventsDataInput!
  create: SponsorCreateWithoutConferenceEventsInput!
}

input SponsorWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [SponsorWhereInput!]

  """Logical OR on all given filters."""
  OR: [SponsorWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SponsorWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  site: String

  """All values that are not equal to given value."""
  site_not: String

  """All values that are contained in given list."""
  site_in: [String!]

  """All values that are not contained in given list."""
  site_not_in: [String!]

  """All values less than the given value."""
  site_lt: String

  """All values less than or equal the given value."""
  site_lte: String

  """All values greater than the given value."""
  site_gt: String

  """All values greater than or equal the given value."""
  site_gte: String

  """All values containing the given string."""
  site_contains: String

  """All values not containing the given string."""
  site_not_contains: String

  """All values starting with the given string."""
  site_starts_with: String

  """All values not starting with the given string."""
  site_not_starts_with: String

  """All values ending with the given string."""
  site_ends_with: String

  """All values not ending with the given string."""
  site_not_ends_with: String
  avatarExtraUrl: String

  """All values that are not equal to given value."""
  avatarExtraUrl_not: String

  """All values that are contained in given list."""
  avatarExtraUrl_in: [String!]

  """All values that are not contained in given list."""
  avatarExtraUrl_not_in: [String!]

  """All values less than the given value."""
  avatarExtraUrl_lt: String

  """All values less than or equal the given value."""
  avatarExtraUrl_lte: String

  """All values greater than the given value."""
  avatarExtraUrl_gt: String

  """All values greater than or equal the given value."""
  avatarExtraUrl_gte: String

  """All values containing the given string."""
  avatarExtraUrl_contains: String

  """All values not containing the given string."""
  avatarExtraUrl_not_contains: String

  """All values starting with the given string."""
  avatarExtraUrl_starts_with: String

  """All values not starting with the given string."""
  avatarExtraUrl_not_starts_with: String

  """All values ending with the given string."""
  avatarExtraUrl_ends_with: String

  """All values not ending with the given string."""
  avatarExtraUrl_not_ends_with: String
  category: SponsorStatus

  """All values that are not equal to given value."""
  category_not: SponsorStatus

  """All values that are contained in given list."""
  category_in: [SponsorStatus!]

  """All values that are not contained in given list."""
  category_not_in: [SponsorStatus!]
  avatar: AssetWhereInput
  conferenceEvents_every: ConferenceEventWhereInput
  conferenceEvents_some: ConferenceEventWhereInput
  conferenceEvents_none: ConferenceEventWhereInput
  pieceOfSponsorInfoes_every: PieceOfSponsorInfoWhereInput
  pieceOfSponsorInfoes_some: PieceOfSponsorInfoWhereInput
  pieceOfSponsorInfoes_none: PieceOfSponsorInfoWhereInput
}

input SponsorWhereUniqueInput {
  id: ID
  title: String
}

enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}

type Talk implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String!
  description: String
  speaker: Speaker
  daySchedule: DaySchedule
  track: Track
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
}

"""A connection to a list of items."""
type TalkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TalkEdge]!
  aggregate: AggregateTalk!
}

input TalkCreateInput {
  status: Status
  title: String!
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
  speaker: SpeakerCreateOneWithoutTalksInput
  daySchedule: DayScheduleCreateOneWithoutTalksInput
  track: TrackCreateOneWithoutTalksInput
}

input TalkCreateManyWithoutDayScheduleInput {
  create: [TalkCreateWithoutDayScheduleInput!]
  connect: [TalkWhereUniqueInput!]
}

input TalkCreateManyWithoutSpeakerInput {
  create: [TalkCreateWithoutSpeakerInput!]
  connect: [TalkWhereUniqueInput!]
}

input TalkCreateManyWithoutTrackInput {
  create: [TalkCreateWithoutTrackInput!]
  connect: [TalkWhereUniqueInput!]
}

input TalkCreateWithoutDayScheduleInput {
  status: Status
  title: String!
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
  speaker: SpeakerCreateOneWithoutTalksInput
  track: TrackCreateOneWithoutTalksInput
}

input TalkCreateWithoutSpeakerInput {
  status: Status
  title: String!
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
  daySchedule: DayScheduleCreateOneWithoutTalksInput
  track: TrackCreateOneWithoutTalksInput
}

input TalkCreateWithoutTrackInput {
  status: Status
  title: String!
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
  speaker: SpeakerCreateOneWithoutTalksInput
  daySchedule: DayScheduleCreateOneWithoutTalksInput
}

"""An edge in a connection."""
type TalkEdge {
  """The item at the end of the edge."""
  node: Talk!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TalkOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  youtubeUrl_ASC
  youtubeUrl_DESC
  isLightning_ASC
  isLightning_DESC
  timeString_ASC
  timeString_DESC
}

type TalkPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String!
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
}

input TalkScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [TalkScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [TalkScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TalkScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  youtubeUrl: String

  """All values that are not equal to given value."""
  youtubeUrl_not: String

  """All values that are contained in given list."""
  youtubeUrl_in: [String!]

  """All values that are not contained in given list."""
  youtubeUrl_not_in: [String!]

  """All values less than the given value."""
  youtubeUrl_lt: String

  """All values less than or equal the given value."""
  youtubeUrl_lte: String

  """All values greater than the given value."""
  youtubeUrl_gt: String

  """All values greater than or equal the given value."""
  youtubeUrl_gte: String

  """All values containing the given string."""
  youtubeUrl_contains: String

  """All values not containing the given string."""
  youtubeUrl_not_contains: String

  """All values starting with the given string."""
  youtubeUrl_starts_with: String

  """All values not starting with the given string."""
  youtubeUrl_not_starts_with: String

  """All values ending with the given string."""
  youtubeUrl_ends_with: String

  """All values not ending with the given string."""
  youtubeUrl_not_ends_with: String
  isLightning: Boolean

  """All values that are not equal to given value."""
  isLightning_not: Boolean
  timeString: String

  """All values that are not equal to given value."""
  timeString_not: String

  """All values that are contained in given list."""
  timeString_in: [String!]

  """All values that are not contained in given list."""
  timeString_not_in: [String!]

  """All values less than the given value."""
  timeString_lt: String

  """All values less than or equal the given value."""
  timeString_lte: String

  """All values greater than the given value."""
  timeString_gt: String

  """All values greater than or equal the given value."""
  timeString_gte: String

  """All values containing the given string."""
  timeString_contains: String

  """All values not containing the given string."""
  timeString_not_contains: String

  """All values starting with the given string."""
  timeString_starts_with: String

  """All values not starting with the given string."""
  timeString_not_starts_with: String

  """All values ending with the given string."""
  timeString_ends_with: String

  """All values not ending with the given string."""
  timeString_not_ends_with: String
}

type TalkSubscriptionPayload {
  mutation: MutationType!
  node: Talk
  updatedFields: [String!]
  previousValues: TalkPreviousValues
}

input TalkSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TalkSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TalkSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TalkSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TalkWhereInput
}

input TalkUpdateInput {
  status: Status
  title: String
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
  speaker: SpeakerUpdateOneWithoutTalksInput
  daySchedule: DayScheduleUpdateOneWithoutTalksInput
  track: TrackUpdateOneWithoutTalksInput
}

input TalkUpdateManyDataInput {
  status: Status
  title: String
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
}

input TalkUpdateManyMutationInput {
  status: Status
  title: String
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
}

input TalkUpdateManyWithoutDayScheduleInput {
  create: [TalkCreateWithoutDayScheduleInput!]
  connect: [TalkWhereUniqueInput!]
  set: [TalkWhereUniqueInput!]
  disconnect: [TalkWhereUniqueInput!]
  delete: [TalkWhereUniqueInput!]
  update: [TalkUpdateWithWhereUniqueWithoutDayScheduleInput!]
  updateMany: [TalkUpdateManyWithWhereNestedInput!]
  deleteMany: [TalkScalarWhereInput!]
  upsert: [TalkUpsertWithWhereUniqueWithoutDayScheduleInput!]
}

input TalkUpdateManyWithoutSpeakerInput {
  create: [TalkCreateWithoutSpeakerInput!]
  connect: [TalkWhereUniqueInput!]
  set: [TalkWhereUniqueInput!]
  disconnect: [TalkWhereUniqueInput!]
  delete: [TalkWhereUniqueInput!]
  update: [TalkUpdateWithWhereUniqueWithoutSpeakerInput!]
  updateMany: [TalkUpdateManyWithWhereNestedInput!]
  deleteMany: [TalkScalarWhereInput!]
  upsert: [TalkUpsertWithWhereUniqueWithoutSpeakerInput!]
}

input TalkUpdateManyWithoutTrackInput {
  create: [TalkCreateWithoutTrackInput!]
  connect: [TalkWhereUniqueInput!]
  set: [TalkWhereUniqueInput!]
  disconnect: [TalkWhereUniqueInput!]
  delete: [TalkWhereUniqueInput!]
  update: [TalkUpdateWithWhereUniqueWithoutTrackInput!]
  updateMany: [TalkUpdateManyWithWhereNestedInput!]
  deleteMany: [TalkScalarWhereInput!]
  upsert: [TalkUpsertWithWhereUniqueWithoutTrackInput!]
}

input TalkUpdateManyWithWhereNestedInput {
  where: TalkScalarWhereInput!
  data: TalkUpdateManyDataInput!
}

input TalkUpdateWithoutDayScheduleDataInput {
  status: Status
  title: String
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
  speaker: SpeakerUpdateOneWithoutTalksInput
  track: TrackUpdateOneWithoutTalksInput
}

input TalkUpdateWithoutSpeakerDataInput {
  status: Status
  title: String
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
  daySchedule: DayScheduleUpdateOneWithoutTalksInput
  track: TrackUpdateOneWithoutTalksInput
}

input TalkUpdateWithoutTrackDataInput {
  status: Status
  title: String
  description: String
  youtubeUrl: String
  isLightning: Boolean
  timeString: String
  speaker: SpeakerUpdateOneWithoutTalksInput
  daySchedule: DayScheduleUpdateOneWithoutTalksInput
}

input TalkUpdateWithWhereUniqueWithoutDayScheduleInput {
  where: TalkWhereUniqueInput!
  data: TalkUpdateWithoutDayScheduleDataInput!
}

input TalkUpdateWithWhereUniqueWithoutSpeakerInput {
  where: TalkWhereUniqueInput!
  data: TalkUpdateWithoutSpeakerDataInput!
}

input TalkUpdateWithWhereUniqueWithoutTrackInput {
  where: TalkWhereUniqueInput!
  data: TalkUpdateWithoutTrackDataInput!
}

input TalkUpsertWithWhereUniqueWithoutDayScheduleInput {
  where: TalkWhereUniqueInput!
  update: TalkUpdateWithoutDayScheduleDataInput!
  create: TalkCreateWithoutDayScheduleInput!
}

input TalkUpsertWithWhereUniqueWithoutSpeakerInput {
  where: TalkWhereUniqueInput!
  update: TalkUpdateWithoutSpeakerDataInput!
  create: TalkCreateWithoutSpeakerInput!
}

input TalkUpsertWithWhereUniqueWithoutTrackInput {
  where: TalkWhereUniqueInput!
  update: TalkUpdateWithoutTrackDataInput!
  create: TalkCreateWithoutTrackInput!
}

input TalkWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [TalkWhereInput!]

  """Logical OR on all given filters."""
  OR: [TalkWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TalkWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  youtubeUrl: String

  """All values that are not equal to given value."""
  youtubeUrl_not: String

  """All values that are contained in given list."""
  youtubeUrl_in: [String!]

  """All values that are not contained in given list."""
  youtubeUrl_not_in: [String!]

  """All values less than the given value."""
  youtubeUrl_lt: String

  """All values less than or equal the given value."""
  youtubeUrl_lte: String

  """All values greater than the given value."""
  youtubeUrl_gt: String

  """All values greater than or equal the given value."""
  youtubeUrl_gte: String

  """All values containing the given string."""
  youtubeUrl_contains: String

  """All values not containing the given string."""
  youtubeUrl_not_contains: String

  """All values starting with the given string."""
  youtubeUrl_starts_with: String

  """All values not starting with the given string."""
  youtubeUrl_not_starts_with: String

  """All values ending with the given string."""
  youtubeUrl_ends_with: String

  """All values not ending with the given string."""
  youtubeUrl_not_ends_with: String
  isLightning: Boolean

  """All values that are not equal to given value."""
  isLightning_not: Boolean
  timeString: String

  """All values that are not equal to given value."""
  timeString_not: String

  """All values that are contained in given list."""
  timeString_in: [String!]

  """All values that are not contained in given list."""
  timeString_not_in: [String!]

  """All values less than the given value."""
  timeString_lt: String

  """All values less than or equal the given value."""
  timeString_lte: String

  """All values greater than the given value."""
  timeString_gt: String

  """All values greater than or equal the given value."""
  timeString_gte: String

  """All values containing the given string."""
  timeString_contains: String

  """All values not containing the given string."""
  timeString_not_contains: String

  """All values starting with the given string."""
  timeString_starts_with: String

  """All values not starting with the given string."""
  timeString_not_starts_with: String

  """All values ending with the given string."""
  timeString_ends_with: String

  """All values not ending with the given string."""
  timeString_not_ends_with: String
  speaker: SpeakerWhereInput
  daySchedule: DayScheduleWhereInput
  track: TrackWhereInput
}

input TalkWhereUniqueInput {
  id: ID
}

type Track implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  name: String
  isPrimary: Boolean
  conferenceEvent: ConferenceEvent
  talks(where: TalkWhereInput, orderBy: TalkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Talk!]
}

"""A connection to a list of items."""
type TrackConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TrackEdge]!
  aggregate: AggregateTrack!
}

input TrackCreateInput {
  status: Status
  name: String
  isPrimary: Boolean
  conferenceEvent: ConferenceEventCreateOneWithoutTracksInput
  talks: TalkCreateManyWithoutTrackInput
}

input TrackCreateManyWithoutConferenceEventInput {
  create: [TrackCreateWithoutConferenceEventInput!]
  connect: [TrackWhereUniqueInput!]
}

input TrackCreateOneWithoutTalksInput {
  create: TrackCreateWithoutTalksInput
  connect: TrackWhereUniqueInput
}

input TrackCreateWithoutConferenceEventInput {
  status: Status
  name: String
  isPrimary: Boolean
  talks: TalkCreateManyWithoutTrackInput
}

input TrackCreateWithoutTalksInput {
  status: Status
  name: String
  isPrimary: Boolean
  conferenceEvent: ConferenceEventCreateOneWithoutTracksInput
}

"""An edge in a connection."""
type TrackEdge {
  """The item at the end of the edge."""
  node: Track!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TrackOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  isPrimary_ASC
  isPrimary_DESC
}

type TrackPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  name: String
  isPrimary: Boolean
}

input TrackScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [TrackScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [TrackScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TrackScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  isPrimary: Boolean

  """All values that are not equal to given value."""
  isPrimary_not: Boolean
}

type TrackSubscriptionPayload {
  mutation: MutationType!
  node: Track
  updatedFields: [String!]
  previousValues: TrackPreviousValues
}

input TrackSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TrackSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TrackSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TrackSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TrackWhereInput
}

input TrackUpdateInput {
  status: Status
  name: String
  isPrimary: Boolean
  conferenceEvent: ConferenceEventUpdateOneWithoutTracksInput
  talks: TalkUpdateManyWithoutTrackInput
}

input TrackUpdateManyDataInput {
  status: Status
  name: String
  isPrimary: Boolean
}

input TrackUpdateManyMutationInput {
  status: Status
  name: String
  isPrimary: Boolean
}

input TrackUpdateManyWithoutConferenceEventInput {
  create: [TrackCreateWithoutConferenceEventInput!]
  connect: [TrackWhereUniqueInput!]
  set: [TrackWhereUniqueInput!]
  disconnect: [TrackWhereUniqueInput!]
  delete: [TrackWhereUniqueInput!]
  update: [TrackUpdateWithWhereUniqueWithoutConferenceEventInput!]
  updateMany: [TrackUpdateManyWithWhereNestedInput!]
  deleteMany: [TrackScalarWhereInput!]
  upsert: [TrackUpsertWithWhereUniqueWithoutConferenceEventInput!]
}

input TrackUpdateManyWithWhereNestedInput {
  where: TrackScalarWhereInput!
  data: TrackUpdateManyDataInput!
}

input TrackUpdateOneWithoutTalksInput {
  create: TrackCreateWithoutTalksInput
  connect: TrackWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: TrackUpdateWithoutTalksDataInput
  upsert: TrackUpsertWithoutTalksInput
}

input TrackUpdateWithoutConferenceEventDataInput {
  status: Status
  name: String
  isPrimary: Boolean
  talks: TalkUpdateManyWithoutTrackInput
}

input TrackUpdateWithoutTalksDataInput {
  status: Status
  name: String
  isPrimary: Boolean
  conferenceEvent: ConferenceEventUpdateOneWithoutTracksInput
}

input TrackUpdateWithWhereUniqueWithoutConferenceEventInput {
  where: TrackWhereUniqueInput!
  data: TrackUpdateWithoutConferenceEventDataInput!
}

input TrackUpsertWithoutTalksInput {
  update: TrackUpdateWithoutTalksDataInput!
  create: TrackCreateWithoutTalksInput!
}

input TrackUpsertWithWhereUniqueWithoutConferenceEventInput {
  where: TrackWhereUniqueInput!
  update: TrackUpdateWithoutConferenceEventDataInput!
  create: TrackCreateWithoutConferenceEventInput!
}

input TrackWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [TrackWhereInput!]

  """Logical OR on all given filters."""
  OR: [TrackWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TrackWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  isPrimary: Boolean

  """All values that are not equal to given value."""
  isPrimary_not: Boolean
  conferenceEvent: ConferenceEventWhereInput
  talks_every: TalkWhereInput
  talks_some: TalkWhereInput
  talks_none: TalkWhereInput
}

input TrackWhereUniqueInput {
  id: ID
}

type Workshop implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String
  description: String
  speaker: Speaker
  daySchedules(where: DayScheduleWhereInput, orderBy: DayScheduleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DaySchedule!]
  content: [String!]!
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
}

"""A connection to a list of items."""
type WorkshopConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [WorkshopEdge]!
  aggregate: AggregateWorkshop!
}

input WorkshopCreatecontentInput {
  set: [String!]
}

input WorkshopCreateInput {
  status: Status
  title: String
  description: String
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
  content: WorkshopCreatecontentInput
  speaker: SpeakerCreateOneWithoutWorkshopsInput
  daySchedules: DayScheduleCreateManyWithoutWorkshopsInput
}

input WorkshopCreateManyWithoutDaySchedulesInput {
  create: [WorkshopCreateWithoutDaySchedulesInput!]
  connect: [WorkshopWhereUniqueInput!]
}

input WorkshopCreateManyWithoutSpeakerInput {
  create: [WorkshopCreateWithoutSpeakerInput!]
  connect: [WorkshopWhereUniqueInput!]
}

input WorkshopCreateWithoutDaySchedulesInput {
  status: Status
  title: String
  description: String
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
  content: WorkshopCreatecontentInput
  speaker: SpeakerCreateOneWithoutWorkshopsInput
}

input WorkshopCreateWithoutSpeakerInput {
  status: Status
  title: String
  description: String
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
  content: WorkshopCreatecontentInput
  daySchedules: DayScheduleCreateManyWithoutWorkshopsInput
}

"""An edge in a connection."""
type WorkshopEdge {
  """The item at the end of the edge."""
  node: Workshop!

  """A cursor for use in pagination."""
  cursor: String!
}

enum WorkshopOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  prerequisites_ASC
  prerequisites_DESC
  additionalInfo_ASC
  additionalInfo_DESC
  level_ASC
  level_DESC
  slogan_ASC
  slogan_DESC
  code_ASC
  code_DESC
}

type WorkshopPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String
  description: String
  content: [String!]!
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
}

input WorkshopScalarWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [WorkshopScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [WorkshopScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WorkshopScalarWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  prerequisites: String

  """All values that are not equal to given value."""
  prerequisites_not: String

  """All values that are contained in given list."""
  prerequisites_in: [String!]

  """All values that are not contained in given list."""
  prerequisites_not_in: [String!]

  """All values less than the given value."""
  prerequisites_lt: String

  """All values less than or equal the given value."""
  prerequisites_lte: String

  """All values greater than the given value."""
  prerequisites_gt: String

  """All values greater than or equal the given value."""
  prerequisites_gte: String

  """All values containing the given string."""
  prerequisites_contains: String

  """All values not containing the given string."""
  prerequisites_not_contains: String

  """All values starting with the given string."""
  prerequisites_starts_with: String

  """All values not starting with the given string."""
  prerequisites_not_starts_with: String

  """All values ending with the given string."""
  prerequisites_ends_with: String

  """All values not ending with the given string."""
  prerequisites_not_ends_with: String
  additionalInfo: String

  """All values that are not equal to given value."""
  additionalInfo_not: String

  """All values that are contained in given list."""
  additionalInfo_in: [String!]

  """All values that are not contained in given list."""
  additionalInfo_not_in: [String!]

  """All values less than the given value."""
  additionalInfo_lt: String

  """All values less than or equal the given value."""
  additionalInfo_lte: String

  """All values greater than the given value."""
  additionalInfo_gt: String

  """All values greater than or equal the given value."""
  additionalInfo_gte: String

  """All values containing the given string."""
  additionalInfo_contains: String

  """All values not containing the given string."""
  additionalInfo_not_contains: String

  """All values starting with the given string."""
  additionalInfo_starts_with: String

  """All values not starting with the given string."""
  additionalInfo_not_starts_with: String

  """All values ending with the given string."""
  additionalInfo_ends_with: String

  """All values not ending with the given string."""
  additionalInfo_not_ends_with: String
  level: String

  """All values that are not equal to given value."""
  level_not: String

  """All values that are contained in given list."""
  level_in: [String!]

  """All values that are not contained in given list."""
  level_not_in: [String!]

  """All values less than the given value."""
  level_lt: String

  """All values less than or equal the given value."""
  level_lte: String

  """All values greater than the given value."""
  level_gt: String

  """All values greater than or equal the given value."""
  level_gte: String

  """All values containing the given string."""
  level_contains: String

  """All values not containing the given string."""
  level_not_contains: String

  """All values starting with the given string."""
  level_starts_with: String

  """All values not starting with the given string."""
  level_not_starts_with: String

  """All values ending with the given string."""
  level_ends_with: String

  """All values not ending with the given string."""
  level_not_ends_with: String
  slogan: String

  """All values that are not equal to given value."""
  slogan_not: String

  """All values that are contained in given list."""
  slogan_in: [String!]

  """All values that are not contained in given list."""
  slogan_not_in: [String!]

  """All values less than the given value."""
  slogan_lt: String

  """All values less than or equal the given value."""
  slogan_lte: String

  """All values greater than the given value."""
  slogan_gt: String

  """All values greater than or equal the given value."""
  slogan_gte: String

  """All values containing the given string."""
  slogan_contains: String

  """All values not containing the given string."""
  slogan_not_contains: String

  """All values starting with the given string."""
  slogan_starts_with: String

  """All values not starting with the given string."""
  slogan_not_starts_with: String

  """All values ending with the given string."""
  slogan_ends_with: String

  """All values not ending with the given string."""
  slogan_not_ends_with: String
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
}

type WorkshopSubscriptionPayload {
  mutation: MutationType!
  node: Workshop
  updatedFields: [String!]
  previousValues: WorkshopPreviousValues
}

input WorkshopSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [WorkshopSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [WorkshopSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WorkshopSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: WorkshopWhereInput
}

input WorkshopUpdatecontentInput {
  set: [String!]
}

input WorkshopUpdateInput {
  status: Status
  title: String
  description: String
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
  content: WorkshopUpdatecontentInput
  speaker: SpeakerUpdateOneWithoutWorkshopsInput
  daySchedules: DayScheduleUpdateManyWithoutWorkshopsInput
}

input WorkshopUpdateManyDataInput {
  status: Status
  title: String
  description: String
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
  content: WorkshopUpdatecontentInput
}

input WorkshopUpdateManyMutationInput {
  status: Status
  title: String
  description: String
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
  content: WorkshopUpdatecontentInput
}

input WorkshopUpdateManyWithoutDaySchedulesInput {
  create: [WorkshopCreateWithoutDaySchedulesInput!]
  connect: [WorkshopWhereUniqueInput!]
  set: [WorkshopWhereUniqueInput!]
  disconnect: [WorkshopWhereUniqueInput!]
  delete: [WorkshopWhereUniqueInput!]
  update: [WorkshopUpdateWithWhereUniqueWithoutDaySchedulesInput!]
  updateMany: [WorkshopUpdateManyWithWhereNestedInput!]
  deleteMany: [WorkshopScalarWhereInput!]
  upsert: [WorkshopUpsertWithWhereUniqueWithoutDaySchedulesInput!]
}

input WorkshopUpdateManyWithoutSpeakerInput {
  create: [WorkshopCreateWithoutSpeakerInput!]
  connect: [WorkshopWhereUniqueInput!]
  set: [WorkshopWhereUniqueInput!]
  disconnect: [WorkshopWhereUniqueInput!]
  delete: [WorkshopWhereUniqueInput!]
  update: [WorkshopUpdateWithWhereUniqueWithoutSpeakerInput!]
  updateMany: [WorkshopUpdateManyWithWhereNestedInput!]
  deleteMany: [WorkshopScalarWhereInput!]
  upsert: [WorkshopUpsertWithWhereUniqueWithoutSpeakerInput!]
}

input WorkshopUpdateManyWithWhereNestedInput {
  where: WorkshopScalarWhereInput!
  data: WorkshopUpdateManyDataInput!
}

input WorkshopUpdateWithoutDaySchedulesDataInput {
  status: Status
  title: String
  description: String
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
  content: WorkshopUpdatecontentInput
  speaker: SpeakerUpdateOneWithoutWorkshopsInput
}

input WorkshopUpdateWithoutSpeakerDataInput {
  status: Status
  title: String
  description: String
  prerequisites: String
  additionalInfo: String
  level: String
  slogan: String
  code: String
  content: WorkshopUpdatecontentInput
  daySchedules: DayScheduleUpdateManyWithoutWorkshopsInput
}

input WorkshopUpdateWithWhereUniqueWithoutDaySchedulesInput {
  where: WorkshopWhereUniqueInput!
  data: WorkshopUpdateWithoutDaySchedulesDataInput!
}

input WorkshopUpdateWithWhereUniqueWithoutSpeakerInput {
  where: WorkshopWhereUniqueInput!
  data: WorkshopUpdateWithoutSpeakerDataInput!
}

input WorkshopUpsertWithWhereUniqueWithoutDaySchedulesInput {
  where: WorkshopWhereUniqueInput!
  update: WorkshopUpdateWithoutDaySchedulesDataInput!
  create: WorkshopCreateWithoutDaySchedulesInput!
}

input WorkshopUpsertWithWhereUniqueWithoutSpeakerInput {
  where: WorkshopWhereUniqueInput!
  update: WorkshopUpdateWithoutSpeakerDataInput!
  create: WorkshopCreateWithoutSpeakerInput!
}

input WorkshopWhereInput {
  _search: String

  """Logical AND on all given filters."""
  AND: [WorkshopWhereInput!]

  """Logical OR on all given filters."""
  OR: [WorkshopWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [WorkshopWhereInput!]
  status: Status

  """All values that are not equal to given value."""
  status_not: Status

  """All values that are contained in given list."""
  status_in: [Status!]

  """All values that are not contained in given list."""
  status_not_in: [Status!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  prerequisites: String

  """All values that are not equal to given value."""
  prerequisites_not: String

  """All values that are contained in given list."""
  prerequisites_in: [String!]

  """All values that are not contained in given list."""
  prerequisites_not_in: [String!]

  """All values less than the given value."""
  prerequisites_lt: String

  """All values less than or equal the given value."""
  prerequisites_lte: String

  """All values greater than the given value."""
  prerequisites_gt: String

  """All values greater than or equal the given value."""
  prerequisites_gte: String

  """All values containing the given string."""
  prerequisites_contains: String

  """All values not containing the given string."""
  prerequisites_not_contains: String

  """All values starting with the given string."""
  prerequisites_starts_with: String

  """All values not starting with the given string."""
  prerequisites_not_starts_with: String

  """All values ending with the given string."""
  prerequisites_ends_with: String

  """All values not ending with the given string."""
  prerequisites_not_ends_with: String
  additionalInfo: String

  """All values that are not equal to given value."""
  additionalInfo_not: String

  """All values that are contained in given list."""
  additionalInfo_in: [String!]

  """All values that are not contained in given list."""
  additionalInfo_not_in: [String!]

  """All values less than the given value."""
  additionalInfo_lt: String

  """All values less than or equal the given value."""
  additionalInfo_lte: String

  """All values greater than the given value."""
  additionalInfo_gt: String

  """All values greater than or equal the given value."""
  additionalInfo_gte: String

  """All values containing the given string."""
  additionalInfo_contains: String

  """All values not containing the given string."""
  additionalInfo_not_contains: String

  """All values starting with the given string."""
  additionalInfo_starts_with: String

  """All values not starting with the given string."""
  additionalInfo_not_starts_with: String

  """All values ending with the given string."""
  additionalInfo_ends_with: String

  """All values not ending with the given string."""
  additionalInfo_not_ends_with: String
  level: String

  """All values that are not equal to given value."""
  level_not: String

  """All values that are contained in given list."""
  level_in: [String!]

  """All values that are not contained in given list."""
  level_not_in: [String!]

  """All values less than the given value."""
  level_lt: String

  """All values less than or equal the given value."""
  level_lte: String

  """All values greater than the given value."""
  level_gt: String

  """All values greater than or equal the given value."""
  level_gte: String

  """All values containing the given string."""
  level_contains: String

  """All values not containing the given string."""
  level_not_contains: String

  """All values starting with the given string."""
  level_starts_with: String

  """All values not starting with the given string."""
  level_not_starts_with: String

  """All values ending with the given string."""
  level_ends_with: String

  """All values not ending with the given string."""
  level_not_ends_with: String
  slogan: String

  """All values that are not equal to given value."""
  slogan_not: String

  """All values that are contained in given list."""
  slogan_in: [String!]

  """All values that are not contained in given list."""
  slogan_not_in: [String!]

  """All values less than the given value."""
  slogan_lt: String

  """All values less than or equal the given value."""
  slogan_lte: String

  """All values greater than the given value."""
  slogan_gt: String

  """All values greater than or equal the given value."""
  slogan_gte: String

  """All values containing the given string."""
  slogan_contains: String

  """All values not containing the given string."""
  slogan_not_contains: String

  """All values starting with the given string."""
  slogan_starts_with: String

  """All values not starting with the given string."""
  slogan_not_starts_with: String

  """All values ending with the given string."""
  slogan_ends_with: String

  """All values not ending with the given string."""
  slogan_not_ends_with: String
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  speaker: SpeakerWhereInput
  daySchedules_every: DayScheduleWhereInput
  daySchedules_some: DayScheduleWhereInput
  daySchedules_none: DayScheduleWhereInput
}

input WorkshopWhereUniqueInput {
  id: ID
}
